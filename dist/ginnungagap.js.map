{"version":3,"file":"ginnungagap.js","mappings":"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","sources":["webpack://elfland-glider/./src/shim/requestIdleCallback.js","webpack://elfland-glider/webpack/bootstrap","webpack://elfland-glider/./src/elfland-utils.js","webpack://elfland-glider/./src/state.js","webpack://elfland-glider/./ginnungagap/ginnungagap.js"],"sourcesContent":["/*!\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n \n/*\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n */\nwindow.requestIdleCallback = window.requestIdleCallback ||\n  function (cb) {\n    return setTimeout(function () {\n      var start = Date.now();\n      cb({ \n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  }\n\nwindow.cancelIdleCallback = window.cancelIdleCallback ||\n  function (id) {\n    clearTimeout(id);\n  } ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// elfland-utils.js - common functions for Elfland Glider\n// Copyright © 2018-2019 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\n\nfunction goFullscreenLandscape() {\n    // desktop is fine without fullscreen (which can be enabled via headset button, anyway)\n    if (!isMagicWindow()) {return;}\n\n    let canvasEl = document.querySelector('canvas.a-canvas');\n    let requestFullscreen =\n        canvasEl.requestFullscreen ||\n        canvasEl.webkitRequestFullscreen ||\n        canvasEl.mozRequestFullScreen ||  // The capitalized `S` is not a typo.\n        canvasEl.msRequestFullscreen;\n    let promise;\n    if (requestFullscreen) {\n        promise = requestFullscreen.apply(canvasEl);\n    }\n    if (!(promise && promise.then)) {\n        promise = Promise.resolve();\n    }\n    promise.then(lockLandscapeOrientation, lockLandscapeOrientation);\n}\n\nfunction lockLandscapeOrientation() {\n    if (screen.orientation && screen.orientation.lock) {\n        screen.orientation.lock(\"landscape\").then(response => {\n            console.log(\"screen orientation locked:\", response);\n        }).catch(err => {\n            console.warn(\"screen orientation didn't lock:\", err);\n        });\n    }\n}\n\n\nfunction isDesktop() {\n    return ! (AFRAME.utils.device.isMobile() || AFRAME.utils.device.isMobileVR());\n}\n\nfunction isMagicWindow() {\n    return AFRAME.utils.device.isMobile() && ! AFRAME.scenes[0].is(\"vr-mode\");\n}\n\n\nfunction calcPosChange(verticalAngleDeg, horizontalAngleDeg, distance) {\n    let verticalAngleRad = verticalAngleDeg/180*Math.PI;\n    let altitudeChange = distance * Math.sin(verticalAngleRad);\n\n    let horizontalDistance = distance * Math.cos(verticalAngleRad);\n    let horizontalAngleRad = horizontalAngleDeg/180*Math.PI;\n    return {x: horizontalDistance * Math.cos(horizontalAngleRad),\n        y: altitudeChange,\n        z: -horizontalDistance * Math.sin(horizontalAngleRad)};\n}\n\n\nvar environmentalSound = null;\n\n/**\n * Sets the background sound for a world. It is paused when the tab is hidden.\n * @param url string or Array of strings\n * @param volume number between 0.0 and 1.0\n */\nfunction setEnvironmentalSound(url, volume) {\n    environmentalSound = new Howl({\n        src: url,\n        autoplay: true,\n        loop: true,\n        volume: volume || 1.0,\n        html5: false,\n        onplayerror: function() {\n            environmentalSound.once('unlock', function() {\n                environmentalSound.play();\n            });\n        }\n    });\n}\n\n/** Starts the background sound for a world, if it wasn't already started. */\nfunction pokeEnvironmentalSound() {\n    if (environmentalSound && ! environmentalSound.playing()) {\n        environmentalSound.play();\n    }\n}\n\ndocument.addEventListener('visibilitychange', () => {\n    if (environmentalSound) {\n        if (document.hidden) {\n            environmentalSound.pause();\n        } else {\n            environmentalSound.play();\n        }\n    }\n}, false);\n\n\n/** Web Monetization */\nif (document.monetization)  {\n    function handleMonetizationStart(evt) {\n        console.log(\"monetization started:\", evt);\n    }\n    document.monetization.addEventListener('monetizationstart', handleMonetizationStart);\n\n    function handleMonetizationStop(evt) {\n        console.log(\"monetization stopped:\", evt);\n    }\n    document.monetization.addEventListener('monetizationstop', handleMonetizationStop);\n} else {\n    console.log(\"no monetization API\");\n}\n\nexport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, setEnvironmentalSound, pokeEnvironmentalSound};\n","// state.js - state model for Elfland Glider\n// Copyright © 2017-2023 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n//\n\nimport './shim/requestIdleCallback'\nimport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, pokeEnvironmentalSound} from './elfland-utils'\n\nconst GRAVITY = 9.807;   // m/s^2\nconst HUMAN_EYE_ELBOW_DISTANCE = 0.56;   // m\nconst DIFFICULTY_VR = 0.75;\nconst DIFFICULTY_MAGIC_WINDOW = 0.6;\nconst DIFFICULTY_KEYBOARD = 0.5;\nconst POWERUP_BOOST = 16;\nconst BAD_CRASH_SPEED = 30;\n\nAFRAME.registerState({\n    initialState: {\n        armatureEl: null,\n        gliderEl: null,\n        cameraEl: null,\n        leftHandEl: null,\n        rightHandEl: null,\n        controllerConnections: {},\n        isAnyPressedLeft: false,\n        isAnyPressedRight: false,\n        xSetting: 0,\n        zSetting: 0,\n        controlStickEl: null,\n        controlNeutralHeight: 0.95,\n        controlMode: 'HEAD',   // or 'HANDS'\n        controlSubmode: 'NONE',   // or 'LEFT' or 'RIGHT'\n        time: 0,\n        difficulty: DIFFICULTY_MAGIC_WINDOW,\n        gliderPosition: {x:-30, y:15, z:30},\n        gliderPositionStart: {x:-30, y:15, z:30},\n        gliderRotationX: 0,\n        gliderRotationY: -45,\n        gliderRotationZ: 0,\n        gliderRotationYStart: -45,\n        isFlying: false,\n        gliderSpeed: 5,\n        numYellowStars: Math.POSITIVE_INFINITY,\n        stars: 0,\n        questComplete: false,\n        inventory: {},   // keyed by object ID\n        hudVisible: true,\n        hudAirspeedAngle: 0,\n        hudAirspeedColor: 'forestgreen',\n        controlsReminderDisplayed: false,\n        debug: false   // no way to enable this yet\n    },\n\n    handlers: {\n        setState: function (state, values) {\n            for (let pName in values) {\n                if (pName !== 'target') {\n                    console.log(\"setting\", pName, values[pName]);\n                    state[pName] = values[pName];\n                }\n            }\n        },\n\n        setArmatureEl: function (state, armatureEl) {\n            this.powerup = new Howl({src: ['../assets/411460__inspectorj__power-up-bright-a.mp3']});\n\n            console.log(\"hasNativeWebXRImplementation:\", window.hasNativeWebXRImplementation);\n            console.log(\"hasNativeWebVRImplementation:\", window.hasNativeWebVRImplementation);\n            console.log(\"isMobile:\", AFRAME.utils.device.isMobile());\n            console.log(\"isMobileVR:\", AFRAME.utils.device.isMobileVR());\n\n            state.armatureEl = armatureEl;\n            state.gliderEl = armatureEl.querySelector('#glider');\n            state.cameraEl = armatureEl.querySelector('[camera]');\n\n            let dustEl = AFRAME.scenes[0].querySelector('a-dust');\n            if (dustEl) {\n                requestIdleCallback(() => {   // delays setup until there's some slack time\n                    dustEl.components.dust.setCamera(state.armatureEl);\n                });\n            }\n\n            let bodyEl = state.armatureEl.querySelector('#body');\n            let wingEl = state.gliderEl.querySelector('#wing');\n            let hudEl = armatureEl.querySelector('#hud');\n            this.adjustForMagicWindow(wingEl);\n            if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected()) {\n                this.adjustHudForVR(hudEl);\n                state.difficulty = DIFFICULTY_VR;\n            } else {\n                this.adjustHudForFlat(hudEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            }\n            AFRAME.scenes[0].addEventListener('enter-vr', (event) => {\n                if (AFRAME.utils.device.checkHeadsetConnected()) {\n                    bodyEl.object3D.position.y = -1.6;\n                    this.adjustHudForVR(hudEl);\n                    this.adjustForMagicWindow(wingEl);\n                    state.difficulty = DIFFICULTY_VR;\n                }\n                pokeEnvironmentalSound();\n            });\n            AFRAME.scenes[0].addEventListener('exit-vr', (event) => {\n                // bodyEl.object3D.position.y = 0;   // Why is this unnecessary?\n                this.adjustHudForFlat(hudEl);\n                this.adjustForMagicWindow(wingEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            });\n\n            if (isDesktop() && !AFRAME.utils.device.checkHeadsetConnected()) {\n                console.log(\"desktop w/o headset; disabling look-controls so keyboard controls can function\");\n                state.cameraEl.setAttribute('look-controls', 'enabled', 'false');\n            }\n\n            state.gliderEl.addEventListener('raycaster-intersection', (evt) => {\n                // Intersection w/ distance 0 is sometimes sent immediately\n                if (evt.detail.intersections.length > 0 && evt.detail.intersections[0].distance > 0) {\n                    console.log(\"CRASH!\", evt.detail.els[0].tagName,\n                        evt.detail.intersections[0].distance,\n                        state.gliderEl.getAttribute('raycaster').far, state.gliderSpeed/4);\n                    AFRAME.scenes[0].emit('hover', {});\n                    let crash = new Howl({src: ['../assets/198876__bone666138__crash.mp3']});\n                    crash.play();\n\n                    setTimeout(() => {\n                        if (state.gliderSpeed >= BAD_CRASH_SPEED) {\n                            sessionStorage.setItem('returnWorld', location.pathname);\n                            location.assign('../ginnungagap/');\n                        } else {\n                            // console.log(\"setting start position\", state.gliderPositionStart);\n                            state.gliderPosition.x = state.gliderPositionStart.x;\n                            state.gliderPosition.y = state.gliderPositionStart.y;\n                            state.gliderPosition.z = state.gliderPositionStart.z;\n                            state.gliderRotationX = 0;\n                            state.gliderRotationY = state.gliderRotationYStart;\n                            state.gliderSpeed = 5;\n                            this.controlStickToNeutral(state);\n                            state.hudAirspeedAngle = 0;\n                            state.hudAirspeedColor = 'forestgreen';\n                            state.cameraEl.object3D.rotation.x = 0;   // only takes effect when look-controls disabled\n                            state.cameraEl.object3D.rotation.y = 0;\n                            state.cameraEl.object3D.rotation.z = 0;\n                            setTimeout(this.showControlsReminder.bind(this, state), 3000);\n                        }\n                    }, 2000)\n                }\n            });\n\n            armatureEl.addEventListener('hitstart', (evt) => {\n                // console.log('hitstart armature:', evt.detail.intersectedEls);\n                evt.detail.intersectedEls.forEach( (el) => {\n                    if (el.classList.contains('powerup')) {\n                        console.log(\"powerup\");\n                        state.gliderSpeed += POWERUP_BOOST;\n                        this.powerup.play();\n                    } else if (el.classList.contains('star')) {\n                        ++state.stars;\n                        console.log(\"collected star\", state.stars, \"of\", state.numYellowStars);\n                        el.parentNode.removeChild(el);\n                        this.ding.play();\n                    } else if ('key' === el.id) {\n                        state.questComplete = true;\n                        let horncall = new Howl({src: ['../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3']});\n                        horncall.play();\n                        el.parentNode.removeChild(el);\n                    } else if (el.classList.contains('proximitySound')) {\n                        let url = el.getAttribute('data-sound-url');\n                        let volume = el.getAttribute('data-sound-volume') || 1.0;\n                        if (url) {\n                            new Howl({src: url, volume: volume, autoplay: true});\n                        }\n                        let text = el.getAttribute('data-text');\n                        let subtitle = AFRAME.scenes[0].querySelector('#subtitle');\n                        if (text && subtitle) {\n                            subtitle.setAttribute('value', text);\n                            setTimeout(() => {\n                                subtitle.setAttribute('value', \"\");\n                            }, 5000);\n                        }\n                   } else if (el.components.link) {\n                       console.log(\"hit link\");\n                       if (! /ginnungagap/.test(location.pathname)) {\n                           sessionStorage.setItem('previousWorld', location.pathname);\n                       }\n                   }\n                });\n            });\n\n            // state doesn't have an init, so we'll register this here.\n            // desktop controls\n            document.addEventListener('keydown', function(evt) {\n                // console.log('keydown:', evt.code);\n                var cameraRotation = state.cameraEl.getAttribute('rotation');\n                switch (evt.code) {\n                    case 'KeyA':\n                    case 'ArrowLeft':\n                        state.cameraEl.object3D.rotation.z += 0.07;\n                        break;\n                    case 'KeyD':\n                    case 'ArrowRight':\n                        state.cameraEl.object3D.rotation.z -= 0.07;\n                        break;\n                    case 'KeyW':\n                    case 'ArrowUp':\n                        state.cameraEl.object3D.rotation.x += 0.045;\n                        break;\n                    case 'KeyS':\n                    case 'ArrowDown':\n                        state.cameraEl.object3D.rotation.x -= 0.045;\n                        break;\n                    case 'Space':\n                        if (!state.isFlying) {\n                            AFRAME.scenes[0].emit('launch', evt);\n                        } else {\n                            if (state.debug) {\n                                AFRAME.scenes[0].emit('hover', evt);\n                            }\n                        }\n                        break;\n                    case 'Enter':\n                        state.hudVisible = ! state.hudVisible;\n                        break;\n                }\n            }, false);\n\n            // two-controller steering\n\n            state.leftHandEl = document.getElementById(\"leftHand\");\n            state.rightHandEl = document.getElementById(\"rightHand\");\n            if (isDesktop()) {\n                state.leftHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n                state.rightHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n            }\n\n            this.leftDownHandler = this.handHandler.bind(this, 'LEFT', 'DOWN', state);\n            this.leftUpHandler = this.handHandler.bind(this, 'LEFT', 'UP', state);\n            this.rightDownHandler = this.handHandler.bind(this, 'RIGHT', 'DOWN', state);\n            this.rightUpHandler = this.handHandler.bind(this, 'RIGHT', 'UP', state);\n\n            state.controlStickEl = document.getElementById('controlStick');\n        },\n\n        controllerconnected: function (state, evt) {   // evt is name and component; this is state obj\n            state.controllerConnections[evt.component.el.id] = true;\n            this.adjustControlMode(state);\n        },\n        controllerdisconnected: function (state, evt) {\n            state.controllerConnections[evt.component.el.id] = false;\n            this.adjustControlMode(state);\n        },\n        adjustControlMode: function (state) {\n            const oldControlMode =  state.controlMode;\n            if (state.controllerConnections.leftHand || state.controllerConnections.rightHand) {\n                state.controlMode = 'HANDS';\n            } else {\n                state.controlMode = 'HEAD';\n            }\n            if (state.controlMode !== oldControlMode) {\n                console.log(\"changed control mode from\", oldControlMode, \"to\", state.controlMode);\n                if (state.controlMode === 'HANDS') {\n                    state.leftHandEl?.addEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl?.addEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl?.addEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl?.addEventListener('buttonup', this.rightUpHandler);\n\n                    this.controlStickToNeutral(state);\n                    state.controlStickEl.object3D.visible = true;\n                } else if (state.controlMode === 'HEAD') {\n                    state.leftHandEl?.removeEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl?.removeEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl?.removeEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl?.removeEventListener('buttonup', this.rightUpHandler);\n\n                    state.controlStickEl.object3D.visible = false;\n                }\n            }\n        },\n        handHandler: function handHandler(handedness, upDown, state, evt) {\n            const wasAnyPressedLeft = state.isAnyPressedLeft;\n            const trackedControlsLeft = state.leftHandEl?.components['tracked-controls'];\n            const buttonsLeft = trackedControlsLeft &&\n                    trackedControlsLeft.controller &&\n                    trackedControlsLeft.controller.gamepad &&\n                    trackedControlsLeft.controller.gamepad.buttons;\n            if (buttonsLeft) {\n                state.isAnyPressedLeft = false;\n                for (let i = 0; i < buttonsLeft.length; ++i) {   // not a JavaScript array\n                    if (buttonsLeft[i].pressed) {\n                        state.isAnyPressedLeft = true;\n                    }\n                }\n            } else if ('LEFT' === handedness) {\n                state.isAnyPressedLeft = 'DOWN' === upDown;   // hack\n            }\n\n            const wasAnyPressedRight = state.isAnyPressedRight;\n            const trackedControlsRight = state.rightHandEl?.components['tracked-controls'];\n            const buttonsRight = trackedControlsRight &&\n                    trackedControlsRight.controller &&\n                    trackedControlsRight.controller.gamepad &&\n                    trackedControlsRight.controller.gamepad.buttons;\n            if (buttonsRight) {\n                state.isAnyPressedRight = false;\n                for (let i = 0; i < buttonsRight.length; ++i) {   // not a JavaScript array\n                    if (buttonsRight[i].pressed) {\n                        state.isAnyPressedRight = true;\n                    }\n                }\n            } else if ('RIGHT' === handedness) {\n                state.isAnyPressedRight = 'DOWN' === upDown;   // hack\n            }\n\n            if (state.isAnyPressedLeft && ! wasAnyPressedLeft) {\n                switch (state.controlSubmode) {\n                    case 'LEFT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'RIGHT':\n                    case 'NONE':\n                        state.controlSubmode = 'LEFT';\n                        break;\n                }\n            } else if (state.isAnyPressedRight && ! wasAnyPressedRight) {\n                switch (state.controlSubmode) {\n                    case 'RIGHT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'LEFT':\n                    case 'NONE':\n                        state.controlSubmode = 'RIGHT';\n                        break;\n                }\n            }\n            console.log(\"controlSubmode:\", state.controlSubmode);\n        },\n        controlStickToNeutral: function (state) {\n            if (state.controlStickEl) {\n                const cameraPos = state.cameraEl.getAttribute(\"position\");\n                state.controlNeutralHeight = cameraPos.y - HUMAN_EYE_ELBOW_DISTANCE;\n                state.controlStickEl.setAttribute('position', {x: 0, y: state.controlNeutralHeight, z: -0.4});\n                state.controlStickEl.setAttribute('rotation', {x: 0, y: 0, z: 0});\n                state.xSetting = 0;\n                state.zSetting = 0;\n            }\n        },\n\n\n        // aframe-button-controls: any controller button, or scene touch\n        buttondown: function (state, action) {\n            // console.log(\"buttondown\", action);\n            if (!state.isFlying) {\n                AFRAME.scenes[0].emit('launch', action);\n            } else {\n                if (state.debug) {\n                    AFRAME.scenes[0].emit('hover', action);\n                }\n            }\n        },\n\n        countYellowStars: function (state, action) {\n            state.numYellowStars = AFRAME.scenes[0].querySelectorAll('.star').length;\n            console.log(\"numYellowStars:\", state.numYellowStars);\n            if (state.numYellowStars) {\n                this.ding = new Howl({src: ['../assets/393633__daronoxus__ding.mp3']});\n            }\n        },\n\n        launch: function (state, action) {\n            console.log(\"launch\", action);\n\n            state.isFlying = true;\n\n            state.controlsReminderDisplayed = false;\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            if (prelaunchHelp) {\n                prelaunchHelp.setAttribute('value', \"\");\n            }\n            goFullscreenLandscape();\n\n            let postlaunchHelp = AFRAME.scenes[0].querySelector('#postlaunchHelp');\n            if (postlaunchHelp && postlaunchHelp.src) {\n                let postlaunchHelpAudio = new Howl({src: [postlaunchHelp.src]});\n                setTimeout(() => {\n                    postlaunchHelpAudio.play();\n                }, 60000);\n            }\n        },\n        hover: function (state, action) {\n            console.log(\"hover\", action);\n\n            state.isFlying = false;\n        },\n\n        loaded: function (state, action) {\n            // console.log(\"loaded\", state, action);\n            let intro = document.getElementById('intro');\n            if (!intro) {\n                this.startInteraction(state);\n            }\n        },\n\n        'enter-vr': function (state) {\n            // console.log(\"enter-vr\");\n            this.startInteraction(state);\n        },\n        'exit-vr': function (state, action) {\n            // console.log(\"exit-vr\", action);\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls for flat screen\n            }\n\n            let intro = document.getElementById('intro');\n            if (intro) {\n                AFRAME.scenes[0].emit('hover', action);\n            }\n        },\n        startInteraction: function (state) {\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls\n            } else {\n                setTimeout(this.showControlsReminder.bind(this, state), 10000);\n            }\n        },\n        showControlsReminder: function (state) {\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            let intro = document.getElementById('intro');\n            if (prelaunchHelp && (!intro || AFRAME.scenes[0].is(\"vr-mode\")) && !state.isFlying) {\n                state.controlsReminderDisplayed = true;\n                if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected() || AFRAME.utils.device.isMobileVR()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nTilt left: turn left\\nTilt right: turn right\\nTilt back: climb & slow down\\nTilt forward: dive & speed up\\nTrigger, button or touchpad: launch\");\n                } else if (AFRAME.utils.device.isMobile()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nRoll your device left: turn left\\nRoll your device right: turn right\\nTilt up: climb & slow down\\nTilt down: dive & speed up\\nTap screen: launch\");\n                } else {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nA: turn left\\nD: turn right\\nW: climb (& slow down)\\nS: dive (& speed up)\\nSpace bar: launch\");\n                }\n            }\n        },\n\n        iterate: function (state, action) {\n            // A pause in the action is better than flying blind\n            action.timeDelta = Math.min(action.timeDelta, 100);\n            state.time += action.timeDelta * state.difficulty;\n\n            switch (state.controlMode) {\n                case \"HEAD\":\n                    let cameraRotation = state.cameraEl.getAttribute('rotation');\n                    if (!cameraRotation) {\n                        console.warn(\"camera rotation not available\");\n                        return;\n                    }\n\n                    let cameraRotX = isMagicWindow() ? cameraRotation.x + 20 : cameraRotation.x;\n                    state.xSetting = cameraRotX;\n                    state.zSetting = cameraRotation.z;\n                    break;\n                case \"HANDS\":\n                    const leftHandPos = state.leftHandEl?.getAttribute(\"position\");\n                    const rightHandPos = state.rightHandEl?.getAttribute(\"position\");\n                    switch (state.controlSubmode) {\n                        case \"LEFT\":\n                            const leftHandRot = state.leftHandEl?.getAttribute('rotation');\n\n                            state.controlStickEl.setAttribute('position', leftHandPos);\n                            state.controlStickEl.setAttribute('rotation', leftHandRot);\n\n                            state.xSetting = leftHandRot.x;\n                            state.zSetting = leftHandRot.z;\n                            break;\n                        case \"RIGHT\":\n                            const rightHandRot = state.rightHandEl?.getAttribute('rotation');\n\n                            state.controlStickEl.setAttribute('position', rightHandPos);\n                            state.controlStickEl.setAttribute('rotation', rightHandRot);\n\n                            state.xSetting = rightHandRot.x;\n                            state.zSetting = rightHandRot.z;\n                            break;\n                        case \"NONE\":\n                            // TODO: slow decay to neutral?\n                            break;\n                    }\n                    break;\n            }\n            let xDiff = state.xSetting - state.gliderRotationX;\n            let xChange = (xDiff + Math.sign(xDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(xChange) > Math.abs(xDiff)) {\n                xChange = xDiff;\n            }\n            let newXrot = state.gliderRotationX + xChange;\n            newXrot = Math.max(newXrot, -75);\n            newXrot = Math.min(newXrot, 75);\n            state.gliderRotationX = newXrot;\n\n            let zDiff = state.zSetting - state.gliderRotationZ;\n            let zChange = (zDiff + Math.sign(zDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(zChange) > Math.abs(zDiff)) {\n                zChange = zDiff;\n            }\n            let newZrot = state.gliderRotationZ + zChange;\n            newZrot = Math.max(newZrot, -70);\n            newZrot = Math.min(newZrot, 70);\n            state.gliderRotationZ = newZrot;\n\n            let deltaHeading = state.gliderRotationZ * action.timeDelta / 1000;\n            state.gliderRotationY = (state.gliderRotationY + deltaHeading + 180) % 360 - 180;\n\n            if (state.isFlying) {\n                let distance = state.gliderSpeed * action.timeDelta / 1000;\n\n                let posChange = calcPosChange(state.gliderRotationX, state.gliderRotationY+90, distance);\n                let altitudeChange = posChange.y;\n                state.gliderPosition.x += posChange.x;\n                state.gliderPosition.y += altitudeChange;\n                state.gliderPosition.z += posChange.z;\n\n                let speedChange = (-Math.sign(altitudeChange) * Math.sqrt(2 * GRAVITY * Math.abs(altitudeChange)) -\n                                0.0005 * state.gliderSpeed * state.gliderSpeed)\n                        * action.timeDelta / 1000;\n                state.gliderSpeed = Math.max(state.gliderSpeed + speedChange, 0.1);\n                state.gliderSpeed = Math.min(state.gliderSpeed, 99.4);\n\n                state.hudAirspeedAngle = Math.min(state.gliderSpeed * 9, 359);\n                state.hudAirspeedColor = state.gliderSpeed < BAD_CRASH_SPEED ? 'forestgreen' : 'goldenrod';\n\n                state.gliderEl.setAttribute('raycaster', 'far', state.gliderSpeed/4);\n            }\n        },\n\n        placeInGliderPath: function (state, action) {\n            // console.log(\"placeInGliderPath:\", action);\n            let verticalAngleDeg = state.gliderRotationX + (Math.random()-0.5) * action.variation;\n            let horizontalAngleDeg = state.gliderRotationY + 90 + (Math.random()-0.5) * action.variation;\n            let posChange = calcPosChange(verticalAngleDeg, horizontalAngleDeg, action.distance);\n            let newPos = {x: state.gliderPosition.x + posChange.x,\n                y: state.gliderPosition.y + posChange.y,\n                z: state.gliderPosition.z + posChange.z};\n            action.el.setAttribute('position', newPos);\n            action.el.setAttribute('rotation', 'y', state.gliderRotationY);\n        },\n\n        adjustForMagicWindow: function (wingEl) {\n            if (! isMagicWindow()) {\n                wingEl.object3D.rotation.x = 0;\n                wingEl.object3D.scale.set(1, 1, 1);\n            } else {\n                wingEl.object3D.rotation.x = THREE.MathUtils.degToRad(-30.0);\n                wingEl.object3D.scale.set(1, 1, 3);\n            }\n        },\n\n        adjustHudForVR: function (hudEl) {\n            if (AFRAME.utils.device.isMobile()) {\n                hudEl.object3D.position.x = 0.30;\n                hudEl.object3D.position.y = 0.30;\n            } else {\n                hudEl.object3D.position.x = 0.40;\n                hudEl.object3D.position.y = 0.42;\n            }\n            hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(25.0);\n            hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-15.0);\n        },\n\n        adjustHudForFlat: function (hudEl) {\n            if (isDesktop()) {\n                hudEl.object3D.position.x = 0.85;\n                hudEl.object3D.position.y = 0.45;\n                hudEl.object3D.rotation.x = 0.0;\n                hudEl.object3D.rotation.y = 0.0;\n            } else {\n                hudEl.object3D.position.x = 0.70;\n                hudEl.object3D.position.y = 0.15;\n                hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(15.0);\n                hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-20.0);\n            }\n        }\n    },\n\n    computeState: function (newState, payload) {\n        try {\n            if (!newState.questComplete) {\n                newState.questComplete = newState.numYellowStars <= 0 || newState.stars / newState.numYellowStars >= 0.95;\n                if (newState.questComplete) {\n                    let horncall = new Howl({src: ['../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3']});\n                    horncall.play();\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n});\n\nAFRAME.registerComponent('armature-tick-state', {\n    init: function () {\n        AFRAME.scenes[0].emit('setArmatureEl', this.el);\n    },\n\n    tick: function (time, timeDelta) {\n        AFRAME.scenes[0].emit('iterate', {time: time, timeDelta: timeDelta});\n    }\n});\n","// ginnungagap.js - the boring result of a high-speed crash in Elfland Glider\n// Copyright © 2019 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\nimport {isDesktop, setEnvironmentalSound} from '../src/elfland-utils'\n\nimport '../src/state.js'\n\nAFRAME.registerComponent('ginnungagap', {\n    init: function () {\n        let sceneEl = this.el;\n\n        setEnvironmentalSound('100495__jakobthiesen__light-rain-in-forest.ogg', 1.0);\n        // rain visual is too resource-intensive for mobile\n        if (isDesktop()) {\n            let rain = document.createElement('a-entity');\n            rain.setAttribute('particle-system', {preset: 'rain', particleCount: 500});\n            rain.setAttribute('bind__position', 'gliderPosition');\n            sceneEl.appendChild(rain);\n        }\n\n        const maxClouds = isDesktop() ? 1200 : 300;\n        this.clouds = [];\n        let clouds = this.clouds;\n        setTimeout(() => {\n            // adds clouds all around\n            for (let i=Math.floor(maxClouds*0.5); i>0; --i) {\n                placeCloud(200 + 1500*i/Math.floor(maxClouds*0.5), 270);\n            }\n        }, 4);\n        // adds cloud in front of glider\n        setInterval(placeCloud, 1000);\n        function placeCloud(distance=900+Math.random()*300, variation=80) {\n            if (clouds.length >= maxClouds) {\n                sceneEl.components.pool__clouds.returnEntity(clouds.shift());\n            }\n\n            let cloudEl = sceneEl.components.pool__clouds.requestEntity(true);\n            let opacity=0;\n            cloudEl.setAttribute('material', 'opacity', opacity);\n            let intervalID = setInterval( () => {\n                opacity += 1 / 2400;\n                cloudEl.setAttribute('material', 'opacity', opacity);\n                if (opacity >= 0.5) {\n                    clearInterval(intervalID);\n                }\n            }, 16);\n            AFRAME.scenes[0].emit('placeInGliderPath', {el: cloudEl, distance: distance, variation:variation});\n            // cloudEl.object3D.rotation.z = Math.floor(Math.random()*2) * Math.PI + (Math.random()-0.5) * 0.75;\n            cloudEl.object3D.rotation.z = Math.random()*2*Math.PI;\n            clouds.push(cloudEl);\n        }\n\n        this.armaturePosition = document.getElementById('armature').object3D.position;\n\n\n        var returnPath = sessionStorage.getItem('returnWorld');\n        if (returnPath) {\n            var returnPortal = document.getElementById('returnPortal');\n            returnPortal.setAttribute('link','href', returnPath);\n            returnPortal.setAttribute('link','image', returnPath + 'screenshot.png');\n        }\n\n        setInterval( () => {\n            let returnPortalEl = document.getElementById('returnPortal');\n            returnPortalEl.setAttribute('visible', 'true');\n            AFRAME.scenes[0].emit('placeInGliderPath', {el: returnPortalEl, distance: 100, variation:45});\n        }, 60000);\n    },\n\n    play: function () {\n        this.el.emit('launch', \"ginnungagap play\");\n    },\n\n    tick: function () {\n        this.clouds.forEach(cloud => {\n            if (this.armaturePosition.distanceTo(cloud.object3D.position) > 150) {\n                let rotationZ = cloud.object3D.rotation.z;\n                cloud.object3D.lookAt(this.armaturePosition);\n                cloud.object3D.rotation.z = rotationZ;\n            }\n        });\n    }\n});\n"],"names":["window","requestIdleCallback","cb","setTimeout","start","Date","now","didTimeout","timeRemaining","Math","max","cancelIdleCallback","id","clearTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","lockLandscapeOrientation","screen","orientation","lock","then","response","console","log","catch","err","warn","isDesktop","AFRAME","utils","device","isMobile","isMobileVR","isMagicWindow","scenes","is","calcPosChange","verticalAngleDeg","horizontalAngleDeg","distance","verticalAngleRad","PI","altitudeChange","sin","horizontalDistance","cos","horizontalAngleRad","x","y","z","environmentalSound","document","addEventListener","hidden","pause","play","monetization","handleMonetizationStart","evt","handleMonetizationStop","registerState","initialState","armatureEl","gliderEl","cameraEl","leftHandEl","rightHandEl","controllerConnections","isAnyPressedLeft","isAnyPressedRight","xSetting","zSetting","controlStickEl","controlNeutralHeight","controlMode","controlSubmode","time","difficulty","gliderPosition","gliderPositionStart","gliderRotationX","gliderRotationY","gliderRotationZ","gliderRotationYStart","isFlying","gliderSpeed","numYellowStars","POSITIVE_INFINITY","stars","questComplete","inventory","hudVisible","hudAirspeedAngle","hudAirspeedColor","controlsReminderDisplayed","debug","handlers","setState","state","values","pName","setArmatureEl","this","powerup","Howl","src","hasNativeWebXRImplementation","hasNativeWebVRImplementation","querySelector","dustEl","components","dust","setCamera","bodyEl","wingEl","hudEl","adjustForMagicWindow","checkHeadsetConnected","adjustHudForVR","adjustHudForFlat","event","object3D","position","playing","setAttribute","detail","intersections","length","els","tagName","getAttribute","far","emit","sessionStorage","setItem","location","pathname","assign","controlStickToNeutral","rotation","showControlsReminder","bind","intersectedEls","forEach","el","classList","contains","parentNode","removeChild","ding","url","volume","autoplay","text","subtitle","link","test","code","getElementById","leftDownHandler","handHandler","leftUpHandler","rightDownHandler","rightUpHandler","controllerconnected","component","adjustControlMode","controllerdisconnected","oldControlMode","leftHand","rightHand","visible","removeEventListener","handedness","upDown","wasAnyPressedLeft","trackedControlsLeft","buttonsLeft","controller","gamepad","buttons","i","pressed","wasAnyPressedRight","trackedControlsRight","buttonsRight","cameraPos","buttondown","action","countYellowStars","querySelectorAll","launch","prelaunchHelp","promise","canvasEl","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","apply","Promise","resolve","goFullscreenLandscape","postlaunchHelp","postlaunchHelpAudio","hover","loaded","startInteraction","intro","iterate","timeDelta","min","cameraRotation","cameraRotX","leftHandPos","rightHandPos","leftHandRot","rightHandRot","xDiff","xChange","sign","abs","newXrot","zDiff","zChange","newZrot","deltaHeading","posChange","speedChange","sqrt","placeInGliderPath","random","variation","newPos","THREE","MathUtils","degToRad","scale","set","computeState","newState","payload","error","registerComponent","init","tick","sceneEl","loop","html5","onplayerror","once","rain","createElement","preset","particleCount","appendChild","maxClouds","clouds","placeCloud","pool__clouds","returnEntity","shift","cloudEl","requestEntity","opacity","intervalID","setInterval","clearInterval","push","floor","armaturePosition","returnPath","getItem","returnPortal","returnPortalEl","cloud","distanceTo","rotationZ","lookAt"],"sourceRoot":""}