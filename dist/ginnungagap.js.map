{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/elfland-utils.js","webpack:///./src/state.js","webpack:///./ginnungagap/ginnungagap.js","webpack:///./src/shim/requestIdleCallback.js"],"names":["enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","goFullscreenLandscape","isMagicWindow","promise","canvasEl","document","querySelector","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","apply","then","Promise","resolve","lockLandscapeOrientation","screen","orientation","lock","response","console","log","catch","err","warn","isDesktop","AFRAME","utils","device","isMobile","isMobileVR","scenes","is","calcPosChange","verticalAngleDeg","horizontalAngleDeg","distance","verticalAngleRad","Math","PI","altitudeChange","sin","horizontalDistance","cos","horizontalAngleRad","x","y","z","environmentalSound","setEnvironmentalSound","url","volume","Howl","src","autoplay","loop","html5","onplayerror","once","play","pokeEnvironmentalSound","playing","addEventListener","hidden","pause","monetization","evt","registerState","initialState","armatureEl","gliderEl","cameraEl","leftHandEl","rightHandEl","controllerConnections","isAnyPressedLeft","isAnyPressedRight","xSetting","zSetting","controlStickEl","controlNeutralHeight","controlMode","controlSubmode","time","difficulty","gliderPosition","gliderPositionStart","gliderRotationX","gliderRotationY","gliderRotationZ","gliderRotationYStart","isFlying","gliderSpeed","numYellowStars","POSITIVE_INFINITY","stars","questComplete","inventory","hudVisible","hudText","controlsReminderDisplayed","debug","handlers","setState","state","values","pName","setArmatureEl","this","powerup","window","hasNativeWebXRImplementation","hasNativeWebVRImplementation","dustEl","requestIdleCallback","components","dust","setCamera","bodyEl","wingEl","hudEl","adjustForMagicWindow","checkHeadsetConnected","adjustHudForVR","adjustHudForFlat","event","object3D","position","setAttribute","detail","intersections","length","els","tagName","getAttribute","far","emit","setTimeout","sessionStorage","setItem","location","pathname","assign","controlStickToNeutral","rotation","showControlsReminder","intersectedEls","forEach","el","classList","contains","parentNode","removeChild","ding","text","subtitle","link","test","code","getElementById","leftDownHandler","handHandler","leftUpHandler","rightDownHandler","rightUpHandler","controllerconnected","component","id","adjustControlMode","controllerdisconnected","oldControlMode","leftHand","rightHand","visible","removeEventListener","handedness","upDown","wasAnyPressedLeft","trackedControlsLeft","buttonsLeft","controller","gamepad","buttons","i","pressed","wasAnyPressedRight","trackedControlsRight","buttonsRight","cameraPos","buttondown","action","countYellowStars","querySelectorAll","launch","prelaunchHelp","postlaunchHelp","postlaunchHelpAudio","hover","loaded","startInteraction","intro","iterate","timeDelta","min","cameraRotation","cameraRotX","leftHandPos","rightHandPos","leftHandRot","rightHandRot","xDiff","xChange","sign","abs","newXrot","max","zDiff","zChange","newZrot","deltaHeading","posChange","speedChange","sqrt","toFixed","placeInGliderPath","random","variation","newPos","THREE","degToRad","scale","set","computeState","newState","payload","oldQuestComplete","error","registerComponent","init","tick","sceneEl","rain","createElement","preset","particleCount","appendChild","maxClouds","clouds","placeCloud","pool__clouds","returnEntity","shift","cloudEl","requestEntity","opacity","intervalID","setInterval","clearInterval","push","floor","armaturePosition","returnPath","getItem","returnPortal","returnPortalEl","cloud","distanceTo","rotationZ","lookAt","cb","start","Date","now","didTimeout","timeRemaining","cancelIdleCallback","clearTimeout"],"mappings":"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","file":"ginnungagap.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","// elfland-utils.js - common functions for Elfland Glider\n// Copyright © 2018-2019 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\n\nfunction goFullscreenLandscape() {\n    // desktop is fine without fullscreen (which can be enabled via headset button, anyway)\n    if (!isMagicWindow()) {return;}\n\n    let canvasEl = document.querySelector('canvas.a-canvas');\n    let requestFullscreen =\n        canvasEl.requestFullscreen ||\n        canvasEl.webkitRequestFullscreen ||\n        canvasEl.mozRequestFullScreen ||  // The capitalized `S` is not a typo.\n        canvasEl.msRequestFullscreen;\n    let promise;\n    if (requestFullscreen) {\n        promise = requestFullscreen.apply(canvasEl);\n    }\n    if (!(promise && promise.then)) {\n        promise = Promise.resolve();\n    }\n    promise.then(lockLandscapeOrientation, lockLandscapeOrientation);\n}\n\nfunction lockLandscapeOrientation() {\n    if (screen.orientation && screen.orientation.lock) {\n        screen.orientation.lock(\"landscape\").then(response => {\n            console.log(\"screen orientation locked:\", response);\n        }).catch(err => {\n            console.warn(\"screen orientation didn't lock:\", err);\n        });\n    }\n}\n\n\nfunction isDesktop() {\n    return ! (AFRAME.utils.device.isMobile() || AFRAME.utils.device.isMobileVR());\n}\n\nfunction isMagicWindow() {\n    return AFRAME.utils.device.isMobile() && ! AFRAME.scenes[0].is(\"vr-mode\");\n}\n\n\nfunction calcPosChange(verticalAngleDeg, horizontalAngleDeg, distance) {\n    let verticalAngleRad = verticalAngleDeg/180*Math.PI;\n    let altitudeChange = distance * Math.sin(verticalAngleRad);\n\n    let horizontalDistance = distance * Math.cos(verticalAngleRad);\n    let horizontalAngleRad = horizontalAngleDeg/180*Math.PI;\n    return {x: horizontalDistance * Math.cos(horizontalAngleRad),\n        y: altitudeChange,\n        z: -horizontalDistance * Math.sin(horizontalAngleRad)};\n}\n\n\nvar environmentalSound = null;\n\n/**\n * Sets the background sound for a world. It is paused when the tab is hidden.\n * @param url string or Array of strings\n * @param volume number between 0.0 and 1.0\n */\nfunction setEnvironmentalSound(url, volume) {\n    environmentalSound = new Howl({\n        src: url,\n        autoplay: true,\n        loop: true,\n        volume: volume || 1.0,\n        html5: false,\n        onplayerror: function() {\n            environmentalSound.once('unlock', function() {\n                environmentalSound.play();\n            });\n        }\n    });\n}\n\n/** Starts the background sound for a world, if it wasn't already started. */\nfunction pokeEnvironmentalSound() {\n    if (environmentalSound && ! environmentalSound.playing()) {\n        environmentalSound.play();\n    }\n}\n\ndocument.addEventListener('visibilitychange', () => {\n    if (environmentalSound) {\n        if (document.hidden) {\n            environmentalSound.pause();\n        } else {\n            environmentalSound.play();\n        }\n    }\n}, false);\n\n\n/** Web Monetization */\nif (document.monetization)  {\n    function handleMonetizationStart(evt) {\n        console.log(\"monetization started:\", evt);\n    }\n    document.monetization.addEventListener('monetizationstart', handleMonetizationStart);\n\n    function handleMonetizationStop(evt) {\n        console.log(\"monetization stopped:\", evt);\n    }\n    document.monetization.addEventListener('monetizationstop', handleMonetizationStop);\n} else {\n    console.log(\"no monetization API\");\n}\n\nexport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, setEnvironmentalSound, pokeEnvironmentalSound};\n","// state.js - state model for Elfland Glider\n// Copyright © 2017-2020 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n//\n\nimport './shim/requestIdleCallback'\nimport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, pokeEnvironmentalSound} from './elfland-utils'\n\nconst GRAVITY = 9.807;   // m/s^2\nconst HUMAN_EYE_ELBOW_DISTANCE = 0.56;   // m\nconst DIFFICULTY_VR = 0.75;\nconst DIFFICULTY_MAGIC_WINDOW = 0.6;\nconst DIFFICULTY_KEYBOARD = 0.5;\nconst POWERUP_BOOST = 16;\n\nAFRAME.registerState({\n    initialState: {\n        armatureEl: null,\n        gliderEl: null,\n        cameraEl: null,\n        leftHandEl: null,\n        rightHandEl: null,\n        controllerConnections: {},\n        isAnyPressedLeft: false,\n        isAnyPressedRight: false,\n        xSetting: 0,\n        zSetting: 0,\n        controlStickEl: null,\n        controlNeutralHeight: 0.95,\n        controlMode: 'HEAD',   // or 'HANDS'\n        controlSubmode: 'NONE',   // or 'LEFT' or 'RIGHT'\n        time: 0,\n        difficulty: DIFFICULTY_MAGIC_WINDOW,\n        gliderPosition: {x:-30, y:15, z:30},\n        gliderPositionStart: {x:-30, y:15, z:30},\n        gliderRotationX: 0,\n        gliderRotationY: -45,\n        gliderRotationZ: 0,\n        gliderRotationYStart: -45,\n        isFlying: false,\n        gliderSpeed: 5,\n        numYellowStars: Math.POSITIVE_INFINITY,\n        stars: 0,\n        questComplete: false,\n        inventory: {},   // keyed by object ID\n        hudVisible: true,\n        hudText: \"\",\n        controlsReminderDisplayed: false,\n        debug: false   // no way to enable this yet\n    },\n\n    handlers: {\n        setState: function (state, values) {\n            for (let pName in values) {\n                if (pName !== 'target') {\n                    console.log(\"setting\", pName, values[pName]);\n                    state[pName] = values[pName];\n                }\n            }\n        },\n\n        setArmatureEl: function (state, armatureEl) {\n            this.powerup = new Howl({src: ['../assets/411460__inspectorj__power-up-bright-a.mp3']});\n\n            console.log(\"hasNativeWebXRImplementation:\", window.hasNativeWebXRImplementation);\n            console.log(\"hasNativeWebVRImplementation:\", window.hasNativeWebVRImplementation);\n            console.log(\"isMobile:\", AFRAME.utils.device.isMobile());\n            console.log(\"isMobileVR:\", AFRAME.utils.device.isMobileVR());\n\n            state.armatureEl = armatureEl;\n            state.gliderEl = armatureEl.querySelector('#glider');\n            state.cameraEl = armatureEl.querySelector('[camera]');\n\n            let dustEl = AFRAME.scenes[0].querySelector('a-dust');\n            if (dustEl) {\n                requestIdleCallback(() => {   // delays setup until there's some slack time\n                    dustEl.components.dust.setCamera(state.armatureEl);\n                });\n            }\n\n            let bodyEl = state.armatureEl.querySelector('#body');\n            let wingEl = state.gliderEl.querySelector('#wing');\n            let hudEl = armatureEl.querySelector('#hud');\n            this.adjustForMagicWindow(wingEl);\n            if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected()) {\n                this.adjustHudForVR(hudEl);\n                state.difficulty = DIFFICULTY_VR;\n            } else {\n                this.adjustHudForFlat(hudEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            }\n            AFRAME.scenes[0].addEventListener('enter-vr', (event) => {\n                if (AFRAME.utils.device.checkHeadsetConnected()) {\n                    bodyEl.object3D.position.y = -1.6;\n                    this.adjustHudForVR(hudEl);\n                    this.adjustForMagicWindow(wingEl);\n                    state.difficulty = DIFFICULTY_VR;\n                }\n                pokeEnvironmentalSound();\n            });\n            AFRAME.scenes[0].addEventListener('exit-vr', (event) => {\n                // bodyEl.object3D.position.y = 0;   // Why is this unnecessary?\n                this.adjustHudForFlat(hudEl);\n                this.adjustForMagicWindow(wingEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            });\n\n            if (isDesktop() && !AFRAME.utils.device.checkHeadsetConnected()) {\n                console.log(\"desktop w/o headset; disabling look-controls so keyboard controls can function\");\n                state.cameraEl.setAttribute('look-controls', 'enabled', 'false');\n            }\n\n            state.gliderEl.addEventListener('raycaster-intersection', (evt) => {\n                // Intersection w/ distance 0 is sometimes sent immediately\n                if (evt.detail.intersections.length > 0 && evt.detail.intersections[0].distance > 0) {\n                    console.log(\"CRASH!\", evt.detail.els[0].tagName,\n                        evt.detail.intersections[0].distance,\n                        state.gliderEl.getAttribute('raycaster').far, state.gliderSpeed/4);\n                    AFRAME.scenes[0].emit('hover', {});\n                    let crash = new Howl({src: ['../assets/198876__bone666138__crash.mp3']});\n                    crash.play();\n\n                    setTimeout(() => {\n                        if (state.gliderSpeed >= 30) {\n                            sessionStorage.setItem('returnWorld', location.pathname);\n                            location.assign('../ginnungagap/');\n                        } else {\n                            // console.log(\"setting start position\", state.gliderPositionStart);\n                            state.gliderPosition.x = state.gliderPositionStart.x;\n                            state.gliderPosition.y = state.gliderPositionStart.y;\n                            state.gliderPosition.z = state.gliderPositionStart.z;\n                            state.gliderRotationX = 0;\n                            state.gliderRotationY = state.gliderRotationYStart;\n                            state.gliderSpeed = 5;\n                            this.controlStickToNeutral(state);\n                            state.hudText = \"\";\n                            state.cameraEl.object3D.rotation.x = 0;   // only takes effect when look-controls disabled\n                            state.cameraEl.object3D.rotation.y = 0;\n                            state.cameraEl.object3D.rotation.z = 0;\n                            setTimeout(this.showControlsReminder.bind(this, state), 3000);\n                        }\n                    }, 2000)\n                }\n            });\n\n            armatureEl.addEventListener('hitstart', (evt) => {\n                // console.log('hitstart armature:', evt.detail.intersectedEls);\n                evt.detail.intersectedEls.forEach( (el) => {\n                    if (el.classList.contains('powerup')) {\n                        console.log(\"powerup\");\n                        state.gliderSpeed += POWERUP_BOOST;\n                        this.powerup.play();\n                    } else if (el.classList.contains('star')) {\n                       ++state.stars;\n                       console.log(\"collected star\", state.stars, \"of\", state.numYellowStars);\n                        el.parentNode.removeChild(el);\n                       this.ding.play();\n                    } else if (el.classList.contains('proximitySound')) {\n                        let url = el.getAttribute('data-sound-url');\n                        let volume = el.getAttribute('data-sound-volume') || 1.0;\n                        if (url) {\n                            new Howl({src: url, volume: volume, autoplay: true});\n                        }\n                        let text = el.getAttribute('data-text');\n                        let subtitle = AFRAME.scenes[0].querySelector('#subtitle');\n                        if (text && subtitle) {\n                            subtitle.setAttribute('value', text);\n                            setTimeout(() => {\n                                subtitle.setAttribute('value', \"\");\n                            }, 5000);\n                        }\n                   } else if (el.components.link) {\n                       console.log(\"hit link\");\n                       if (! /ginnungagap/.test(location.pathname)) {\n                           sessionStorage.setItem('previousWorld', location.pathname);\n                       }\n                   }\n                });\n            });\n\n            // state doesn't have an init, so we'll register this here.\n            // desktop controls\n            document.addEventListener('keydown', function(evt) {\n                // console.log('keydown:', evt.code);\n                var cameraRotation = state.cameraEl.getAttribute('rotation');\n                switch (evt.code) {\n                    case 'KeyA':\n                    case 'ArrowLeft':\n                        state.cameraEl.object3D.rotation.z += 0.07;\n                        break;\n                    case 'KeyD':\n                    case 'ArrowRight':\n                        state.cameraEl.object3D.rotation.z -= 0.07;\n                        break;\n                    case 'KeyW':\n                    case 'ArrowUp':\n                        state.cameraEl.object3D.rotation.x += 0.045;\n                        break;\n                    case 'KeyS':\n                    case 'ArrowDown':\n                        state.cameraEl.object3D.rotation.x -= 0.045;\n                        break;\n                    case 'Space':\n                        if (!state.isFlying) {\n                            AFRAME.scenes[0].emit('launch', evt);\n                        } else {\n                            if (state.debug) {\n                                AFRAME.scenes[0].emit('hover', evt);\n                            }\n                        }\n                        break;\n                    case 'Enter':\n                        state.hudVisible = ! state.hudVisible;\n                        break;\n                }\n            }, false);\n\n            // two-controller steering\n\n            state.leftHandEl = document.getElementById(\"leftHand\");\n            state.rightHandEl = document.getElementById(\"rightHand\");\n            if (isDesktop()) {\n                state.leftHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n                state.rightHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n            }\n\n            this.leftDownHandler = this.handHandler.bind(this, 'LEFT', 'DOWN', state);\n            this.leftUpHandler = this.handHandler.bind(this, 'LEFT', 'UP', state);\n            this.rightDownHandler = this.handHandler.bind(this, 'RIGHT', 'DOWN', state);\n            this.rightUpHandler = this.handHandler.bind(this, 'RIGHT', 'UP', state);\n\n            state.controlStickEl = document.getElementById('controlStick');\n        },\n\n        controllerconnected: function (state, evt) {   // evt is name and component; this is state obj\n            state.controllerConnections[evt.component.el.id] = true;\n            this.adjustControlMode(state);\n        },\n        controllerdisconnected: function (state, evt) {\n            state.controllerConnections[evt.component.el.id] = false;\n            this.adjustControlMode(state);\n        },\n        adjustControlMode: function (state) {\n            const oldControlMode =  state.controlMode;\n            if (state.controllerConnections.leftHand || state.controllerConnections.rightHand) {\n                state.controlMode = 'HANDS';\n            } else {\n                state.controlMode = 'HEAD';\n            }\n            if (state.controlMode !== oldControlMode) {\n                console.log(\"changed control mode from\", oldControlMode, \"to\", state.controlMode);\n                if (state.controlMode === 'HANDS') {\n                    state.leftHandEl.addEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl.addEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl.addEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl.addEventListener('buttonup', this.rightUpHandler);\n\n                    this.controlStickToNeutral(state);\n                    state.controlStickEl.object3D.visible = true;\n                } else if (state.controlMode === 'HEAD') {\n                    state.leftHandEl.removeEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl.removeEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl.removeEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl.removeEventListener('buttonup', this.rightUpHandler);\n\n                    state.controlStickEl.object3D.visible = false;\n                }\n            }\n        },\n        handHandler: function handHandler(handedness, upDown, state, evt) {\n            const wasAnyPressedLeft = state.isAnyPressedLeft;\n            const trackedControlsLeft = state.leftHandEl.components['tracked-controls'];\n            const buttonsLeft = trackedControlsLeft &&\n                    trackedControlsLeft.controller &&\n                    trackedControlsLeft.controller.gamepad &&\n                    trackedControlsLeft.controller.gamepad.buttons;\n            if (buttonsLeft) {\n                state.isAnyPressedLeft = false;\n                for (let i = 0; i < buttonsLeft.length; ++i) {   // not a JavaScript array\n                    if (buttonsLeft[i].pressed) {\n                        state.isAnyPressedLeft = true;\n                    }\n                }\n            } else if ('LEFT' === handedness) {\n                state.isAnyPressedLeft = 'DOWN' === upDown;   // hack\n            }\n\n            const wasAnyPressedRight = state.isAnyPressedRight;\n            const trackedControlsRight = state.rightHandEl.components['tracked-controls'];\n            const buttonsRight = trackedControlsRight &&\n                    trackedControlsRight.controller &&\n                    trackedControlsRight.controller.gamepad &&\n                    trackedControlsRight.controller.gamepad.buttons;\n            if (buttonsRight) {\n                state.isAnyPressedRight = false;\n                for (let i = 0; i < buttonsRight.length; ++i) {   // not a JavaScript array\n                    if (buttonsRight[i].pressed) {\n                        state.isAnyPressedRight = true;\n                    }\n                }\n            } else if ('RIGHT' === handedness) {\n                state.isAnyPressedRight = 'DOWN' === upDown;   // hack\n            }\n\n            if (state.isAnyPressedLeft && ! wasAnyPressedLeft) {\n                switch (state.controlSubmode) {\n                    case 'LEFT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'RIGHT':\n                    case 'NONE':\n                        state.controlSubmode = 'LEFT';\n                        break;\n                }\n            } else if (state.isAnyPressedRight && ! wasAnyPressedRight) {\n                switch (state.controlSubmode) {\n                    case 'RIGHT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'LEFT':\n                    case 'NONE':\n                        state.controlSubmode = 'RIGHT';\n                        break;\n                }\n            }\n            console.log(\"controlSubmode:\", state.controlSubmode);\n        },\n        controlStickToNeutral: function (state) {\n            if (state.controlStickEl) {\n                const cameraPos = state.cameraEl.getAttribute(\"position\");\n                state.controlNeutralHeight = cameraPos.y - HUMAN_EYE_ELBOW_DISTANCE;\n                state.controlStickEl.setAttribute('position', {x: 0, y: state.controlNeutralHeight, z: -0.4});\n                state.controlStickEl.setAttribute('rotation', {x: 0, y: 0, z: 0});\n                state.xSetting = 0;\n                state.zSetting = 0;\n            }\n        },\n\n\n        // aframe-button-controls: any controller button, or scene touch\n        buttondown: function (state, action) {\n            // console.log(\"buttondown\", action);\n            if (!state.isFlying) {\n                AFRAME.scenes[0].emit('launch', action);\n            } else {\n                if (state.debug) {\n                    AFRAME.scenes[0].emit('hover', action);\n                }\n            }\n        },\n\n        countYellowStars: function (state, action) {\n            state.numYellowStars = AFRAME.scenes[0].querySelectorAll('.star').length;\n            console.log(\"numYellowStars:\", state.numYellowStars);\n            if (state.numYellowStars) {\n                this.ding = new Howl({src: ['../assets/393633__daronoxus__ding.mp3']});\n            }\n        },\n\n        launch: function (state, action) {\n            console.log(\"launch\", action);\n\n            state.isFlying = true;\n\n            state.controlsReminderDisplayed = false;\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            if (prelaunchHelp) {\n                prelaunchHelp.setAttribute('value', \"\");\n            }\n            goFullscreenLandscape();\n\n            let postlaunchHelp = AFRAME.scenes[0].querySelector('#postlaunchHelp');\n            if (postlaunchHelp && postlaunchHelp.src) {\n                let postlaunchHelpAudio = new Howl({src: [postlaunchHelp.src]});\n                setTimeout(() => {\n                    postlaunchHelpAudio.play();\n                }, 60000);\n            }\n        },\n        hover: function (state, action) {\n            console.log(\"hover\", action);\n\n            state.isFlying = false;\n        },\n\n        loaded: function (state, action) {\n            // console.log(\"loaded\", state, action);\n            let intro = document.getElementById('intro');\n            if (!intro) {\n                this.startInteraction(state);\n            }\n        },\n\n        'enter-vr': function (state) {\n            // console.log(\"enter-vr\");\n            this.startInteraction(state);\n        },\n        'exit-vr': function (state, action) {\n            // console.log(\"exit-vr\", action);\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls for flat screen\n            }\n\n            let intro = document.getElementById('intro');\n            if (intro) {\n                AFRAME.scenes[0].emit('hover', action);\n            }\n        },\n        startInteraction: function (state) {\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls\n            } else {\n                setTimeout(this.showControlsReminder.bind(this, state), 10000);\n            }\n        },\n        showControlsReminder: function (state) {\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            let intro = document.getElementById('intro');\n            if (prelaunchHelp && (!intro || AFRAME.scenes[0].is(\"vr-mode\")) && !state.isFlying) {\n                state.controlsReminderDisplayed = true;\n                if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected() || AFRAME.utils.device.isMobileVR()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nTilt left: turn left\\nTilt right: turn right\\nTilt back: climb & slow down\\nTilt forward: dive & speed up\\nTrigger, button or touchpad: launch\");\n                } else if (AFRAME.utils.device.isMobile()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nRoll your device left: turn left\\nRoll your device right: turn right\\nTilt up: climb & slow down\\nTilt down: dive & speed up\\nTap screen: launch\");\n                } else {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nA: turn left\\nD: turn right\\nW: climb (& slow down)\\nS: dive (& speed up)\\nSpace bar: launch\");\n                }\n            }\n        },\n\n        iterate: function (state, action) {\n            // A pause in the action is better than flying blind\n            action.timeDelta = Math.min(action.timeDelta, 100);\n            state.time += action.timeDelta * state.difficulty;\n\n            switch (state.controlMode) {\n                case \"HEAD\":\n                    let cameraRotation = state.cameraEl.getAttribute('rotation');\n                    if (!cameraRotation) {\n                        console.warn(\"camera rotation not available\");\n                        return;\n                    }\n\n                    let cameraRotX = isMagicWindow() ? cameraRotation.x + 20 : cameraRotation.x;\n                    state.xSetting = cameraRotX;\n                    state.zSetting = cameraRotation.z;\n                    break;\n                case \"HANDS\":\n                    const leftHandPos = state.leftHandEl.getAttribute(\"position\");\n                    const rightHandPos = state.rightHandEl.getAttribute(\"position\");\n                    switch (state.controlSubmode) {\n                        case \"LEFT\":\n                            const leftHandRot = state.leftHandEl.getAttribute('rotation');\n\n                            state.controlStickEl.setAttribute('position', leftHandPos);\n                            state.controlStickEl.setAttribute('rotation', leftHandRot);\n\n                            state.xSetting = leftHandRot.x;\n                            state.zSetting = leftHandRot.z;\n                            break;\n                        case \"RIGHT\":\n                            const rightHandRot = state.rightHandEl.getAttribute('rotation');\n\n                            state.controlStickEl.setAttribute('position', rightHandPos);\n                            state.controlStickEl.setAttribute('rotation', rightHandRot);\n\n                            state.xSetting = rightHandRot.x;\n                            state.zSetting = rightHandRot.z;\n                            break;\n                        case \"NONE\":\n                            // TODO: slow decay to neutral?\n                            break;\n                    }\n                    break;\n            }\n            let xDiff = state.xSetting - state.gliderRotationX;\n            let xChange = (xDiff + Math.sign(xDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(xChange) > Math.abs(xDiff)) {\n                xChange = xDiff;\n            }\n            let newXrot = state.gliderRotationX + xChange;\n            newXrot = Math.max(newXrot, -75);\n            newXrot = Math.min(newXrot, 75);\n            state.gliderRotationX = newXrot;\n\n            let zDiff = state.zSetting - state.gliderRotationZ;\n            let zChange = (zDiff + Math.sign(zDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(zChange) > Math.abs(zDiff)) {\n                zChange = zDiff;\n            }\n            let newZrot = state.gliderRotationZ + zChange;\n            newZrot = Math.max(newZrot, -70);\n            newZrot = Math.min(newZrot, 70);\n            state.gliderRotationZ = newZrot;\n\n            let deltaHeading = state.gliderRotationZ * action.timeDelta / 1000;\n            state.gliderRotationY = (state.gliderRotationY + deltaHeading + 180) % 360 - 180;\n\n            if (state.isFlying) {\n                let distance = state.gliderSpeed * action.timeDelta / 1000;\n\n                let posChange = calcPosChange(state.gliderRotationX, state.gliderRotationY+90, distance);\n                let altitudeChange = posChange.y;\n                state.gliderPosition.x += posChange.x;\n                state.gliderPosition.y += altitudeChange;\n                state.gliderPosition.z += posChange.z;\n\n                let speedChange = (-Math.sign(altitudeChange) * Math.sqrt(2 * GRAVITY * Math.abs(altitudeChange)) -\n                                0.0005 * state.gliderSpeed * state.gliderSpeed)\n                        * action.timeDelta / 1000;\n                state.gliderSpeed = Math.max(state.gliderSpeed + speedChange, 0.1);\n                state.gliderSpeed = Math.min(state.gliderSpeed, 99.4);\n\n                if (state.gliderSpeed < 9.95) {\n                    state.hudText = (state.gliderSpeed).toFixed(1);\n                } else {\n                    state.hudText = (state.gliderSpeed).toFixed(0);\n                }\n\n                state.gliderEl.setAttribute('raycaster', 'far', state.gliderSpeed/4);\n            }\n        },\n\n        placeInGliderPath: function (state, action) {\n            // console.log(\"placeInGliderPath:\", action);\n            let verticalAngleDeg = state.gliderRotationX + (Math.random()-0.5) * action.variation;\n            let horizontalAngleDeg = state.gliderRotationY + 90 + (Math.random()-0.5) * action.variation;\n            let posChange = calcPosChange(verticalAngleDeg, horizontalAngleDeg, action.distance);\n            let newPos = {x: state.gliderPosition.x + posChange.x,\n                y: state.gliderPosition.y + posChange.y,\n                z: state.gliderPosition.z + posChange.z};\n            action.el.setAttribute('position', newPos);\n            action.el.setAttribute('rotation', 'y', state.gliderRotationY);\n        },\n\n        adjustForMagicWindow: function (wingEl) {\n            if (! isMagicWindow()) {\n                wingEl.object3D.rotation.x = 0;\n                wingEl.object3D.scale.set(1, 1, 1);\n            } else {\n                wingEl.object3D.rotation.x = THREE.Math.degToRad(-30.0);\n                wingEl.object3D.scale.set(1, 1, 3);\n            }\n        },\n\n        adjustHudForVR: function (hudEl) {\n            if (AFRAME.utils.device.isMobile()) {\n                hudEl.object3D.position.x = 0.20;\n                hudEl.object3D.position.y = 0.30;\n            } else {\n                hudEl.object3D.position.x = 0.20;\n                hudEl.object3D.position.y = 0.42;\n            }\n            hudEl.object3D.rotation.x = THREE.Math.degToRad(30.0);\n            hudEl.object3D.rotation.y = THREE.Math.degToRad(-20.0);\n        },\n\n        adjustHudForFlat: function (hudEl) {\n            if (isDesktop()) {\n                hudEl.object3D.position.x = 0.85;\n                hudEl.object3D.position.y = 0.5;\n                hudEl.object3D.rotation.x = 0.0;\n                hudEl.object3D.rotation.y = 0.0;\n            } else {\n                hudEl.object3D.position.x = 0.70;\n                hudEl.object3D.position.y = 0.20;\n                hudEl.object3D.rotation.x = THREE.Math.degToRad(30.0);\n                hudEl.object3D.rotation.y = THREE.Math.degToRad(-20.0);\n            }\n        }\n    },\n\n    computeState: function (newState, payload) {\n        try {\n            let oldQuestComplete = newState.questComplete;\n            newState.questComplete = newState.numYellowStars <= 0 || newState.stars / newState.numYellowStars >= 0.95;\n            if (newState.questComplete && ! oldQuestComplete) {\n                let horncall = new Howl({src: ['../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3']});\n                horncall.play();\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n});\n\nAFRAME.registerComponent('armature-tick-state', {\n    init: function () {\n        AFRAME.scenes[0].emit('setArmatureEl', this.el);\n    },\n\n    tick: function (time, timeDelta) {\n        AFRAME.scenes[0].emit('iterate', {time: time, timeDelta: timeDelta});\n    }\n});\n","// ginnungagap.js - the boring result of a high-speed crash in Elfland Glider\n// Copyright © 2019 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\nimport {isDesktop, setEnvironmentalSound} from '../src/elfland-utils'\n\nimport '../src/state.js'\n\nAFRAME.registerComponent('ginnungagap', {\n    init: function () {\n        let sceneEl = this.el;\n\n        setEnvironmentalSound('100495__jakobthiesen__light-rain-in-forest.ogg', 1.0);\n        // rain visual is too resource-intensive for mobile\n        if (isDesktop()) {\n            let rain = document.createElement('a-entity');\n            rain.setAttribute('particle-system', {preset: 'rain', particleCount: 500});\n            rain.setAttribute('bind__position', 'gliderPosition');\n            sceneEl.appendChild(rain);\n        }\n\n        const maxClouds = isDesktop() ? 1200 : 300;\n        this.clouds = [];\n        let clouds = this.clouds;\n        setTimeout(() => {\n            // adds clouds all around\n            for (let i=Math.floor(maxClouds*0.5); i>0; --i) {\n                placeCloud(200 + 1500*i/Math.floor(maxClouds*0.5), 270);\n            }\n        }, 4);\n        // adds cloud in front of glider\n        setInterval(placeCloud, 1000);\n        function placeCloud(distance=900+Math.random()*300, variation=80) {\n            if (clouds.length >= maxClouds) {\n                sceneEl.components.pool__clouds.returnEntity(clouds.shift());\n            }\n\n            let cloudEl = sceneEl.components.pool__clouds.requestEntity(true);\n            let opacity=0;\n            cloudEl.setAttribute('material', 'opacity', opacity);\n            let intervalID = setInterval( () => {\n                opacity += 1 / 2400;\n                cloudEl.setAttribute('material', 'opacity', opacity);\n                if (opacity >= 0.5) {\n                    clearInterval(intervalID);\n                }\n            }, 16);\n            AFRAME.scenes[0].emit('placeInGliderPath', {el: cloudEl, distance: distance, variation:variation});\n            // cloudEl.object3D.rotation.z = Math.floor(Math.random()*2) * Math.PI + (Math.random()-0.5) * 0.75;\n            cloudEl.object3D.rotation.z = Math.random()*2*Math.PI;\n            clouds.push(cloudEl);\n        }\n\n        this.armaturePosition = document.getElementById('armature').object3D.position;\n\n\n        var returnPath = sessionStorage.getItem('returnWorld');\n        if (returnPath) {\n            var returnPortal = document.getElementById('returnPortal');\n            returnPortal.setAttribute('link','href', returnPath);\n            returnPortal.setAttribute('link','image', returnPath + 'screenshot.png');\n        }\n\n        setInterval( () => {\n            let returnPortalEl = document.getElementById('returnPortal');\n            returnPortalEl.setAttribute('visible', 'true');\n            AFRAME.scenes[0].emit('placeInGliderPath', {el: returnPortalEl, distance: 100, variation:45});\n        }, 60000);\n    },\n\n    play: function () {\n        this.el.emit('launch', \"ginnungagap play\");\n    },\n\n    tick: function () {\n        this.clouds.forEach(cloud => {\n            if (this.armaturePosition.distanceTo(cloud.object3D.position) > 150) {\n                let rotationZ = cloud.object3D.rotation.z;\n                cloud.object3D.lookAt(this.armaturePosition);\n                cloud.object3D.rotation.z = rotationZ;\n            }\n        });\n    }\n});\n","/*!\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n \n/*\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n */\nwindow.requestIdleCallback = window.requestIdleCallback ||\n  function (cb) {\n    return setTimeout(function () {\n      var start = Date.now();\n      cb({ \n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  }\n\nwindow.cancelIdleCallback = window.cancelIdleCallback ||\n  function (id) {\n    clearTimeout(id);\n  } "],"sourceRoot":""}