{"version":3,"file":"ginnungagap.js","mappings":"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","sources":["webpack://elfland-glider/./src/shim/requestIdleCallback.js","webpack://elfland-glider/webpack/bootstrap","webpack://elfland-glider/./src/elfland-utils.js","webpack://elfland-glider/./src/state.js","webpack://elfland-glider/./ginnungagap/ginnungagap.js"],"sourcesContent":["/*!\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n \n/*\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n */\nwindow.requestIdleCallback = window.requestIdleCallback ||\n  function (cb) {\n    return setTimeout(function () {\n      var start = Date.now();\n      cb({ \n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  }\n\nwindow.cancelIdleCallback = window.cancelIdleCallback ||\n  function (id) {\n    clearTimeout(id);\n  } ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// elfland-utils.js - common functions for Elfland Glider\n// Copyright © 2018-2024 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\n\nfunction goFullscreenLandscape() {\n    // desktop is fine without fullscreen (which can be enabled via headset button, anyway)\n    if (!isMagicWindow()) {return;}\n\n    let canvasEl = document.querySelector('canvas.a-canvas');\n    let requestFullscreen =\n        canvasEl.requestFullscreen ||\n        canvasEl.webkitRequestFullscreen ||\n        canvasEl.mozRequestFullScreen ||  // The capitalized `S` is not a typo.\n        canvasEl.msRequestFullscreen;\n    let promise;\n    if (requestFullscreen) {\n        promise = requestFullscreen.apply(canvasEl);\n    }\n    if (!(promise && promise.then)) {\n        promise = Promise.resolve();\n    }\n    promise.then(lockLandscapeOrientation, lockLandscapeOrientation);\n}\n\nfunction lockLandscapeOrientation() {\n    if (screen.orientation && screen.orientation.lock) {\n        screen.orientation.lock(\"landscape\").then(response => {\n            console.log(\"screen orientation locked:\", response);\n        }).catch(err => {\n            console.warn(\"screen orientation didn't lock:\", err);\n        });\n    }\n}\n\n\nfunction isDesktop() {\n    return ! (AFRAME.utils.device.isMobile() || AFRAME.utils.device.isMobileVR());\n}\n\nfunction isMagicWindow() {\n    return AFRAME.utils.device.isMobile() && ! AFRAME.scenes[0].is(\"vr-mode\");\n}\n\n\nfunction calcPosChange(verticalAngleDeg, horizontalAngleDeg, distance) {\n    let verticalAngleRad = verticalAngleDeg/180*Math.PI;\n    let altitudeChange = distance * Math.sin(verticalAngleRad);\n\n    let horizontalDistance = distance * Math.cos(verticalAngleRad);\n    let horizontalAngleRad = horizontalAngleDeg/180*Math.PI;\n    return {x: horizontalDistance * Math.cos(horizontalAngleRad),\n        y: altitudeChange,\n        z: -horizontalDistance * Math.sin(horizontalAngleRad)};\n}\n\nfunction placeholderTexture(colorArg = '#808080', width = 1, height = 1) {\n    const size = width * height;\n    const data = new Uint8Array( 4 * size );\n\n    let color;\n    if (colorArg.isColor) {\n        color = colorArg;\n    } else {\n        color = new THREE.Color(colorArg);\n    }\n    const r = Math.floor(color.r * 255);\n    const g = Math.floor(color.g * 255);\n    const b = Math.floor(color.b * 255);\n\n    for (let i = 0; i < size; ++i ) {\n        const stride = i * 4;\n        data[stride] = r;\n        data[stride + 1] = g;\n        data[stride + 2] = b;\n        data[stride + 3] = 255;\n    }\n\n    const texture = new THREE.DataTexture(data, width, height);\n    texture.needsUpdate = true;\n    return texture;\n}\n\nvar environmentalSound = null;\n\n/**\n * Sets the background sound for a world. It is paused when the tab is hidden.\n * @param url string or Array of strings\n * @param volume number between 0.0 and 1.0\n */\nfunction setEnvironmentalSound(url, volume) {\n    environmentalSound = new Howl({\n        src: url,\n        autoplay: true,\n        loop: true,\n        volume: volume || 1.0,\n        html5: false,\n        onplayerror: function() {\n            environmentalSound.once('unlock', function() {\n                environmentalSound.play();\n            });\n        }\n    });\n}\n\n/** Starts the background sound for a world, if it wasn't already started. */\nfunction pokeEnvironmentalSound() {\n    if (environmentalSound && ! environmentalSound.playing()) {\n        environmentalSound.play();\n    }\n}\n\ndocument.addEventListener('visibilitychange', () => {\n    if (environmentalSound) {\n        if (document.hidden) {\n            environmentalSound.pause();\n        } else {\n            environmentalSound.play();\n        }\n    }\n}, false);\n\n\nexport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, placeholderTexture, setEnvironmentalSound, pokeEnvironmentalSound};\n","// state.js - state model for Elfland Glider\n// Copyright © 2017-2025 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n//\n\nimport './shim/requestIdleCallback'\nimport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, pokeEnvironmentalSound} from './elfland-utils'\n\nconst GRAVITY = 9.807;   // m/s^2\nconst HUMAN_EYE_ELBOW_DISTANCE = 0.45;   // m\nconst DIFFICULTY_VR = 0.75;\nconst DIFFICULTY_MAGIC_WINDOW = 0.6;\nconst DIFFICULTY_KEYBOARD = 0.5;\nconst POWERUP_BOOST = 16;\nconst BAD_CRASH_SPEED = 30;\nconst MAX_STICK_DISTANCE_SQ = 0.30 * 0.30;   // m^2\n\nAFRAME.registerState({\n    initialState: {\n        armatureEl: null,\n        gliderEl: null,\n        cameraEl: null,\n        leftControllerEl: null,\n        rightControllerEl: null,\n        leftHandEl: null,\n        rightHandEl: null,\n        controllerConnections: {},\n        isAnyPressedLeft: false,\n        isAnyPressedRight: false,\n        xSetting: 0,\n        zSetting: 0,\n        controlStickEl: null,\n        controlNeutralHeight: 0.95,\n        controlMode: 'HEAD',   // or 'HANDS'\n        controlSubmode: 'NONE',   // or 'LEFT_CONTROLLER', 'RIGHT_CONTROLLER', 'LEFT_HAND' or 'RIGHT_HAND'\n        time: 0,\n        difficulty: DIFFICULTY_MAGIC_WINDOW,\n        gliderPosition: {x:-30, y:15, z:30},\n        gliderPositionStart: {x:-30, y:15, z:30},\n        gliderRotationX: 0,\n        gliderRotationY: -45,\n        gliderRotationZ: 0,\n        gliderRotationYStart: -45,\n        isFlying: false,\n        gliderSpeed: 5,\n        numYellowStars: Math.POSITIVE_INFINITY,\n        stars: 0,\n        questComplete: false,\n        inventory: {},   // keyed by object ID\n        hudVisible: true,\n        hudAirspeedAngle: 0,\n        hudAirspeedColor: 'forestgreen',\n        controlsReminderDisplayed: false,\n        debug: false   // no way to enable this yet\n    },\n\n    nonBindedStateKeys: ['armatureEl', 'gliderEl', 'cameraEl',\n        'leftControllerEl', 'rightControllerEl', 'leftHandEl', 'rightHandEl',\n        'controllerConnections', 'isAnyPressedLeft', 'isAnyPressedRight',\n        'xSetting', 'zSetting', 'controlStickEl',\n        'controlNeutralHeight', 'controlMode', 'controlSubmode',\n        'gliderPositionStart', 'gliderRotationYStart'],\n\n    handlers: {\n        setState: function (state, values) {\n            for (let pName in values) {\n                if (pName !== 'target') {\n                    console.log(\"setting\", pName, values[pName]);\n                    state[pName] = values[pName];\n                }\n            }\n        },\n\n        setArmatureEl: function (state, armatureEl) {\n            this.cacheSound(state, '../assets/411460__inspectorj__power-up-bright-a.mp3', 1.0, 'powerup');\n\n            console.log(\"hasNativeWebXRImplementation:\", window.hasNativeWebXRImplementation);\n            console.log(\"hasNativeWebVRImplementation:\", window.hasNativeWebVRImplementation);\n            console.log(\"isMobile:\", AFRAME.utils.device.isMobile());\n            console.log(\"isMobileVR:\", AFRAME.utils.device.isMobileVR());\n\n            // It's best to re-use ThreeJS objects and not store objects in state.\n            this.quaternion = new THREE.Quaternion();\n            this.euler = new THREE.Euler();\n\n            state.armatureEl = armatureEl;\n            state.gliderEl = armatureEl.querySelector('#glider');\n            state.cameraEl = armatureEl.querySelector('[camera]');\n\n            let dustEl = AFRAME.scenes[0].querySelector('a-dust');\n            if (dustEl) {\n                requestIdleCallback(() => {   // delays setup until there's some slack time\n                    dustEl.components.dust.setCamera(state.armatureEl);\n                }, {timeout: 10_000});\n            }\n\n            let bodyEl = state.armatureEl.querySelector('#body');\n            let wingEl = state.gliderEl.querySelector('#wing');\n            let hudEl = armatureEl.querySelector('#hud');\n            this.adjustForMagicWindow(wingEl);\n            if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected()) {\n                this.adjustHudForVR(hudEl);\n                state.difficulty = DIFFICULTY_VR;\n            } else {\n                this.adjustHudForFlat(hudEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            }\n            AFRAME.scenes[0].addEventListener('enter-vr', (event) => {\n                if (AFRAME.utils.device.checkHeadsetConnected()) {\n                    bodyEl.object3D.position.y = -1.6;\n                    this.adjustHudForVR(hudEl);\n                    this.adjustForMagicWindow(wingEl);\n                    state.difficulty = DIFFICULTY_VR;\n                }\n                pokeEnvironmentalSound();\n            });\n            AFRAME.scenes[0].addEventListener('exit-vr', (event) => {\n                // bodyEl.object3D.position.y = 0;   // Why is this unnecessary?\n                this.adjustHudForFlat(hudEl);\n                this.adjustForMagicWindow(wingEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            });\n\n            if (isDesktop() && !AFRAME.utils.device.checkHeadsetConnected()) {\n                console.log(\"desktop w/o headset; disabling look-controls so keyboard controls can function\");\n                state.cameraEl.setAttribute('look-controls', 'enabled', 'false');\n            }\n\n            state.gliderEl.addEventListener('raycaster-intersection', (evt) => {\n                // Intersection w/ distance 0 is sometimes sent immediately\n                if (evt.detail.intersections.length > 0 && evt.detail.intersections[0].distance > 0) {\n                    console.log(\"CRASH!\", evt.detail.els[0].tagName,\n                        evt.detail.intersections[0].distance,\n                        state.gliderEl.getAttribute('raycaster').far, state.gliderSpeed/4);\n                    AFRAME.scenes[0].emit('hover', {});\n                    this.cacheAndPlaySound(state, '../assets/198876__bone666138__crash.mp3');\n\n                    setTimeout(() => {\n                        if (state.gliderSpeed >= BAD_CRASH_SPEED) {\n                            sessionStorage.setItem('returnWorld', location.pathname);\n                            location.assign('../ginnungagap/');\n                        } else {\n                            // console.log(\"setting start position\", state.gliderPositionStart);\n                            state.gliderPosition.x = state.gliderPositionStart.x;\n                            state.gliderPosition.y = state.gliderPositionStart.y;\n                            state.gliderPosition.z = state.gliderPositionStart.z;\n                            state.gliderRotationX = 0;\n                            state.gliderRotationY = state.gliderRotationYStart;\n                            state.gliderSpeed = 5;\n                            this.controlStickToNeutral(state);\n                            state.hudAirspeedAngle = 0;\n                            state.hudAirspeedColor = 'forestgreen';\n                            state.cameraEl.object3D.rotation.x = 0;   // only takes effect when look-controls disabled\n                            state.cameraEl.object3D.rotation.y = 0;\n                            state.cameraEl.object3D.rotation.z = 0;\n                            setTimeout(this.showControlsReminder.bind(this, state), 3000);\n                        }\n                    }, 2000)\n                }\n            });\n\n            armatureEl.addEventListener('hitstart', (evt) => {\n                // console.log('hitstart armature:', evt.detail.intersectedEls);\n                evt.detail.intersectedEls.forEach( (el) => {\n                    if (el.classList.contains('powerup')) {\n                        console.log(\"powerup\");\n                        state.gliderSpeed += POWERUP_BOOST;\n                        this.playSound(state, 'powerup');\n                    } else if (el.classList.contains('star')) {\n                        ++state.stars;\n                        console.log(\"collected star\", state.stars, \"of\", state.numYellowStars);\n                        el.parentNode?.removeChild(el);\n                        this.playSound(state, 'ding');\n                    } else if ('key' === el.id) {\n                        state.questComplete = true;\n                        this.cacheAndPlaySound(state, '../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3');\n                        el.parentNode?.removeChild(el);\n                        const keyEnt = document.createElement('a-entity');\n                        keyEnt.setAttribute('id', 'keyCaptured');\n                        keyEnt.setAttribute('gltf-model', '#keyModel');\n                        keyEnt.setAttribute('position', '-0.85 0.20 -1.00');\n                        keyEnt.setAttribute('rotation', '0 0 90');\n                        keyEnt.setAttribute('scale', '10 10 10');\n                        state.gliderEl.appendChild(keyEnt);\n                        for (const entity of document.querySelectorAll('[dark-elf]')) {\n                            console.info(\"dark elf pursuing\");\n                            entity.setAttribute('dark-elf', 'goalSelector', '#armature');\n                        }\n                    } else if (el.classList.contains('proximitySound')) {\n                        let url = el.getAttribute('data-sound-url');\n                        let volume = el.getAttribute('data-sound-volume') || 1.0;\n                        if (url) {\n                            this.cacheAndPlaySound(state, url, volume);\n                        }\n                        let text = el.getAttribute('data-text');\n                        let subtitle = AFRAME.scenes[0].querySelector('#subtitle');\n                        if (text && subtitle) {\n                            subtitle.setAttribute('value', text);\n                            setTimeout(() => {\n                                subtitle.setAttribute('value', \"\");\n                            }, 5000);\n                        }\n                   } else if (el.components.link) {\n                       console.log(\"hit link\");\n                       if (! /ginnungagap/.test(location.pathname)) {\n                           sessionStorage.setItem('previousWorld', location.pathname);\n                       }\n                   }\n                });\n            });\n\n            // state doesn't have an init, so we'll register this here.\n            // desktop controls\n            document.addEventListener('keydown', function(evt) {\n                // console.log('keydown:', evt.code);\n                var cameraRotation = state.cameraEl.getAttribute('rotation');\n                switch (evt.code) {\n                    case 'KeyA':\n                    case 'ArrowLeft':\n                        state.cameraEl.object3D.rotation.z += 0.07;\n                        break;\n                    case 'KeyD':\n                    case 'ArrowRight':\n                        state.cameraEl.object3D.rotation.z -= 0.07;\n                        break;\n                    case 'KeyW':\n                    case 'ArrowUp':\n                        state.cameraEl.object3D.rotation.x += 0.045;\n                        break;\n                    case 'KeyS':\n                    case 'ArrowDown':\n                        state.cameraEl.object3D.rotation.x -= 0.045;\n                        break;\n                    case 'Space':\n                        if (!state.isFlying) {\n                            AFRAME.scenes[0].emit('launch', evt);\n                        } else {\n                            if (state.debug) {\n                                AFRAME.scenes[0].emit('hover', evt);\n                            }\n                        }\n                        break;\n                    case 'Enter':\n                        state.hudVisible = ! state.hudVisible;\n                        break;\n                }\n            }, false);\n\n            // two-controller steering\n\n            state.leftControllerEl = document.getElementById(\"leftController\");\n            state.rightControllerEl = document.getElementById(\"rightController\");\n            if (isDesktop()) {\n                state.leftControllerEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n                state.rightControllerEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n            }\n\n            this.leftDownHandler = this.buttonHandler.bind(this, 'LEFT', 'DOWN', state);\n            this.leftUpHandler = this.buttonHandler.bind(this, 'LEFT', 'UP', state);\n            this.rightDownHandler = this.buttonHandler.bind(this, 'RIGHT', 'DOWN', state);\n            this.rightUpHandler = this.buttonHandler.bind(this, 'RIGHT', 'UP', state);\n\n            state.leftHandEl = document.getElementById('leftHand');\n            state.rightHandEl = document.getElementById('rightHand');\n\n            this.leftPinchStartedHandler = this.pinchStarted.bind(this, 'LEFT_HAND', state);\n            this.rightPinchStartedHandler = this.pinchStarted.bind(this, 'RIGHT_HAND', state);\n\n            state.controlStickEl = document.getElementById('controlStick');\n            this.controlStickToNeutral(state);\n        },\n\n        controllerconnected: function (state, evt) {   // evt is name and component; this is state obj\n            state.controllerConnections[evt.component.el.id] = true;\n            this.adjustControlMode(state);\n        },\n        controllerdisconnected: function (state, evt) {\n            state.controllerConnections[evt.component.el.id] = false;\n            this.adjustControlMode(state);\n        },\n        adjustControlMode: function (state) {\n            const oldControlMode =  state.controlMode;\n            if (state.controllerConnections.leftController || state.controllerConnections.rightController ||\n              state.controllerConnections.leftHand || state.controllerConnections.rightHand) {\n                state.controlMode = 'HANDS';\n            } else {\n                state.controlMode = 'HEAD';\n            }\n            if (state.controlMode !== oldControlMode) {\n                console.log(\"changed control mode from\", oldControlMode, \"to\", state.controlMode);\n                if (state.controlMode === 'HANDS') {\n                    state.leftControllerEl?.addEventListener('buttondown', this.leftDownHandler);\n                    state.leftControllerEl?.addEventListener('buttonup', this.leftUpHandler);\n                    state.rightControllerEl?.addEventListener('buttondown', this.rightDownHandler);\n                    state.rightControllerEl?.addEventListener('buttonup', this.rightUpHandler);\n                    state.leftHandEl?.addEventListener('pinchstarted', this.leftPinchStartedHandler);\n                    state.rightHandEl?.addEventListener('pinchstarted', this.rightPinchStartedHandler);\n\n                    this.controlStickToNeutral(state);\n                    state.controlStickEl.object3D.visible = true;\n                } else if (state.controlMode === 'HEAD') {\n                    state.leftControllerEl?.removeEventListener('buttondown', this.leftDownHandler);\n                    state.leftControllerEl?.removeEventListener('buttonup', this.leftUpHandler);\n                    state.rightControllerEl?.removeEventListener('buttondown', this.rightDownHandler);\n                    state.rightControllerEl?.removeEventListener('buttonup', this.rightUpHandler);\n                    state.leftHandEl?.removeEventListener('pinchstarted', this.leftPinchStartedHandler);\n                    state.rightHandEl?.removeEventListener('pinchstarted', this.rightPinchStartedHandler);\n\n                    state.controlStickEl.object3D.visible = false;\n                }\n            }\n        },\n        buttonHandler: function handHandler(handedness, upDown, state, evt) {\n            const wasAnyPressedLeft = state.isAnyPressedLeft;\n            const trackedControlsLeft = state.leftControllerEl?.components['tracked-controls'];\n            const buttonsLeft = trackedControlsLeft &&\n                    trackedControlsLeft.controller &&\n                    trackedControlsLeft.controller.gamepad &&\n                    trackedControlsLeft.controller.gamepad.buttons;\n            if (buttonsLeft) {\n                state.isAnyPressedLeft = false;\n                for (let i = 0; i < buttonsLeft.length; ++i) {   // not a JavaScript array\n                    if (buttonsLeft[i].pressed) {\n                        state.isAnyPressedLeft = true;\n                    }\n                }\n            } else if ('LEFT' === handedness) {\n                state.isAnyPressedLeft = 'DOWN' === upDown;   // hack\n            }\n\n            const wasAnyPressedRight = state.isAnyPressedRight;\n            const trackedControlsRight = state.rightControllerEl?.components['tracked-controls'];\n            const buttonsRight = trackedControlsRight &&\n                    trackedControlsRight.controller &&\n                    trackedControlsRight.controller.gamepad &&\n                    trackedControlsRight.controller.gamepad.buttons;\n            if (buttonsRight) {\n                state.isAnyPressedRight = false;\n                for (let i = 0; i < buttonsRight.length; ++i) {   // not a JavaScript array\n                    if (buttonsRight[i].pressed) {\n                        state.isAnyPressedRight = true;\n                    }\n                }\n            } else if ('RIGHT' === handedness) {\n                state.isAnyPressedRight = 'DOWN' === upDown;   // hack\n            }\n\n            if (state.isAnyPressedLeft && ! wasAnyPressedLeft) {\n                switch (state.controlSubmode) {\n                    case 'LEFT_CONTROLLER':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'RIGHT_CONTROLLER':\n                    case 'LEFT_HAND':\n                    case 'RIGHT_HAND':\n                    case 'NONE':\n                        state.controlSubmode = 'LEFT_CONTROLLER';\n                        break;\n                }\n            } else if (state.isAnyPressedRight && ! wasAnyPressedRight) {\n                switch (state.controlSubmode) {\n                    case 'RIGHT_CONTROLLER':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'LEFT_CONTROLLER':\n                    case 'LEFT_HAND':\n                    case 'RIGHT_HAND':\n                    case 'NONE':\n                        state.controlSubmode = 'RIGHT_CONTROLLER';\n                        break;\n                }\n            }\n            console.log(`controllerHandler ${handedness} ${upDown} controlSubmode:`, state.controlSubmode);\n        },\n        pinchStarted: function (inputSource, state, evt) {\n            // const neutral = new THREE.Vector3(0, state.controlNeutralHeight, -0.4);\n            // if (neutral.distanceToSquared(evt.detail?.position) > MAX_STICK_DISTANCE_SQ) {\n            //     return;\n            // }\n\n            if (state.controlSubmode !== inputSource) {\n                const stickPosition = state.controlStickEl?.object3D?.position;\n                if (stickPosition?.distanceToSquared?.(evt.detail?.position) <= MAX_STICK_DISTANCE_SQ) {\n                    state.controlMode = 'HANDS';\n                    state.controlSubmode = inputSource;\n                }   // TODO: else play sad sound?\n            } else {\n                state.controlMode = 'HANDS';\n                this.controlStickToNeutral(state);\n            }\n            console.info(`${evt.type} ${inputSource} controlSubmode is now`, state.controlSubmode);\n        },\n        controlStickToNeutral: function (state) {\n            state.controlSubmode = 'NONE';\n            if (state.controlStickEl) {\n                const cameraPos = state.cameraEl.getAttribute(\"position\");\n                state.controlNeutralHeight = cameraPos.y - HUMAN_EYE_ELBOW_DISTANCE;\n                state.controlStickEl.setAttribute('position', {x: 0, y: state.controlNeutralHeight, z: -0.4});\n                state.controlStickEl.object3D.quaternion.set(0, 0, 0, 1);\n                state.xSetting = 0;\n                state.zSetting = 0;\n            }\n        },\n\n\n        // aframe-button-controls: any controller button, or scene touch\n        buttondown: function (state, action) {\n            // console.log(\"buttondown\", action);\n            if (!state.isFlying) {\n                AFRAME.scenes[0].emit('launch', action);\n            } else {\n                if (state.debug) {\n                    AFRAME.scenes[0].emit('hover', action);\n                }\n            }\n        },\n\n        countYellowStars: function (state, action) {\n            state.numYellowStars = AFRAME.scenes[0].querySelectorAll('.star').length;\n            console.log(\"numYellowStars:\", state.numYellowStars);\n            if (state.numYellowStars) {\n                this.cacheSound(state, '../assets/393633__daronoxus__ding.mp3', 1.0, 'ding');\n            }\n        },\n\n        launch: function (state, action) {\n            console.log(\"launch\", action);\n\n            state.isFlying = true;\n\n            state.controlsReminderDisplayed = false;\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            if (prelaunchHelp) {\n                prelaunchHelp.setAttribute('value', \"\");\n            }\n            goFullscreenLandscape();\n\n            let postlaunchHelp = AFRAME.scenes[0].querySelector('#postlaunchHelp');\n            if (postlaunchHelp && postlaunchHelp.src) {\n                setTimeout(() => {\n                    this.cacheAndPlaySound(state, postlaunchHelp.src)\n                }, 60000);\n            }\n        },\n        hover: function (state, action) {\n            console.log(\"hover\", action);\n\n            state.isFlying = false;\n        },\n\n        loaded: function (state, action) {\n            // console.log(\"loaded\", state, action);\n            let intro = document.getElementById('intro');\n            if (!intro) {\n                this.startInteraction(state);\n            }\n        },\n\n        'enter-vr': function (state) {\n            // console.log(\"enter-vr\");\n            this.startInteraction(state);\n        },\n        'exit-vr': function (state, action) {\n            // console.log(\"exit-vr\", action);\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls for flat screen\n            }\n\n            let intro = document.getElementById('intro');\n            if (intro) {\n                AFRAME.scenes[0].emit('hover', action);\n            }\n        },\n        startInteraction: function (state) {\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls\n            } else {\n                setTimeout(this.showControlsReminder.bind(this, state), 10000);\n            }\n        },\n        showControlsReminder: function (state) {\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            let intro = document.getElementById('intro');\n            const existingHelp = prelaunchHelp?.getAttribute('value');\n            if (prelaunchHelp && !existingHelp && (!intro || AFRAME.scenes[0].is(\"vr-mode\")) && !state.isFlying) {\n                state.controlsReminderDisplayed = true;\n                if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected() || AFRAME.utils.device.isMobileVR()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nTilt left: turn left\\nTilt right: turn right\\nTilt back: climb & slow down\\nTilt forward: dive & speed up\\nTrigger, button or touchpad: launch\");\n                } else if (AFRAME.utils.device.isMobile()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nRoll your device left: turn left\\nRoll your device right: turn right\\nTilt up: climb & slow down\\nTilt down: dive & speed up\\nTap screen: launch\");\n                } else {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nA: turn left\\nD: turn right\\nW: climb (& slow down)\\nS: dive (& speed up)\\nSpace bar: launch\");\n                }\n            }\n        },\n\n        iterate: function (state, action) {\n            // If frames are dropped, ensures the user sees a pause in the action rather than flying blind.\n            action.timeDelta = Math.min(action.timeDelta, 100);\n            state.time += action.timeDelta * state.difficulty;\n\n            switch (state.controlMode) {\n                case \"HEAD\":\n                    let cameraRotation = state.cameraEl.getAttribute('rotation');\n                    if (!cameraRotation) {\n                        console.warn(\"camera rotation not available\");\n                        return;\n                    }\n\n                    let cameraRotX = isMagicWindow() ? cameraRotation.x + 20 : cameraRotation.x;\n                    state.xSetting = cameraRotX;\n                    state.zSetting = cameraRotation.z;\n                    break;\n                case \"HANDS\":\n                    let quaternion;\n                    switch (state.controlSubmode) {\n                        case \"LEFT_CONTROLLER\":\n                            state.controlStickEl.object3D?.quaternion?.copy(state.leftControllerEl.object3D.quaternion);\n                            state.controlStickEl.object3D.rotateX(-Math.PI/2);\n                            quaternion = state.controlStickEl.object3D?.quaternion;\n\n                            const leftControllerPos = state.leftControllerEl?.getAttribute(\"position\");\n                            state.controlStickEl.setAttribute('position', leftControllerPos);\n                           break;\n                        case \"RIGHT_CONTROLLER\":\n                            state.controlStickEl.object3D?.quaternion?.copy(state.rightControllerEl.object3D.quaternion);\n                            state.controlStickEl.object3D.rotateX(-Math.PI/2);\n                            quaternion = state.controlStickEl.object3D?.quaternion;\n\n                            const rightControllerPos = state.rightControllerEl?.getAttribute(\"position\");\n                            state.controlStickEl.setAttribute('position', rightControllerPos);\n                            break;\n                        case \"LEFT_HAND\":\n                        case \"RIGHT_HAND\":\n                            let finger, sign;\n                            if ('LEFT_HAND' === state.controlSubmode) {\n                                finger = state.leftHandEl?.object3D.getObjectByName('middle-finger-phalanx-proximal') ||\n                                  state.leftHandEl?.object3D.getObjectByName('index-finger-phalanx-proximal');\n                                sign = -1;\n                            } else {\n                                finger = state.rightHandEl?.object3D.getObjectByName('middle-finger-phalanx-proximal') ||\n                                  state.rightHandEl?.object3D.getObjectByName('index-finger-phalanx-proximal');\n                                sign = 1;\n                            }\n                            if (finger?.quaternion?.isQuaternion && Number.isFinite(finger.quaternion.x)\n                              && Number.isFinite(finger.quaternion.y) && Number.isFinite(finger.quaternion.z)\n                              && Number.isFinite(finger.quaternion.w)) {\n                                state.controlStickEl.object3D?.quaternion?.copy(finger.quaternion);\n                                state.controlStickEl.object3D.rotateZ(sign * Math.PI/2);\n                                quaternion = state.controlStickEl.object3D?.quaternion;\n                            }\n                            if (Number.isFinite(finger?.position?.x) && Number.isFinite(finger?.position?.y)\n                                && Number.isFinite(finger?.position?.z)) {\n                                state.controlStickEl.object3D?.position?.copy(finger.position);\n                                state.controlStickEl.object3D.position.x -= sign * 0.04;\n                            }\n                            break;\n                        case \"NONE\":\n                            this.quaternion.identity();\n                            quaternion = this.quaternion;\n                            state.controlStickEl.object3D?.quaternion?.copy(quaternion)\n                            // TODO: slow decay to neutral?\n                            break;\n                        default:\n                            console.error(`unsupported controlSubmode:`, controlSubmode);\n                    }\n\n                    this.euler.setFromQuaternion(quaternion, 'XZY');\n                    state.xSetting = this.euler.x * 180 / Math.PI;\n                    this.euler.setFromQuaternion(quaternion, 'ZXY');\n                    state.zSetting = this.euler.z * 180 / Math.PI;\n                    break;\n            }\n            let xDiff = state.xSetting - state.gliderRotationX;\n            let xChange = (xDiff + Math.sign(xDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(xChange) > Math.abs(xDiff)) {\n                xChange = xDiff;\n            }\n            let newXrot = state.gliderRotationX + xChange;\n            newXrot = Math.max(newXrot, -75);\n            newXrot = Math.min(newXrot, 75);\n            state.gliderRotationX = newXrot;\n\n            let zDiff = state.zSetting - state.gliderRotationZ;\n            let zChange = (zDiff + Math.sign(zDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(zChange) > Math.abs(zDiff)) {\n                zChange = zDiff;\n            }\n            let newZrot = state.gliderRotationZ + zChange;\n            newZrot = Math.max(newZrot, -70);\n            newZrot = Math.min(newZrot, 70);\n            state.gliderRotationZ = newZrot;\n\n            let deltaHeading = state.gliderRotationZ * action.timeDelta / 1000;\n            state.gliderRotationY = (state.gliderRotationY + deltaHeading + 180) % 360 - 180;\n\n            if (state.isFlying) {\n                let distance = state.gliderSpeed * action.timeDelta / 1000;\n\n                let posChange = calcPosChange(state.gliderRotationX, state.gliderRotationY+90, distance);\n                let altitudeChange = posChange.y;\n                state.gliderPosition.x += posChange.x;\n                state.gliderPosition.y += altitudeChange;\n                state.gliderPosition.z += posChange.z;\n\n                let speedChange = (-Math.sign(altitudeChange) * Math.sqrt(2 * GRAVITY * Math.abs(altitudeChange)) -\n                                0.0005 * state.gliderSpeed * state.gliderSpeed)\n                        * action.timeDelta / 1000;\n                state.gliderSpeed = Math.max(state.gliderSpeed + speedChange, 0.1);\n                state.gliderSpeed = Math.min(state.gliderSpeed, 99.4);\n\n                state.hudAirspeedAngle = Math.min(state.gliderSpeed * 9, 359);\n                state.hudAirspeedColor = state.gliderSpeed < BAD_CRASH_SPEED ? 'forestgreen' : 'goldenrod';\n\n                state.gliderEl.setAttribute('raycaster', 'far', state.gliderSpeed/4);\n            }\n        },\n\n        cacheSound(_state, url, volume = 1.0, alias) {\n            if (!this.sounds) {\n                this.sounds = {};\n            }\n            if (! this.sounds[url]) {\n                this.sounds[url] = new Howl({src: url, volume: volume, autoplay: false});\n            }\n            if (alias) {\n                this.sounds[alias] = this.sounds[url];\n            }\n        },\n\n        playSound(_state, urlOrAlias) {\n            this.sounds?.[urlOrAlias]?.play();\n        },\n\n        cacheAndPlaySound(_state, url, volume = 1.0, alias) {\n            if (!this.sounds) {\n                this.sounds = {};\n            }\n            if (this.sounds[url]) {\n                this.sounds[url].play();\n            } else {\n                this.sounds[url] = new Howl({src: url, volume: volume, autoplay: true});\n                this.sounds[alias] = this.sounds[url];\n            }\n        },\n\n        placeInGliderPath: function (state, action) {\n            // console.log(\"placeInGliderPath:\", action);\n            let verticalAngleDeg = state.gliderRotationX + (Math.random()-0.5) * action.variation;\n            let horizontalAngleDeg = state.gliderRotationY + 90 + (Math.random()-0.5) * action.variation;\n            let posChange = calcPosChange(verticalAngleDeg, horizontalAngleDeg, action.distance);\n            let newPos = {x: state.gliderPosition.x + posChange.x,\n                y: state.gliderPosition.y + posChange.y,\n                z: state.gliderPosition.z + posChange.z};\n            action.el.setAttribute('position', newPos);\n            action.el.setAttribute('rotation', 'y', state.gliderRotationY);\n        },\n\n        adjustForMagicWindow: function (wingEl) {\n            if (! isMagicWindow()) {\n                wingEl.object3D.rotation.x = 0;\n                wingEl.object3D.scale.set(1, 1, 1);\n            } else {\n                wingEl.object3D.rotation.x = THREE.MathUtils.degToRad(-30.0);\n                wingEl.object3D.scale.set(1, 1, 3);\n            }\n        },\n\n        adjustHudForVR: function (hudEl) {\n            if (AFRAME.utils.device.isMobile()) {\n                hudEl.object3D.position.x = 0.30;\n                hudEl.object3D.position.y = 0.30;\n            } else {\n                hudEl.object3D.position.x = 0.40;\n                hudEl.object3D.position.y = 0.42;\n            }\n            hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(25.0);\n            hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-15.0);\n        },\n\n        adjustHudForFlat: function (hudEl) {\n            if (isDesktop()) {\n                hudEl.object3D.position.x = 0.85;\n                hudEl.object3D.position.y = 0.45;\n                hudEl.object3D.rotation.x = 0.0;\n                hudEl.object3D.rotation.y = 0.0;\n            } else {\n                hudEl.object3D.position.x = 0.70;\n                hudEl.object3D.position.y = 0.15;\n                hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(15.0);\n                hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-20.0);\n            }\n        }\n    },\n\n    computeState: function (newState, payload) {\n        try {\n            if (!newState.questComplete) {\n                newState.questComplete = newState.numYellowStars <= 0 || newState.stars / newState.numYellowStars >= 0.95;\n                if (newState.questComplete) {\n                    AFRAME.scenes[0].emit('cacheAndPlaySound', '../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3');\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n});\n\nAFRAME.registerComponent('armature-tick-state', {\n    init: function () {\n        AFRAME.scenes[0].emit('setArmatureEl', this.el);\n    },\n\n    tick: function (time, timeDelta) {\n        AFRAME.scenes[0].emit('iterate', {time: time, timeDelta: timeDelta});\n    }\n});\n","// ginnungagap.js - the boring result of a high-speed crash in Elfland Glider\n// Copyright © 2019 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\nimport {isDesktop, setEnvironmentalSound} from '../src/elfland-utils'\n\nimport '../src/state.js'\n\nAFRAME.registerComponent('ginnungagap', {\n    init: function () {\n        let sceneEl = this.el;\n\n        setEnvironmentalSound('100495__jakobthiesen__light-rain-in-forest.ogg', 1.0);\n        // rain visual is too resource-intensive for mobile\n        if (isDesktop()) {\n            let rain = document.createElement('a-entity');\n            rain.setAttribute('particle-system', {preset: 'rain', particleCount: 500});\n            rain.setAttribute('bind__position', 'gliderPosition');\n            sceneEl.appendChild(rain);\n        }\n\n        const maxClouds = isDesktop() ? 1200 : 300;\n        this.clouds = [];\n        let clouds = this.clouds;\n        setTimeout(() => {\n            // adds clouds all around\n            for (let i=Math.floor(maxClouds*0.5); i>0; --i) {\n                placeCloud(200 + 1500*i/Math.floor(maxClouds*0.5), 270);\n            }\n        }, 4);\n        // adds cloud in front of glider\n        setInterval(placeCloud, 1000);\n        function placeCloud(distance=900+Math.random()*300, variation=80) {\n            if (clouds.length >= maxClouds) {\n                sceneEl.components.pool__clouds.returnEntity(clouds.shift());\n            }\n\n            let cloudEl = sceneEl.components.pool__clouds.requestEntity(true);\n            let opacity=0;\n            cloudEl.setAttribute('material', 'opacity', opacity);\n            let intervalID = setInterval( () => {\n                opacity += 1 / 2400;\n                cloudEl.setAttribute('material', 'opacity', opacity);\n                if (opacity >= 0.5) {\n                    clearInterval(intervalID);\n                }\n            }, 16);\n            AFRAME.scenes[0].emit('placeInGliderPath', {el: cloudEl, distance: distance, variation:variation});\n            // cloudEl.object3D.rotation.z = Math.floor(Math.random()*2) * Math.PI + (Math.random()-0.5) * 0.75;\n            cloudEl.object3D.rotation.z = Math.random()*2*Math.PI;\n            clouds.push(cloudEl);\n        }\n\n        this.armaturePosition = document.getElementById('armature').object3D.position;\n\n\n        var returnPath = sessionStorage.getItem('returnWorld');\n        if (returnPath) {\n            var returnPortal = document.getElementById('returnPortal');\n            returnPortal.setAttribute('link','href', returnPath);\n            returnPortal.setAttribute('link','image', returnPath + 'screenshot.png');\n        }\n\n        setInterval( () => {\n            let returnPortalEl = document.getElementById('returnPortal');\n            returnPortalEl.setAttribute('visible', 'true');\n            AFRAME.scenes[0].emit('placeInGliderPath', {el: returnPortalEl, distance: 100, variation:45});\n        }, 60000);\n    },\n\n    play: function () {\n        this.el.emit('launch', \"ginnungagap play\");\n    },\n\n    tick: function () {\n        this.clouds.forEach(cloud => {\n            if (this.armaturePosition.distanceTo(cloud.object3D.position) > 150) {\n                let rotationZ = cloud.object3D.rotation.z;\n                cloud.object3D.lookAt(this.armaturePosition);\n                cloud.object3D.rotation.z = rotationZ;\n            }\n        });\n    }\n});\n"],"names":["window","requestIdleCallback","cb","setTimeout","start","Date","now","didTimeout","timeRemaining","Math","max","cancelIdleCallback","id","clearTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","lockLandscapeOrientation","screen","orientation","lock","then","response","console","log","catch","err","warn","isDesktop","AFRAME","utils","device","isMobile","isMobileVR","isMagicWindow","scenes","is","calcPosChange","verticalAngleDeg","horizontalAngleDeg","distance","verticalAngleRad","PI","altitudeChange","sin","horizontalDistance","cos","horizontalAngleRad","x","y","z","environmentalSound","document","addEventListener","hidden","pause","play","registerState","initialState","armatureEl","gliderEl","cameraEl","leftControllerEl","rightControllerEl","leftHandEl","rightHandEl","controllerConnections","isAnyPressedLeft","isAnyPressedRight","xSetting","zSetting","controlStickEl","controlNeutralHeight","controlMode","controlSubmode","time","difficulty","gliderPosition","gliderPositionStart","gliderRotationX","gliderRotationY","gliderRotationZ","gliderRotationYStart","isFlying","gliderSpeed","numYellowStars","POSITIVE_INFINITY","stars","questComplete","inventory","hudVisible","hudAirspeedAngle","hudAirspeedColor","controlsReminderDisplayed","debug","nonBindedStateKeys","handlers","setState","state","values","pName","setArmatureEl","this","cacheSound","hasNativeWebXRImplementation","hasNativeWebVRImplementation","quaternion","THREE","Quaternion","euler","Euler","querySelector","dustEl","components","dust","setCamera","timeout","bodyEl","wingEl","hudEl","adjustForMagicWindow","checkHeadsetConnected","adjustHudForVR","adjustHudForFlat","event","object3D","position","playing","setAttribute","evt","detail","intersections","length","els","tagName","getAttribute","far","emit","cacheAndPlaySound","sessionStorage","setItem","location","pathname","assign","controlStickToNeutral","rotation","showControlsReminder","bind","intersectedEls","forEach","el","classList","contains","playSound","parentNode","removeChild","keyEnt","createElement","appendChild","entity","querySelectorAll","info","url","volume","text","subtitle","link","test","code","getElementById","leftDownHandler","buttonHandler","leftUpHandler","rightDownHandler","rightUpHandler","leftPinchStartedHandler","pinchStarted","rightPinchStartedHandler","controllerconnected","component","adjustControlMode","controllerdisconnected","oldControlMode","leftController","rightController","leftHand","rightHand","visible","removeEventListener","handedness","upDown","wasAnyPressedLeft","trackedControlsLeft","buttonsLeft","controller","gamepad","buttons","i","pressed","wasAnyPressedRight","trackedControlsRight","buttonsRight","inputSource","stickPosition","distanceToSquared","type","cameraPos","set","buttondown","action","countYellowStars","launch","prelaunchHelp","promise","canvasEl","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","apply","Promise","resolve","goFullscreenLandscape","postlaunchHelp","src","hover","loaded","startInteraction","intro","existingHelp","iterate","timeDelta","min","cameraRotation","cameraRotX","copy","rotateX","leftControllerPos","rightControllerPos","finger","sign","getObjectByName","isQuaternion","Number","isFinite","w","rotateZ","identity","error","setFromQuaternion","xDiff","xChange","abs","newXrot","zDiff","zChange","newZrot","deltaHeading","posChange","speedChange","sqrt","_state","alias","sounds","Howl","autoplay","urlOrAlias","placeInGliderPath","random","variation","newPos","MathUtils","degToRad","scale","computeState","newState","payload","registerComponent","init","tick","sceneEl","loop","html5","onplayerror","once","rain","preset","particleCount","maxClouds","clouds","placeCloud","pool__clouds","returnEntity","shift","cloudEl","requestEntity","opacity","intervalID","setInterval","clearInterval","push","floor","armaturePosition","returnPath","getItem","returnPortal","returnPortalEl","cloud","distanceTo","rotationZ","lookAt"],"sourceRoot":""}