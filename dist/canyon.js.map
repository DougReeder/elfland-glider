{"version":3,"file":"canyon.js","mappings":"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","sources":["webpack://elfland-glider/./assets/land-shader.js","webpack://elfland-glider/./canyon/canyon-terrain.js","webpack://elfland-glider/./src/shim/requestIdleCallback.js","webpack://elfland-glider/webpack/bootstrap","webpack://elfland-glider/./src/elfland-utils.js","webpack://elfland-glider/./src/state.js","webpack://elfland-glider/./canyon/canyon.js"],"sourcesContent":["// land-shader.js - vaguely natural-looking material for A-Frame\n// Copyright © 2018 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n//\n// The produced texture is a mix of the specified colors (default gray brown and dirt brown).\n// Faces will be 50% brighter in direct sun and 50% darker when facing away from the sun.\n// Example: material=\"shader:land; colorYin:#63574d\"\n\nAFRAME.registerShader('land', {\n    schema: {\n        colorYin: {type: 'color', default: '#63574d'},   // gray brown\n        colorYang: {type: 'color', default: '#553c29'},   // dirt brown\n        sunPosition: {type: 'vec3', default: {x:-1.0, y:1.0, z:-1.0}}\n    },\n\n    vertexShader: `\nuniform vec3 sunNormal;\n\nvarying vec3 pos;\nvarying float sunFactor;\n\nvoid main() {\n  pos = position;\n    \n  sunFactor = 0.5 + max(dot(normal, sunNormal), 0.0);\n   \n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}`,\n\n    fragmentShader: `\nuniform vec3 colorYin;\nuniform vec3 colorYang;\n\nvarying vec3 pos;\nvarying float sunFactor;\n\n//\tSimplex 3D Noise\n//\tby Ian McEwan, Ashima Arts\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\nfloat snoise(vec3 v){\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //  x0 = x0 - 0. + 0.0 * C \n  vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n  vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n  vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n// Permutations\n  i = mod(i, 289.0 ); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients\n// ( N*N points uniformly over a square, mapped onto an octahedron.)\n  float n_ = 1.0/7.0; // N=7\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\nvoid main() {\n    vec3 inherent = mix(\n        colorYin,\n        colorYang,\n        0.5 * (1.0 + snoise(pos*0.4))\n    );\n    gl_FragColor = vec4(inherent * sunFactor, 1.0);\n}\n`,\n\n    /**\n     * `init` used to initialize material. Called once.\n     */\n    init: function (data) {\n        let sunPos = new THREE.Vector3(data.sunPosition.x, data.sunPosition.y, data.sunPosition.z);\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                colorYin: {value: new THREE.Color(data.colorYin)},\n                colorYang: {value: new THREE.Color(data.colorYang)},\n                sunNormal: {value: sunPos.normalize()}\n            },\n            vertexShader: this.vertexShader,\n            fragmentShader: this.fragmentShader\n        });\n    },\n    /**\n     * `update` used to update the material. Called on initialization and when data updates.\n     */\n    update: function (data) {\n        this.material.uniforms.colorYin.value.set(data.colorYin);\n        this.material.uniforms.colorYang.value.set(data.colorYang);\n        let sunPos = new THREE.Vector3(data.sunPosition.x, data.sunPosition.y, data.sunPosition.z);\n        this.material.uniforms.sunNormal.value = sunPos.normalize();\n        // this.material.uniforms.sunNormal.value.set(sunPos.normalize());\n    },\n});\n","// canyon-terrain.js - the landscape geometry for a canyon\n// Data and code are in one file to avoid asynchronous loading.\n// Copyright © 2023 Doug Reeder; Licensed under the GNU GPL-3.0\n\nconst X_POINTS = 41;\nconst Z_POINTS = 67;\nconst terrainHeights = `\n0 0 0 0 0 0 0 0 0 0         0 0 0 0 0 0 0 0 0 0            0 0 0 0 0 0 0 0 0 0            0 0 0 0 0 0 0 0 0 0   0\n0 0 0 0 0 0 0 0 0 0         0 -1 -2 -2 -1 5 10 15 20 20    25 25 25 25 20 15 15 5 0 0     0 0 0 0 0 0 0 0 0 0   0 \n0 0 0 0 0 0 0 -1 -2 -3      -3 -2 10 15 25 30 35 35 40 45  45 45 50 50 50 55 55 35 35 5   0 0 0 0 0 0 0 0 0 0   0 \n0 0 0 0 -1 -2 -3 -4 -4 -3   5 20 25 35 45 45 50 55 55 60   60 65 65 70 70 75 80 70 45 15  0 0 0 0 0 0 0 0 0 0   0 \n0 0 0 -1 -2 -3 -4 -5 -4 10  20 25 30 35 50 55 55 60 65 70  75 75 80 90 95 99 99 90 75 35  10 0 0 0 0 0 0 0 0 0  0\n\n0 -1 -2 -3 -4 -5 -6 -5 10 20  25 30 35 40 50 55 60 65 70 75  80 85 90 95 99 99 99 99 85 70  30 0 0 0 0 0 0 0 0 0        0 \n0 -2 -3 -5 -5 -6 -6 5 20 25   30 35 40 45 50 55 60 60 65 70  75 80 85 90 95 99 99 99 99 75  50 25 10 0 0 0 0 0 0 0      0 \n0 -2 -4 -6 -6 -7 15 20 25 30  35 40 45 45 50 45 40 30 35 45  50 60 65 75 80 85 90 90 90 89  79 70 35 40 0 0 0 0 0 0     0 \n0 -2 -4 -5 -6 -7 20 40 45 50  50 50 50 45 40 35 30 15 10 10  5 10 20 45 65 65 70 75 80 85   90 85 60 55 50 5 0 0 0 0    0 \n0 -1 -3 -4 -5 -6 10 30 50 50  55 50 45 40 35 20 10 0 0 0     0 0 0 5 15 40 50 70 80 85      85 85 80 70 60 50 1 0 0 0  0 \n\n\n0 -1 -2 -3 -4 -5 15 50 55 60  55 50 45 40 35 0 0 0 0 0      0 0 0 0 0 5 70 75 80 80     80 80 80 75 70 65 60 5 0 0   0 \n0 -1 -2 -3 -4 5 45 55 60 65   60 55 50 45 15 0 0 0 0 0      0 0 0 0 5 65 70 75 80 80    80 80 80 75 70 65 60 5 0 0   0 \n0 -1 -2 -3 5 25 55 60 65 70   65 60 55 50 5 0 0 0 0 0       0 0 0 5 55 60 70 75 70 65   65 70 70 70 65 60 55 50 5 0  0\n0 -1 -2 5 50 55 60 65 70 75   70 65 60 55 50 5 0 0 0 0      0 0 5 45 65 65 65 60 55 50  5 50 55 60 59 56 55 52 47 0  0\n0 -1 5 50 55 65 65 70 75 76   75 70 65 60 55 50 5 0 0 0     0 0 35 50 60 60 55 50 45 0  0 5 44 49 52 54 55 54 52 49  0\n\n0 5 50 60 65 70 75 75 75 75   75 70 65 60 55 50 45 5 0 0     0 0 40 45 55 50 45 40 5 0  0 0 5 51 54 56 57 56 54 51    0\n0 5 65 70 75 75 75 75 75 75   75 75 70 65 60 55 50 45 5 0    0 0 45 50 45 40 35 5 0 0   0 0 0 54 57 59 60 59 57 54    0\n0 5 65 70 75 75 75 75 75 75   75 75 75 70 65 60 55 50 45 0   0 0 0 45 45 40 5 0 0 0     0 0 5 62 64 65 64 62 59 54    0\n0 55 60 65 70 75 75 75 75 75  75 75 75 75 70 65 60 55 50 5   0 0 0 0 0 0 0 0 0 0        5 64 67 69 68 69 67 64 59 0   0\n0 50 55 63 75 77 75 75 75 75  75 75 75 75 75 70 65 60 55 50  5 0 0 0 0 0 0 5 10 45      55 59 69 70 65 60 55 50 45 0  0\n\n\n0 40 50 71 79 80 75 72 70 65  70 75 75 75 70 65 60 55 50 39  46 45 45 45 50 50 50 50 55 60  67 72 74 75 74 72 69 65 58 1  0\n0 45 55 65 80 81 77 70 65 65  65 70 75 70 65 60 55 50 42 45  50 55 65 70 75 75 80 75 80 80  80 80 80 75 70 65 60 55 40 0  0 \n0 40 60 70 81 82 78 70 65 60  60 60 65 60 55 55 50 44 45 45  55 60 70 80 85 85 85 80 85 85  85 85 80 75 70 65 60 55 0 0   0\n0 35 50 70 84 85 84 75 65 60  55 50 50 50 50 47 42 46 45 60  65 70 80 85 90 90 90 85 90 90  90 80 75 70 65 60 55 50 0 0   0\n0 0 40 70 85 86 87 78 75 70   1 1 1 1 1 39 47 55 60 65       75 85 85 90 95 95 95 90 95 95  85 80 75 70 65 55 50 40 0 0   0\n\n0 0 40 80 90 95 90 85 80 70  1 0 0 0 1 45 55 60 70 75       85 90 95 95 99 99 99 95 99 95  90 80 75 70 60 50 40 25 0 0  0\n0 0 35 80 90 99 95 90 80 70  1 0 0 0 0 1 55 65 75 80        90 99 99 99 99 99 99 99 90 90  85 80 75 65 55 40 30 0 0 0   0\n0 0 30 75 85 95 99 95 85 75  1 1 0 0 0 1 50 75 90 94        99 97 95 95 95 95 95 90 80 80  75 70 65 55 45 30 10 0 0 0   0\n0 0 5 45 80 90 95 99 95 90   85 1 1 1 1 1 75 95 95 99       95 90 90 90 90 90 85 80 70 75  55 55 50 40 0 0 0 0 0 0      0\n0 0 0 35 70 85 95 95 99 95   95 90 85 80 70 75 95 99 99 95  90 85 85 85 85 80 75 70 55 55  33 12 5 0 0 0 0 0 0 0        0\n\n\n0 0 0 15 50 80 85 90 95 99  95 95 95 95 95 95 99 95 95 90  85 80 80 60 55 50 50 55 40 35  7 0 0 0 0 0 0 0 0 0   0 \n0 0 0 0 5 61 79 85 90 95    99 99 99 99 99 99 95 90 85 80  75 55 50 15 5 5 5 10 35 36     10 0 0 0 0 0 0 0 0 0  0\n0 0 0 0 0 1 85 89 92 95     98 99 99 98 98 97 96 93 88 84  1 1 1 1 0 0 0 1 31 31          5 1 0 0 0 0 0 0 0 0   0\n0 0 0 0 0 0 1 90 93 94      97 98 97 96 97 96 95 94 1 1    0 0 0 0 0 0 0 1 28 28          1 1 0 0 0 0 0 0 0 0   0\n0 0 0 0 0 0 1 92 94 96      97 96 96 95 94 1 1 1 0 0       0 0 0 0 0 0 0 1 27 27          1 1 0 0 0 0 0 0 0 0   0\n\n0 0 0 0 0 0 1 92 94 95      96 95 94 94 1 0 0 0 0 0        0 0 1 1 1 1 1 1 26 26          27 1 1 1 0 0 0 0 0 0    0\n0 0 0 0 0 0 1 92 93 94      95 94 93 1 1 0 0 0 0 1         1 1 1 2 2 2 2 2 24 25          25 2 2 1 0 0 0 0 0 0    0\n0 0 0 0 0 0 1 92 93 94      94 93 92 1 0 0 0 1 1 1         2 2 2 2 14 14 2 2 22 24        24 23 2 1 1 1 0 0 0 0   0\n0 0 0 0 0 1 1 92 92 93      92 92 91 1 0 0 1 1 2 2         2 12 13 14 15 16 17 18 20 22   23 24 2 2 2 1 1 0 0 0   0\n0 0 0 0 0 1 90 91 92 91     91 90 1 1 0 0 1 2 2 9          11 12 13 14 15 15 16 17 1 1    1 23 24 26 2 2 1 1 0 0  0\n\n\n0 0 0 0 0 1 89 90 91 90     89 1 1 0 0 1 2 6 7 9    11 12 13 14 14 14 2 1 1 0      1 1 23 25 26 2 2 1 1 0      0\n0 0 0 0 1 1 88 89 90 89     88 1 0 0 1 1 2 7 8 10   11 12 13 13 14 14 2 1 0 0      0 1 2 24 25 25 2 2 1 1      0\n0 0 0 1 1 87 88 89 88 88    87 1 0 0 1 2 2 8 9 10   11 12 13 14 15 15 2 1 1 0      1 1 2 25 25 26 25 2 2 1     0\n0 0 1 1 86 87 88 88 87 86   1 1 0 0 1 2 8 9 10 10   11 12 13 14 15 16 17 18 1 1    1 25 26 26 26 27 26 2 2 1   0\n0 0 1 84 86 87 87 86 85 84  1 0 0 0 1 2 9 10 10 10  10 12 13 15 16 16 17 19 21 23  24 26 27 28 28 28 26 2 2 1  0\n\n0 1 1 84 86 86 85 84 81 70   1 0 0 0 1 2 8 10 10 10   10 12 13 2 2 2 16 18 20 22  23 24 26 27 29 28 27 2 2 1  0\n0 1 81 82 84 85 84 82 79 64  1 1 0 0 1 2 2 9 10 10    10 11 2 2 1 1 1 1 1 1       1 1 25 28 30 29 2 2 1 0     0\n0 1 81 82 84 84 83 81 79 63  63 1 0 0 1 1 2 9 11 11   2 2 2 1 1 0 0 0 0 0         0 1 1 29 31 30 2 1 1 0      0\n0 1 81 82 83 83 82 1 1 61    62 1 1 0 0 1 2 10 12 13  2 1 1 1 0 0 0 0 0 0         0 0 1 30 32 31 2 1 0 0      0\n0 1 80 81 82 81 80 1 0 1     61 62 1 0 0 1 2 2 14 14  2 1 0 0 0 0 1 1 1 1         0 0 1 1 33 32 2 1 0 0       0\n\n\n0 1 79 80 81 80 79 1 0 1  60 61 1 0 0 1 1 2 16 16  18 1 0 0 1 1 1 30 30 1         1 0 0 1 33 33 2 1 0 0         0\n0 1 1 79 80 79 77 1 0 1   60 61 1 1 0 0 1 2 2 18   20 22 24 26 28 29 30 30 30 31  1 0 0 1 33 35 34 1 1 0        0\n0 0 1 77 78 79 77 1 0 1   1 61 62 1 0 0 1 1 1 1    1 0 0 1 29 30 30 30 30 31      1 1 1 1 34 36 35 33 1 0       0\n0 0 1 76 77 78 76 1 0 0   1 62 62 1 1 0 0 0 0 0    0 0 0 1 29 30 31 30 30 31      32 33 34 35 36 37 36 35 1 1   0\n0 0 1 75 76 77 75 1 1 0   1 1 62 62 1 0 0 0 0 0    0 0 0 1 1 30 32 34 33 33       32 33 34 35 36 37 36 34 32 1  0\n\n0 1 1 74 75 76 75 74 1 1     1 1 62 62 1 1 0 0 1 1          1 0 0 0 1 1 1 36 35 35     1 1 1 1 36 38 37 36 33 1  0\n0 1 73 74 75 74 73 72 69 66  65 63 63 62 61 1 1 1 1 56      1 1 0 0 0 0 1 1 38 39      1 0 0 1 38 39 39 38 35 1  0\n0 1 72 73 74 73 72 70 68 67  66 64 64 64 62 61 60 60 59 58  55 1 1 1 1 0 0 1 40 39     1 0 0 1 40 41 40 38 1 1   0\n0 1 72 72 73 73 72 70 68 68  68 66 65 65 64 63 62 61 60 54  57 56 55 53 1 0 0 1 44 43  1 0 1 1 42 42 41 39 1 0   0\n0 1 70 71 71 72 71 70 69 68  68 67 66 65 63 62 61 60 59 58  58 57 56 54 1 1 1 1 48 47  1 1 1 42 43 43 41 38 1 0  0\n\n\n0 1 70 69 70 71 71 71 70 69  68 66 65 63 61 60 59 58 57 55  56 55 54 55 54 52 50 50 53 52  46 44 44 43 44 43 41 1 1 0  0\n0 1 69 68 69 69 70 69 69 68  67 65 63 61 60 58 57 1 1 1     52 51 53 52 52 53 52 51 51 50  48 46 46 45 43 42 40 1 0 0  0\n0 1 1 67 67 68 68 67 67 66   65 64 62 60 1 1 1 1 0 1        1 1 1 1 50 50 50 51 50 49      48 47 46 44 43 41 1 1 0 0   0\n0 0 1 1 66 65 65 64 64 63    62 62 1 1 1 0 0 0 0 0          0 0 0 0 1 1 47 48 48 47        45 45 45 43 41 1 1 0 0 0    0\n0 0 0 1 1 1 61 60 60 1       1 1 1 0 0 0 0 0 0 0            0 0 0 0 0 1 1 1 1 45           41 41 41 1 1 1 0 0 0 0      0\n\n0 0 0 0 0 1 1 1 1 1          0 0 0 0 0 0 0 0 0 0            0 0 0 0 0 0 0 0 1 1            1 1 1 1 0 0 0 0 0 0         0\n`;\n// y is zero by default, so last row (all zeroes) doesn't need to be calculated.\n\n\nAFRAME.registerGeometry('canyon-terrain', {\n  schema: {\n    spacing: {default: 10},\n    sunPosition: {type: 'vec3', default: {x:-1.0, y:1.0, z:-1.0}}\n  },\n\n  init: function (data) {\n    // Creates geometry.\n    const geometry = new THREE.PlaneGeometry((X_POINTS - 1) * data.spacing, (Z_POINTS - 1) * data.spacing, X_POINTS - 1, Z_POINTS - 1);\n    geometry.rotateX(-Math.PI / 2);\n    const vertices = geometry.attributes.position.array;\n    const floatPatt = /\\s*\\S+/y;\n    let match;\n    let v = 0;\n    while (match = floatPatt.exec(terrainHeights)) {\n      let height = parseFloat(match[0]);\n      height = height * -2;\n      if (height < 0) {\n        height -= 100;\n      }\n      vertices[v * 3 + 1] = height;\n      ++v;\n    }\n    geometry.computeVertexNormals();\n    this.geometry = geometry;\n  }\n});\n","/*!\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n \n/*\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n */\nwindow.requestIdleCallback = window.requestIdleCallback ||\n  function (cb) {\n    return setTimeout(function () {\n      var start = Date.now();\n      cb({ \n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  }\n\nwindow.cancelIdleCallback = window.cancelIdleCallback ||\n  function (id) {\n    clearTimeout(id);\n  } ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// elfland-utils.js - common functions for Elfland Glider\n// Copyright © 2018-2019 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\n\nfunction goFullscreenLandscape() {\n    // desktop is fine without fullscreen (which can be enabled via headset button, anyway)\n    if (!isMagicWindow()) {return;}\n\n    let canvasEl = document.querySelector('canvas.a-canvas');\n    let requestFullscreen =\n        canvasEl.requestFullscreen ||\n        canvasEl.webkitRequestFullscreen ||\n        canvasEl.mozRequestFullScreen ||  // The capitalized `S` is not a typo.\n        canvasEl.msRequestFullscreen;\n    let promise;\n    if (requestFullscreen) {\n        promise = requestFullscreen.apply(canvasEl);\n    }\n    if (!(promise && promise.then)) {\n        promise = Promise.resolve();\n    }\n    promise.then(lockLandscapeOrientation, lockLandscapeOrientation);\n}\n\nfunction lockLandscapeOrientation() {\n    if (screen.orientation && screen.orientation.lock) {\n        screen.orientation.lock(\"landscape\").then(response => {\n            console.log(\"screen orientation locked:\", response);\n        }).catch(err => {\n            console.warn(\"screen orientation didn't lock:\", err);\n        });\n    }\n}\n\n\nfunction isDesktop() {\n    return ! (AFRAME.utils.device.isMobile() || AFRAME.utils.device.isMobileVR());\n}\n\nfunction isMagicWindow() {\n    return AFRAME.utils.device.isMobile() && ! AFRAME.scenes[0].is(\"vr-mode\");\n}\n\n\nfunction calcPosChange(verticalAngleDeg, horizontalAngleDeg, distance) {\n    let verticalAngleRad = verticalAngleDeg/180*Math.PI;\n    let altitudeChange = distance * Math.sin(verticalAngleRad);\n\n    let horizontalDistance = distance * Math.cos(verticalAngleRad);\n    let horizontalAngleRad = horizontalAngleDeg/180*Math.PI;\n    return {x: horizontalDistance * Math.cos(horizontalAngleRad),\n        y: altitudeChange,\n        z: -horizontalDistance * Math.sin(horizontalAngleRad)};\n}\n\n\nvar environmentalSound = null;\n\n/**\n * Sets the background sound for a world. It is paused when the tab is hidden.\n * @param url string or Array of strings\n * @param volume number between 0.0 and 1.0\n */\nfunction setEnvironmentalSound(url, volume) {\n    environmentalSound = new Howl({\n        src: url,\n        autoplay: true,\n        loop: true,\n        volume: volume || 1.0,\n        html5: false,\n        onplayerror: function() {\n            environmentalSound.once('unlock', function() {\n                environmentalSound.play();\n            });\n        }\n    });\n}\n\n/** Starts the background sound for a world, if it wasn't already started. */\nfunction pokeEnvironmentalSound() {\n    if (environmentalSound && ! environmentalSound.playing()) {\n        environmentalSound.play();\n    }\n}\n\ndocument.addEventListener('visibilitychange', () => {\n    if (environmentalSound) {\n        if (document.hidden) {\n            environmentalSound.pause();\n        } else {\n            environmentalSound.play();\n        }\n    }\n}, false);\n\n\n/** Web Monetization */\nif (document.monetization)  {\n    function handleMonetizationStart(evt) {\n        console.log(\"monetization started:\", evt);\n    }\n    document.monetization.addEventListener('monetizationstart', handleMonetizationStart);\n\n    function handleMonetizationStop(evt) {\n        console.log(\"monetization stopped:\", evt);\n    }\n    document.monetization.addEventListener('monetizationstop', handleMonetizationStop);\n} else {\n    console.log(\"no monetization API\");\n}\n\nexport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, setEnvironmentalSound, pokeEnvironmentalSound};\n","// state.js - state model for Elfland Glider\n// Copyright © 2017-2023 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n//\n\nimport './shim/requestIdleCallback'\nimport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, pokeEnvironmentalSound} from './elfland-utils'\n\nconst GRAVITY = 9.807;   // m/s^2\nconst HUMAN_EYE_ELBOW_DISTANCE = 0.56;   // m\nconst DIFFICULTY_VR = 0.75;\nconst DIFFICULTY_MAGIC_WINDOW = 0.6;\nconst DIFFICULTY_KEYBOARD = 0.5;\nconst POWERUP_BOOST = 16;\nconst BAD_CRASH_SPEED = 30;\n\nAFRAME.registerState({\n    initialState: {\n        armatureEl: null,\n        gliderEl: null,\n        cameraEl: null,\n        leftHandEl: null,\n        rightHandEl: null,\n        controllerConnections: {},\n        isAnyPressedLeft: false,\n        isAnyPressedRight: false,\n        xSetting: 0,\n        zSetting: 0,\n        controlStickEl: null,\n        controlNeutralHeight: 0.95,\n        controlMode: 'HEAD',   // or 'HANDS'\n        controlSubmode: 'NONE',   // or 'LEFT' or 'RIGHT'\n        time: 0,\n        difficulty: DIFFICULTY_MAGIC_WINDOW,\n        gliderPosition: {x:-30, y:15, z:30},\n        gliderPositionStart: {x:-30, y:15, z:30},\n        gliderRotationX: 0,\n        gliderRotationY: -45,\n        gliderRotationZ: 0,\n        gliderRotationYStart: -45,\n        isFlying: false,\n        gliderSpeed: 5,\n        numYellowStars: Math.POSITIVE_INFINITY,\n        stars: 0,\n        questComplete: false,\n        inventory: {},   // keyed by object ID\n        hudVisible: true,\n        hudAirspeedAngle: 0,\n        hudAirspeedColor: 'forestgreen',\n        controlsReminderDisplayed: false,\n        debug: false   // no way to enable this yet\n    },\n\n    handlers: {\n        setState: function (state, values) {\n            for (let pName in values) {\n                if (pName !== 'target') {\n                    console.log(\"setting\", pName, values[pName]);\n                    state[pName] = values[pName];\n                }\n            }\n        },\n\n        setArmatureEl: function (state, armatureEl) {\n            this.powerup = new Howl({src: ['../assets/411460__inspectorj__power-up-bright-a.mp3']});\n\n            console.log(\"hasNativeWebXRImplementation:\", window.hasNativeWebXRImplementation);\n            console.log(\"hasNativeWebVRImplementation:\", window.hasNativeWebVRImplementation);\n            console.log(\"isMobile:\", AFRAME.utils.device.isMobile());\n            console.log(\"isMobileVR:\", AFRAME.utils.device.isMobileVR());\n\n            state.armatureEl = armatureEl;\n            state.gliderEl = armatureEl.querySelector('#glider');\n            state.cameraEl = armatureEl.querySelector('[camera]');\n\n            let dustEl = AFRAME.scenes[0].querySelector('a-dust');\n            if (dustEl) {\n                requestIdleCallback(() => {   // delays setup until there's some slack time\n                    dustEl.components.dust.setCamera(state.armatureEl);\n                });\n            }\n\n            let bodyEl = state.armatureEl.querySelector('#body');\n            let wingEl = state.gliderEl.querySelector('#wing');\n            let hudEl = armatureEl.querySelector('#hud');\n            this.adjustForMagicWindow(wingEl);\n            if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected()) {\n                this.adjustHudForVR(hudEl);\n                state.difficulty = DIFFICULTY_VR;\n            } else {\n                this.adjustHudForFlat(hudEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            }\n            AFRAME.scenes[0].addEventListener('enter-vr', (event) => {\n                if (AFRAME.utils.device.checkHeadsetConnected()) {\n                    bodyEl.object3D.position.y = -1.6;\n                    this.adjustHudForVR(hudEl);\n                    this.adjustForMagicWindow(wingEl);\n                    state.difficulty = DIFFICULTY_VR;\n                }\n                pokeEnvironmentalSound();\n            });\n            AFRAME.scenes[0].addEventListener('exit-vr', (event) => {\n                // bodyEl.object3D.position.y = 0;   // Why is this unnecessary?\n                this.adjustHudForFlat(hudEl);\n                this.adjustForMagicWindow(wingEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            });\n\n            if (isDesktop() && !AFRAME.utils.device.checkHeadsetConnected()) {\n                console.log(\"desktop w/o headset; disabling look-controls so keyboard controls can function\");\n                state.cameraEl.setAttribute('look-controls', 'enabled', 'false');\n            }\n\n            state.gliderEl.addEventListener('raycaster-intersection', (evt) => {\n                // Intersection w/ distance 0 is sometimes sent immediately\n                if (evt.detail.intersections.length > 0 && evt.detail.intersections[0].distance > 0) {\n                    console.log(\"CRASH!\", evt.detail.els[0].tagName,\n                        evt.detail.intersections[0].distance,\n                        state.gliderEl.getAttribute('raycaster').far, state.gliderSpeed/4);\n                    AFRAME.scenes[0].emit('hover', {});\n                    let crash = new Howl({src: ['../assets/198876__bone666138__crash.mp3']});\n                    crash.play();\n\n                    setTimeout(() => {\n                        if (state.gliderSpeed >= BAD_CRASH_SPEED) {\n                            sessionStorage.setItem('returnWorld', location.pathname);\n                            location.assign('../ginnungagap/');\n                        } else {\n                            // console.log(\"setting start position\", state.gliderPositionStart);\n                            state.gliderPosition.x = state.gliderPositionStart.x;\n                            state.gliderPosition.y = state.gliderPositionStart.y;\n                            state.gliderPosition.z = state.gliderPositionStart.z;\n                            state.gliderRotationX = 0;\n                            state.gliderRotationY = state.gliderRotationYStart;\n                            state.gliderSpeed = 5;\n                            this.controlStickToNeutral(state);\n                            state.hudAirspeedAngle = 0;\n                            state.hudAirspeedColor = 'forestgreen';\n                            state.cameraEl.object3D.rotation.x = 0;   // only takes effect when look-controls disabled\n                            state.cameraEl.object3D.rotation.y = 0;\n                            state.cameraEl.object3D.rotation.z = 0;\n                            setTimeout(this.showControlsReminder.bind(this, state), 3000);\n                        }\n                    }, 2000)\n                }\n            });\n\n            armatureEl.addEventListener('hitstart', (evt) => {\n                // console.log('hitstart armature:', evt.detail.intersectedEls);\n                evt.detail.intersectedEls.forEach( (el) => {\n                    if (el.classList.contains('powerup')) {\n                        console.log(\"powerup\");\n                        state.gliderSpeed += POWERUP_BOOST;\n                        this.powerup.play();\n                    } else if (el.classList.contains('star')) {\n                       ++state.stars;\n                       console.log(\"collected star\", state.stars, \"of\", state.numYellowStars);\n                        el.parentNode.removeChild(el);\n                       this.ding.play();\n                    } else if (el.classList.contains('proximitySound')) {\n                        let url = el.getAttribute('data-sound-url');\n                        let volume = el.getAttribute('data-sound-volume') || 1.0;\n                        if (url) {\n                            new Howl({src: url, volume: volume, autoplay: true});\n                        }\n                        let text = el.getAttribute('data-text');\n                        let subtitle = AFRAME.scenes[0].querySelector('#subtitle');\n                        if (text && subtitle) {\n                            subtitle.setAttribute('value', text);\n                            setTimeout(() => {\n                                subtitle.setAttribute('value', \"\");\n                            }, 5000);\n                        }\n                   } else if (el.components.link) {\n                       console.log(\"hit link\");\n                       if (! /ginnungagap/.test(location.pathname)) {\n                           sessionStorage.setItem('previousWorld', location.pathname);\n                       }\n                   }\n                });\n            });\n\n            // state doesn't have an init, so we'll register this here.\n            // desktop controls\n            document.addEventListener('keydown', function(evt) {\n                // console.log('keydown:', evt.code);\n                var cameraRotation = state.cameraEl.getAttribute('rotation');\n                switch (evt.code) {\n                    case 'KeyA':\n                    case 'ArrowLeft':\n                        state.cameraEl.object3D.rotation.z += 0.07;\n                        break;\n                    case 'KeyD':\n                    case 'ArrowRight':\n                        state.cameraEl.object3D.rotation.z -= 0.07;\n                        break;\n                    case 'KeyW':\n                    case 'ArrowUp':\n                        state.cameraEl.object3D.rotation.x += 0.045;\n                        break;\n                    case 'KeyS':\n                    case 'ArrowDown':\n                        state.cameraEl.object3D.rotation.x -= 0.045;\n                        break;\n                    case 'Space':\n                        if (!state.isFlying) {\n                            AFRAME.scenes[0].emit('launch', evt);\n                        } else {\n                            if (state.debug) {\n                                AFRAME.scenes[0].emit('hover', evt);\n                            }\n                        }\n                        break;\n                    case 'Enter':\n                        state.hudVisible = ! state.hudVisible;\n                        break;\n                }\n            }, false);\n\n            // two-controller steering\n\n            state.leftHandEl = document.getElementById(\"leftHand\");\n            state.rightHandEl = document.getElementById(\"rightHand\");\n            if (isDesktop()) {\n                state.leftHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n                state.rightHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n            }\n\n            this.leftDownHandler = this.handHandler.bind(this, 'LEFT', 'DOWN', state);\n            this.leftUpHandler = this.handHandler.bind(this, 'LEFT', 'UP', state);\n            this.rightDownHandler = this.handHandler.bind(this, 'RIGHT', 'DOWN', state);\n            this.rightUpHandler = this.handHandler.bind(this, 'RIGHT', 'UP', state);\n\n            state.controlStickEl = document.getElementById('controlStick');\n        },\n\n        controllerconnected: function (state, evt) {   // evt is name and component; this is state obj\n            state.controllerConnections[evt.component.el.id] = true;\n            this.adjustControlMode(state);\n        },\n        controllerdisconnected: function (state, evt) {\n            state.controllerConnections[evt.component.el.id] = false;\n            this.adjustControlMode(state);\n        },\n        adjustControlMode: function (state) {\n            const oldControlMode =  state.controlMode;\n            if (state.controllerConnections.leftHand || state.controllerConnections.rightHand) {\n                state.controlMode = 'HANDS';\n            } else {\n                state.controlMode = 'HEAD';\n            }\n            if (state.controlMode !== oldControlMode) {\n                console.log(\"changed control mode from\", oldControlMode, \"to\", state.controlMode);\n                if (state.controlMode === 'HANDS') {\n                    state.leftHandEl?.addEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl?.addEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl?.addEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl?.addEventListener('buttonup', this.rightUpHandler);\n\n                    this.controlStickToNeutral(state);\n                    state.controlStickEl.object3D.visible = true;\n                } else if (state.controlMode === 'HEAD') {\n                    state.leftHandEl?.removeEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl?.removeEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl?.removeEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl?.removeEventListener('buttonup', this.rightUpHandler);\n\n                    state.controlStickEl.object3D.visible = false;\n                }\n            }\n        },\n        handHandler: function handHandler(handedness, upDown, state, evt) {\n            const wasAnyPressedLeft = state.isAnyPressedLeft;\n            const trackedControlsLeft = state.leftHandEl?.components['tracked-controls'];\n            const buttonsLeft = trackedControlsLeft &&\n                    trackedControlsLeft.controller &&\n                    trackedControlsLeft.controller.gamepad &&\n                    trackedControlsLeft.controller.gamepad.buttons;\n            if (buttonsLeft) {\n                state.isAnyPressedLeft = false;\n                for (let i = 0; i < buttonsLeft.length; ++i) {   // not a JavaScript array\n                    if (buttonsLeft[i].pressed) {\n                        state.isAnyPressedLeft = true;\n                    }\n                }\n            } else if ('LEFT' === handedness) {\n                state.isAnyPressedLeft = 'DOWN' === upDown;   // hack\n            }\n\n            const wasAnyPressedRight = state.isAnyPressedRight;\n            const trackedControlsRight = state.rightHandEl?.components['tracked-controls'];\n            const buttonsRight = trackedControlsRight &&\n                    trackedControlsRight.controller &&\n                    trackedControlsRight.controller.gamepad &&\n                    trackedControlsRight.controller.gamepad.buttons;\n            if (buttonsRight) {\n                state.isAnyPressedRight = false;\n                for (let i = 0; i < buttonsRight.length; ++i) {   // not a JavaScript array\n                    if (buttonsRight[i].pressed) {\n                        state.isAnyPressedRight = true;\n                    }\n                }\n            } else if ('RIGHT' === handedness) {\n                state.isAnyPressedRight = 'DOWN' === upDown;   // hack\n            }\n\n            if (state.isAnyPressedLeft && ! wasAnyPressedLeft) {\n                switch (state.controlSubmode) {\n                    case 'LEFT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'RIGHT':\n                    case 'NONE':\n                        state.controlSubmode = 'LEFT';\n                        break;\n                }\n            } else if (state.isAnyPressedRight && ! wasAnyPressedRight) {\n                switch (state.controlSubmode) {\n                    case 'RIGHT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'LEFT':\n                    case 'NONE':\n                        state.controlSubmode = 'RIGHT';\n                        break;\n                }\n            }\n            console.log(\"controlSubmode:\", state.controlSubmode);\n        },\n        controlStickToNeutral: function (state) {\n            if (state.controlStickEl) {\n                const cameraPos = state.cameraEl.getAttribute(\"position\");\n                state.controlNeutralHeight = cameraPos.y - HUMAN_EYE_ELBOW_DISTANCE;\n                state.controlStickEl.setAttribute('position', {x: 0, y: state.controlNeutralHeight, z: -0.4});\n                state.controlStickEl.setAttribute('rotation', {x: 0, y: 0, z: 0});\n                state.xSetting = 0;\n                state.zSetting = 0;\n            }\n        },\n\n\n        // aframe-button-controls: any controller button, or scene touch\n        buttondown: function (state, action) {\n            // console.log(\"buttondown\", action);\n            if (!state.isFlying) {\n                AFRAME.scenes[0].emit('launch', action);\n            } else {\n                if (state.debug) {\n                    AFRAME.scenes[0].emit('hover', action);\n                }\n            }\n        },\n\n        countYellowStars: function (state, action) {\n            state.numYellowStars = AFRAME.scenes[0].querySelectorAll('.star').length;\n            console.log(\"numYellowStars:\", state.numYellowStars);\n            if (state.numYellowStars) {\n                this.ding = new Howl({src: ['../assets/393633__daronoxus__ding.mp3']});\n            }\n        },\n\n        launch: function (state, action) {\n            console.log(\"launch\", action);\n\n            state.isFlying = true;\n\n            state.controlsReminderDisplayed = false;\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            if (prelaunchHelp) {\n                prelaunchHelp.setAttribute('value', \"\");\n            }\n            goFullscreenLandscape();\n\n            let postlaunchHelp = AFRAME.scenes[0].querySelector('#postlaunchHelp');\n            if (postlaunchHelp && postlaunchHelp.src) {\n                let postlaunchHelpAudio = new Howl({src: [postlaunchHelp.src]});\n                setTimeout(() => {\n                    postlaunchHelpAudio.play();\n                }, 60000);\n            }\n        },\n        hover: function (state, action) {\n            console.log(\"hover\", action);\n\n            state.isFlying = false;\n        },\n\n        loaded: function (state, action) {\n            // console.log(\"loaded\", state, action);\n            let intro = document.getElementById('intro');\n            if (!intro) {\n                this.startInteraction(state);\n            }\n        },\n\n        'enter-vr': function (state) {\n            // console.log(\"enter-vr\");\n            this.startInteraction(state);\n        },\n        'exit-vr': function (state, action) {\n            // console.log(\"exit-vr\", action);\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls for flat screen\n            }\n\n            let intro = document.getElementById('intro');\n            if (intro) {\n                AFRAME.scenes[0].emit('hover', action);\n            }\n        },\n        startInteraction: function (state) {\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls\n            } else {\n                setTimeout(this.showControlsReminder.bind(this, state), 10000);\n            }\n        },\n        showControlsReminder: function (state) {\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            let intro = document.getElementById('intro');\n            if (prelaunchHelp && (!intro || AFRAME.scenes[0].is(\"vr-mode\")) && !state.isFlying) {\n                state.controlsReminderDisplayed = true;\n                if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected() || AFRAME.utils.device.isMobileVR()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nTilt left: turn left\\nTilt right: turn right\\nTilt back: climb & slow down\\nTilt forward: dive & speed up\\nTrigger, button or touchpad: launch\");\n                } else if (AFRAME.utils.device.isMobile()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nRoll your device left: turn left\\nRoll your device right: turn right\\nTilt up: climb & slow down\\nTilt down: dive & speed up\\nTap screen: launch\");\n                } else {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nA: turn left\\nD: turn right\\nW: climb (& slow down)\\nS: dive (& speed up)\\nSpace bar: launch\");\n                }\n            }\n        },\n\n        iterate: function (state, action) {\n            // A pause in the action is better than flying blind\n            action.timeDelta = Math.min(action.timeDelta, 100);\n            state.time += action.timeDelta * state.difficulty;\n\n            switch (state.controlMode) {\n                case \"HEAD\":\n                    let cameraRotation = state.cameraEl.getAttribute('rotation');\n                    if (!cameraRotation) {\n                        console.warn(\"camera rotation not available\");\n                        return;\n                    }\n\n                    let cameraRotX = isMagicWindow() ? cameraRotation.x + 20 : cameraRotation.x;\n                    state.xSetting = cameraRotX;\n                    state.zSetting = cameraRotation.z;\n                    break;\n                case \"HANDS\":\n                    const leftHandPos = state.leftHandEl?.getAttribute(\"position\");\n                    const rightHandPos = state.rightHandEl?.getAttribute(\"position\");\n                    switch (state.controlSubmode) {\n                        case \"LEFT\":\n                            const leftHandRot = state.leftHandEl?.getAttribute('rotation');\n\n                            state.controlStickEl.setAttribute('position', leftHandPos);\n                            state.controlStickEl.setAttribute('rotation', leftHandRot);\n\n                            state.xSetting = leftHandRot.x;\n                            state.zSetting = leftHandRot.z;\n                            break;\n                        case \"RIGHT\":\n                            const rightHandRot = state.rightHandEl?.getAttribute('rotation');\n\n                            state.controlStickEl.setAttribute('position', rightHandPos);\n                            state.controlStickEl.setAttribute('rotation', rightHandRot);\n\n                            state.xSetting = rightHandRot.x;\n                            state.zSetting = rightHandRot.z;\n                            break;\n                        case \"NONE\":\n                            // TODO: slow decay to neutral?\n                            break;\n                    }\n                    break;\n            }\n            let xDiff = state.xSetting - state.gliderRotationX;\n            let xChange = (xDiff + Math.sign(xDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(xChange) > Math.abs(xDiff)) {\n                xChange = xDiff;\n            }\n            let newXrot = state.gliderRotationX + xChange;\n            newXrot = Math.max(newXrot, -75);\n            newXrot = Math.min(newXrot, 75);\n            state.gliderRotationX = newXrot;\n\n            let zDiff = state.zSetting - state.gliderRotationZ;\n            let zChange = (zDiff + Math.sign(zDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(zChange) > Math.abs(zDiff)) {\n                zChange = zDiff;\n            }\n            let newZrot = state.gliderRotationZ + zChange;\n            newZrot = Math.max(newZrot, -70);\n            newZrot = Math.min(newZrot, 70);\n            state.gliderRotationZ = newZrot;\n\n            let deltaHeading = state.gliderRotationZ * action.timeDelta / 1000;\n            state.gliderRotationY = (state.gliderRotationY + deltaHeading + 180) % 360 - 180;\n\n            if (state.isFlying) {\n                let distance = state.gliderSpeed * action.timeDelta / 1000;\n\n                let posChange = calcPosChange(state.gliderRotationX, state.gliderRotationY+90, distance);\n                let altitudeChange = posChange.y;\n                state.gliderPosition.x += posChange.x;\n                state.gliderPosition.y += altitudeChange;\n                state.gliderPosition.z += posChange.z;\n\n                let speedChange = (-Math.sign(altitudeChange) * Math.sqrt(2 * GRAVITY * Math.abs(altitudeChange)) -\n                                0.0005 * state.gliderSpeed * state.gliderSpeed)\n                        * action.timeDelta / 1000;\n                state.gliderSpeed = Math.max(state.gliderSpeed + speedChange, 0.1);\n                state.gliderSpeed = Math.min(state.gliderSpeed, 99.4);\n\n                state.hudAirspeedAngle = Math.min(state.gliderSpeed * 9, 359);\n                state.hudAirspeedColor = state.gliderSpeed < BAD_CRASH_SPEED ? 'forestgreen' : 'goldenrod';\n\n                state.gliderEl.setAttribute('raycaster', 'far', state.gliderSpeed/4);\n            }\n        },\n\n        placeInGliderPath: function (state, action) {\n            // console.log(\"placeInGliderPath:\", action);\n            let verticalAngleDeg = state.gliderRotationX + (Math.random()-0.5) * action.variation;\n            let horizontalAngleDeg = state.gliderRotationY + 90 + (Math.random()-0.5) * action.variation;\n            let posChange = calcPosChange(verticalAngleDeg, horizontalAngleDeg, action.distance);\n            let newPos = {x: state.gliderPosition.x + posChange.x,\n                y: state.gliderPosition.y + posChange.y,\n                z: state.gliderPosition.z + posChange.z};\n            action.el.setAttribute('position', newPos);\n            action.el.setAttribute('rotation', 'y', state.gliderRotationY);\n        },\n\n        adjustForMagicWindow: function (wingEl) {\n            if (! isMagicWindow()) {\n                wingEl.object3D.rotation.x = 0;\n                wingEl.object3D.scale.set(1, 1, 1);\n            } else {\n                wingEl.object3D.rotation.x = THREE.MathUtils.degToRad(-30.0);\n                wingEl.object3D.scale.set(1, 1, 3);\n            }\n        },\n\n        adjustHudForVR: function (hudEl) {\n            if (AFRAME.utils.device.isMobile()) {\n                hudEl.object3D.position.x = 0.30;\n                hudEl.object3D.position.y = 0.30;\n            } else {\n                hudEl.object3D.position.x = 0.40;\n                hudEl.object3D.position.y = 0.42;\n            }\n            hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(25.0);\n            hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-15.0);\n        },\n\n        adjustHudForFlat: function (hudEl) {\n            if (isDesktop()) {\n                hudEl.object3D.position.x = 0.85;\n                hudEl.object3D.position.y = 0.45;\n                hudEl.object3D.rotation.x = 0.0;\n                hudEl.object3D.rotation.y = 0.0;\n            } else {\n                hudEl.object3D.position.x = 0.70;\n                hudEl.object3D.position.y = 0.15;\n                hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(15.0);\n                hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-20.0);\n            }\n        }\n    },\n\n    computeState: function (newState, payload) {\n        try {\n            let oldQuestComplete = newState.questComplete;\n            newState.questComplete = newState.numYellowStars <= 0 || newState.stars / newState.numYellowStars >= 0.95;\n            if (newState.questComplete && ! oldQuestComplete) {\n                let horncall = new Howl({src: ['../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3']});\n                horncall.play();\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n});\n\nAFRAME.registerComponent('armature-tick-state', {\n    init: function () {\n        AFRAME.scenes[0].emit('setArmatureEl', this.el);\n    },\n\n    tick: function (time, timeDelta) {\n        AFRAME.scenes[0].emit('iterate', {time: time, timeDelta: timeDelta});\n    }\n});\n","// canyon.js - maneuvering in cramped spaces, for Elfland Glider\n// Copyright © 2019-2020 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\n// import {setEnvironmentalSound} from \"../src/elfland-utils\";\nimport '../src/state.js'\nimport './canyon-terrain'\nimport '../assets/land-shader.js'\n// import '../src/intro.js'\n\n\nconst INITIAL_POSITION = {x:18, y:-100, z:48};\nconst INITIAL_ROTATION_X = 0;\nconst INITIAL_ROTATION_Y = -175;\n\nAFRAME.registerComponent('canyon', {\n    init: function () {\n        let sceneEl = this.el;\n        sceneEl.emit('setState', {\n            gliderPositionStart: INITIAL_POSITION,\n            gliderPosition: {x: INITIAL_POSITION.x, y: INITIAL_POSITION.y, z: INITIAL_POSITION.z},\n            gliderRotationX: INITIAL_ROTATION_X,\n            gliderRotationY: INITIAL_ROTATION_Y,\n            gliderRotationYStart: INITIAL_ROTATION_Y\n        });\n\n        // sceneEl.emit('countYellowStars', {});\n\n        this.positionSph = new THREE.Spherical(1, Math.PI/2, 0);\n        this.position = new THREE.Vector3();\n        this.sss = document.querySelector('a-simple-sun-sky');\n        this.landscapeEls = document.getElementsByClassName('landscape');\n    },\n\n    tick: function (time) {\n        this.positionSph.phi = Math.PI * (0.25 + 0.2 * Math.sin(Math.PI * (time / 120000 - 0.5)));\n        this.positionSph.theta = Math.PI * time / 120000;\n        this.position.setFromSpherical(this.positionSph);\n        let positionStr = this.position.x + ' ' + this.position.y + ' ' + this.position.z;\n        this.sss.setAttribute('sun-position', positionStr);\n        for (const el of this.landscapeEls) {\n            el.setAttribute('material', 'sunPosition', positionStr);\n        }\n    }\n});\n"],"names":["AFRAME","registerShader","schema","colorYin","type","default","colorYang","sunPosition","x","y","z","vertexShader","fragmentShader","init","data","sunPos","THREE","Vector3","this","material","ShaderMaterial","uniforms","value","Color","sunNormal","normalize","update","set","registerGeometry","spacing","geometry","PlaneGeometry","X_POINTS","Z_POINTS","rotateX","Math","PI","vertices","attributes","position","array","floatPatt","match","v","exec","height","parseFloat","computeVertexNormals","window","requestIdleCallback","cb","setTimeout","start","Date","now","didTimeout","timeRemaining","max","cancelIdleCallback","id","clearTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","lockLandscapeOrientation","screen","orientation","lock","then","response","console","log","catch","err","warn","isDesktop","utils","device","isMobile","isMobileVR","isMagicWindow","scenes","is","calcPosChange","verticalAngleDeg","horizontalAngleDeg","distance","verticalAngleRad","altitudeChange","sin","horizontalDistance","cos","horizontalAngleRad","document","addEventListener","monetization","handleMonetizationStart","evt","handleMonetizationStop","registerState","initialState","armatureEl","gliderEl","cameraEl","leftHandEl","rightHandEl","controllerConnections","isAnyPressedLeft","isAnyPressedRight","xSetting","zSetting","controlStickEl","controlNeutralHeight","controlMode","controlSubmode","time","difficulty","gliderPosition","gliderPositionStart","gliderRotationX","gliderRotationY","gliderRotationZ","gliderRotationYStart","isFlying","gliderSpeed","numYellowStars","POSITIVE_INFINITY","stars","questComplete","inventory","hudVisible","hudAirspeedAngle","hudAirspeedColor","controlsReminderDisplayed","debug","handlers","setState","state","values","pName","setArmatureEl","powerup","Howl","src","hasNativeWebXRImplementation","hasNativeWebVRImplementation","querySelector","dustEl","components","dust","setCamera","bodyEl","wingEl","hudEl","adjustForMagicWindow","checkHeadsetConnected","adjustHudForVR","adjustHudForFlat","event","object3D","setAttribute","detail","intersections","length","els","tagName","getAttribute","far","emit","play","sessionStorage","setItem","location","pathname","assign","controlStickToNeutral","rotation","showControlsReminder","bind","intersectedEls","forEach","el","classList","contains","parentNode","removeChild","ding","url","volume","autoplay","text","subtitle","link","test","code","getElementById","leftDownHandler","handHandler","leftUpHandler","rightDownHandler","rightUpHandler","controllerconnected","component","adjustControlMode","controllerdisconnected","oldControlMode","leftHand","rightHand","visible","removeEventListener","handedness","upDown","wasAnyPressedLeft","trackedControlsLeft","buttonsLeft","controller","gamepad","buttons","i","pressed","wasAnyPressedRight","trackedControlsRight","buttonsRight","cameraPos","buttondown","action","countYellowStars","querySelectorAll","launch","prelaunchHelp","promise","canvasEl","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","apply","Promise","resolve","goFullscreenLandscape","postlaunchHelp","postlaunchHelpAudio","hover","loaded","startInteraction","intro","iterate","timeDelta","min","cameraRotation","cameraRotX","leftHandPos","rightHandPos","leftHandRot","rightHandRot","xDiff","xChange","sign","abs","newXrot","zDiff","zChange","newZrot","deltaHeading","posChange","speedChange","sqrt","placeInGliderPath","random","variation","newPos","MathUtils","degToRad","scale","computeState","newState","payload","oldQuestComplete","error","registerComponent","tick","INITIAL_POSITION","positionSph","Spherical","sss","landscapeEls","getElementsByClassName","phi","theta","setFromSpherical","positionStr"],"sourceRoot":""}