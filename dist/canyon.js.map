{"version":3,"file":"canyon.js","mappings":"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","sources":["webpack://elfland-glider/./assets/land-shader.js","webpack://elfland-glider/./canyon/dark-elf.js","webpack://elfland-glider/./src/shim/requestIdleCallback.js","webpack://elfland-glider/webpack/bootstrap","webpack://elfland-glider/./src/elfland-utils.js","webpack://elfland-glider/./src/state.js","webpack://elfland-glider/./canyon/canyon-terrain.js","webpack://elfland-glider/./src/BufferGeometryUtilsRump.js","webpack://elfland-glider/./canyon/canyon.js"],"sourcesContent":["// land-shader.js - vaguely natural-looking material for A-Frame\n// Copyright © 2018,2023 Doug Reeder; Licensed under the GNU GPL-3.0\n//\n// The produced texture is a mix of the specified colors (default gray brown and dirt brown).\n// Faces will be 44% brighter in direct sun and 44% darker when facing away from the sun.\n// Example: material=\"shader:land; color1Yin:#63574d\"\n\nAFRAME.registerShader('land', {\n    schema: {\n        color1Yin: {type: 'color', default: '#63574d'},   // gray brown\n        color1Yang: {type: 'color', default: '#553c29'},   // dirt brown\n        color2Yin: {type: 'color', default: '#655b43'},   // gray sand\n        color2Yang: {type: 'color', default: '#60502f'},   // sand\n        sunPosition: {type: 'vec3', default: {x:-1.0, y:1.0, z:-1.0}}\n    },\n\n    vertexShader: `\nuniform vec3 sunNormal;\n\nvarying vec3 pos;\nvarying float sunFactor;\n\nvoid main() {\n  pos = position;\n    \n  sunFactor = 0.6875 + 0.75 * max(dot(normal, sunNormal), 0.0);\n   \n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}`,\n\n    fragmentShader: `\nuniform vec3 color1Yin;\nuniform vec3 color1Yang;\nuniform vec3 color2Yin;\nuniform vec3 color2Yang;\n\nvarying vec3 pos;\nvarying float sunFactor;\n\n//\tSimplex 3D Noise\n//\tby Ian McEwan, Ashima Arts\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\n\nfloat snoise(vec3 v){\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\n\n// First corner\n  vec3 i  = floor(v + dot(v, C.yyy) );\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\n\n// Other corners\n  vec3 g = step(x0.yzx, x0.xyz);\n  vec3 l = 1.0 - g;\n  vec3 i1 = min( g.xyz, l.zxy );\n  vec3 i2 = max( g.xyz, l.zxy );\n\n  //  x0 = x0 - 0. + 0.0 * C \n  vec3 x1 = x0 - i1 + 1.0 * C.xxx;\n  vec3 x2 = x0 - i2 + 2.0 * C.xxx;\n  vec3 x3 = x0 - 1. + 3.0 * C.xxx;\n\n// Permutations\n  i = mod(i, 289.0 ); \n  vec4 p = permute( permute( permute( \n             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n           + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) \n           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n// Gradients\n// ( N*N points uniformly over a square, mapped onto an octahedron.)\n  float n_ = 1.0/7.0; // N=7\n  vec3  ns = n_ * D.wyz - D.xzx;\n\n  vec4 j = p - 49.0 * floor(p * ns.z *ns.z);  //  mod(p,N*N)\n\n  vec4 x_ = floor(j * ns.z);\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\n\n  vec4 x = x_ *ns.x + ns.yyyy;\n  vec4 y = y_ *ns.x + ns.yyyy;\n  vec4 h = 1.0 - abs(x) - abs(y);\n\n  vec4 b0 = vec4( x.xy, y.xy );\n  vec4 b1 = vec4( x.zw, y.zw );\n\n  vec4 s0 = floor(b0)*2.0 + 1.0;\n  vec4 s1 = floor(b1)*2.0 + 1.0;\n  vec4 sh = -step(h, vec4(0.0));\n\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n  vec3 p0 = vec3(a0.xy,h.x);\n  vec3 p1 = vec3(a0.zw,h.y);\n  vec3 p2 = vec3(a1.xy,h.z);\n  vec3 p3 = vec3(a1.zw,h.w);\n\n//Normalise gradients\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n  p0 *= norm.x;\n  p1 *= norm.y;\n  p2 *= norm.z;\n  p3 *= norm.w;\n\n// Mix final noise value\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n  m = m * m;\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\n                                dot(p2,x2), dot(p3,x3) ) );\n}\n\nvoid main() {\n    float strata = smoothstep(-214.0, -212.0, pos.y) - smoothstep(-103.0, -101.0, pos.y) + smoothstep(-33.0, -31.0, pos.y);\n    vec3 colorYin  = mix(color1Yin,  color2Yin,  strata);\n    vec3 colorYang = mix(color1Yang, color2Yang, strata);\n\n    vec3 inherent = mix(\n        colorYin,\n        colorYang,\n        0.5 * (1.0 + snoise(pos*0.5) + 0.75*snoise(pos))\n    );\n    gl_FragColor = vec4(inherent * sunFactor, 1.0);\n}\n`,\n\n    /**\n     * `init` used to initialize material. Called once.\n     */\n    init: function (data) {\n        let sunPos = new THREE.Vector3(data.sunPosition.x, data.sunPosition.y, data.sunPosition.z);\n        this.material = new THREE.ShaderMaterial({\n            uniforms: {\n                color1Yin: {value: new THREE.Color(data.color1Yin)},\n                color1Yang: {value: new THREE.Color(data.color1Yang)},\n                color2Yin: {value: new THREE.Color(data.color2Yin)},\n                color2Yang: {value: new THREE.Color(data.color2Yang)},\n                sunNormal: {value: sunPos.normalize()}\n            },\n            vertexShader: this.vertexShader,\n            fragmentShader: this.fragmentShader\n        });\n    },\n    /**\n     * `update` used to update the material. Called on initialization and when data updates.\n     */\n    update: function (data) {\n        this.material.uniforms.color1Yin.value.set(data.color1Yin);\n        this.material.uniforms.color1Yang.value.set(data.color1Yang);\n        this.material.uniforms.color2Yin.value.set(data.color2Yin);\n        this.material.uniforms.color2Yang.value.set(data.color2Yang);\n        let sunPos = new THREE.Vector3(data.sunPosition.x, data.sunPosition.y, data.sunPosition.z);\n        this.material.uniforms.sunNormal.value = sunPos.normalize();\n        // this.material.uniforms.sunNormal.value.set(sunPos.normalize());\n    },\n});\n","// dark-elf.js - antagonist behavior for Elfland Glider\n// Copyright © 2023 by Doug Reeder; Licensed under the GNU GPL-3.0\n\n const modeList = [\n   {animation: 'root|flying_idle',      vector: new THREE.Vector3(0, 0, 1),  far: 5},\n   {animation: 'root|flying_left',      vector: new THREE.Vector3(2, 0, 0),  far: 5},\n   {animation: 'root|flying_right',     vector: new THREE.Vector3(-2, 0, 0), far: 5},\n   {animation: 'root|flying_up',        vector: new THREE.Vector3(0, 2, 0),  far: 8},\n   {animation: 'root|flying_down',      vector: new THREE.Vector3(0, -2, 0), far: 4},\n   {animation: 'root|flying_forward',   vector: new THREE.Vector3(0, 0, 4),  far: 10},\n   {animation: 'root|flying_backwards', vector: new THREE.Vector3(0, 0, -2), far: 5},\n ]\n\nconst X_ROT_LIMIT = Math.PI / 10;\n\nAFRAME.registerComponent('dark-elf', {\n  schema: {\n    isPursuing: {default: false},\n    goalLocation: {type: 'vec3'},\n    idleSpeed:    {default:  0.5},   // m/s\n    pursuitSpeed: {default: 10.0},   // m/s\n  },\n\n  vector: new THREE.Vector3(),\n  increment: new THREE.Vector3(),\n  isAvoidingLandcape: false,\n  goalNormal: new THREE.Vector3(),\n\n  init() {\n    const {el} = this;\n\n    const newYRot = el.object3D.rotation.y + (Math.random() - 0.5) * Math.PI / 2;\n    const newXRot = el.object3D.rotation.x + (Math.random() - 0.5) * Math.PI / 16;\n    el.object3D.rotation.set(newXRot, newYRot, el.object3D.rotation.z);\n\n    this.setMode(modeList[0]);\n\n    setInterval(this.randomMode.bind(this, el), 3000);\n\n    el.addEventListener('raycaster-intersection', (evt) => {\n      // Intersection w/ distance 0 is sometimes sent immediately\n      if (evt.detail.intersections.length > 0 && evt.detail.intersections[0].distance > 0) {\n        // console.log(\"intersections[0]:\", evt.detail.intersections[0])\n        this.isAvoidingLandcape = true;\n        const newXRot = el.object3D.rotation.x + (Math.random() - 0.5) * Math.PI / 36;\n        el.object3D.rotation.set(newXRot, el.object3D.rotation.y, el.object3D.rotation.z);\n        this.setMode(modeList[0]);\n      }\n    });\n    el.addEventListener('raycaster-intersection-cleared', (evt) => {\n      // console.log(\"cleared intersections:\", evt.detail?.clearedEls)\n      this.isAvoidingLandcape = false;\n    });\n  },\n\n  update(oldData) {\n  },\n\n  tick(time, timeDelta) {\n    const {el} = this;\n    let distance = 0;\n    if (this.isAvoidingLandcape) {\n      const newYRot = el.object3D.rotation.y - Math.PI / 90;   // turns right\n      el.object3D.rotation.set(el.object3D.rotation.x, newYRot, el.object3D.rotation.z);\n      return;\n    } else if (this.data.isPursuing) {\n      this.goalNormal.copy(this.data.goalLocation);\n      this.goalNormal.sub(el.object3D.position);\n      this.goalNormal.normalize();\n    } else {   // wandering\n      if (el.object3D.position.y > -50) {\n        el.object3D.rotation.x = Math.PI / 36;   // keeps elf in canyon\n      }\n\n      distance = this.data.idleSpeed * timeDelta / 1000;\n      this.increment.copy(this.vector);\n      this.increment.multiplyScalar(distance);\n    }\n    this.increment.applyEuler(el.object3D.rotation);\n    el.object3D.position.add(this.increment);\n    // console.log(\"\", this.increment, el.object3D.position)\n  },\n\n  randomMode(el) {\n    if (this.data.isPursuing) {\n      return;\n    }\n    if (Math.random() > 0.6667) {\n      this.setMode(modeList[Math.floor(modeList.length * Math.random())])\n    } else {\n      this.setMode(modeList[0]);\n    }\n  },\n\n  setMode(mode) {\n    this.el.setAttribute('animation-mixer', 'clip', mode.animation);\n\n    this.vector.copy(mode.vector);\n    this.el.setAttribute('raycaster', 'direction', {x: mode.vector.x, y: mode.vector.y, z: mode.vector.z});\n\n    this.el.setAttribute('raycaster', 'far', mode.far * this.data.idleSpeed);\n  },\n});\n\n // root|flying_idle root|flying_forward root|flying_backwards\n // root|flying_left root|flying_right\n // root|flying_up root|flying_down root|flying_nose_dive\n // root|talk_cycle root|wings_flapping\n // root|idle_look_left root|idle_look_right\n","/*!\n * Copyright 2015 Google Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing\n * permissions and limitations under the License.\n */\n \n/*\n * @see https://developers.google.com/web/updates/2015/08/using-requestidlecallback\n */\nwindow.requestIdleCallback = window.requestIdleCallback ||\n  function (cb) {\n    return setTimeout(function () {\n      var start = Date.now();\n      cb({ \n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start));\n        }\n      });\n    }, 1);\n  }\n\nwindow.cancelIdleCallback = window.cancelIdleCallback ||\n  function (id) {\n    clearTimeout(id);\n  } ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// elfland-utils.js - common functions for Elfland Glider\n// Copyright © 2018-2019 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\n\nfunction goFullscreenLandscape() {\n    // desktop is fine without fullscreen (which can be enabled via headset button, anyway)\n    if (!isMagicWindow()) {return;}\n\n    let canvasEl = document.querySelector('canvas.a-canvas');\n    let requestFullscreen =\n        canvasEl.requestFullscreen ||\n        canvasEl.webkitRequestFullscreen ||\n        canvasEl.mozRequestFullScreen ||  // The capitalized `S` is not a typo.\n        canvasEl.msRequestFullscreen;\n    let promise;\n    if (requestFullscreen) {\n        promise = requestFullscreen.apply(canvasEl);\n    }\n    if (!(promise && promise.then)) {\n        promise = Promise.resolve();\n    }\n    promise.then(lockLandscapeOrientation, lockLandscapeOrientation);\n}\n\nfunction lockLandscapeOrientation() {\n    if (screen.orientation && screen.orientation.lock) {\n        screen.orientation.lock(\"landscape\").then(response => {\n            console.log(\"screen orientation locked:\", response);\n        }).catch(err => {\n            console.warn(\"screen orientation didn't lock:\", err);\n        });\n    }\n}\n\n\nfunction isDesktop() {\n    return ! (AFRAME.utils.device.isMobile() || AFRAME.utils.device.isMobileVR());\n}\n\nfunction isMagicWindow() {\n    return AFRAME.utils.device.isMobile() && ! AFRAME.scenes[0].is(\"vr-mode\");\n}\n\n\nfunction calcPosChange(verticalAngleDeg, horizontalAngleDeg, distance) {\n    let verticalAngleRad = verticalAngleDeg/180*Math.PI;\n    let altitudeChange = distance * Math.sin(verticalAngleRad);\n\n    let horizontalDistance = distance * Math.cos(verticalAngleRad);\n    let horizontalAngleRad = horizontalAngleDeg/180*Math.PI;\n    return {x: horizontalDistance * Math.cos(horizontalAngleRad),\n        y: altitudeChange,\n        z: -horizontalDistance * Math.sin(horizontalAngleRad)};\n}\n\n\nvar environmentalSound = null;\n\n/**\n * Sets the background sound for a world. It is paused when the tab is hidden.\n * @param url string or Array of strings\n * @param volume number between 0.0 and 1.0\n */\nfunction setEnvironmentalSound(url, volume) {\n    environmentalSound = new Howl({\n        src: url,\n        autoplay: true,\n        loop: true,\n        volume: volume || 1.0,\n        html5: false,\n        onplayerror: function() {\n            environmentalSound.once('unlock', function() {\n                environmentalSound.play();\n            });\n        }\n    });\n}\n\n/** Starts the background sound for a world, if it wasn't already started. */\nfunction pokeEnvironmentalSound() {\n    if (environmentalSound && ! environmentalSound.playing()) {\n        environmentalSound.play();\n    }\n}\n\ndocument.addEventListener('visibilitychange', () => {\n    if (environmentalSound) {\n        if (document.hidden) {\n            environmentalSound.pause();\n        } else {\n            environmentalSound.play();\n        }\n    }\n}, false);\n\n\n/** Web Monetization */\nif (document.monetization)  {\n    function handleMonetizationStart(evt) {\n        console.log(\"monetization started:\", evt);\n    }\n    document.monetization.addEventListener('monetizationstart', handleMonetizationStart);\n\n    function handleMonetizationStop(evt) {\n        console.log(\"monetization stopped:\", evt);\n    }\n    document.monetization.addEventListener('monetizationstop', handleMonetizationStop);\n} else {\n    console.log(\"no monetization API\");\n}\n\nexport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, setEnvironmentalSound, pokeEnvironmentalSound};\n","// state.js - state model for Elfland Glider\n// Copyright © 2017-2023 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n//\n\nimport './shim/requestIdleCallback'\nimport {goFullscreenLandscape, isDesktop, isMagicWindow, calcPosChange, pokeEnvironmentalSound} from './elfland-utils'\n\nconst GRAVITY = 9.807;   // m/s^2\nconst HUMAN_EYE_ELBOW_DISTANCE = 0.56;   // m\nconst DIFFICULTY_VR = 0.75;\nconst DIFFICULTY_MAGIC_WINDOW = 0.6;\nconst DIFFICULTY_KEYBOARD = 0.5;\nconst POWERUP_BOOST = 16;\nconst BAD_CRASH_SPEED = 30;\n\nAFRAME.registerState({\n    initialState: {\n        armatureEl: null,\n        gliderEl: null,\n        cameraEl: null,\n        leftHandEl: null,\n        rightHandEl: null,\n        controllerConnections: {},\n        isAnyPressedLeft: false,\n        isAnyPressedRight: false,\n        xSetting: 0,\n        zSetting: 0,\n        controlStickEl: null,\n        controlNeutralHeight: 0.95,\n        controlMode: 'HEAD',   // or 'HANDS'\n        controlSubmode: 'NONE',   // or 'LEFT' or 'RIGHT'\n        time: 0,\n        difficulty: DIFFICULTY_MAGIC_WINDOW,\n        gliderPosition: {x:-30, y:15, z:30},\n        gliderPositionStart: {x:-30, y:15, z:30},\n        gliderRotationX: 0,\n        gliderRotationY: -45,\n        gliderRotationZ: 0,\n        gliderRotationYStart: -45,\n        isFlying: false,\n        gliderSpeed: 5,\n        numYellowStars: Math.POSITIVE_INFINITY,\n        stars: 0,\n        questComplete: false,\n        inventory: {},   // keyed by object ID\n        hudVisible: true,\n        hudAirspeedAngle: 0,\n        hudAirspeedColor: 'forestgreen',\n        controlsReminderDisplayed: false,\n        debug: false   // no way to enable this yet\n    },\n\n    handlers: {\n        setState: function (state, values) {\n            for (let pName in values) {\n                if (pName !== 'target') {\n                    console.log(\"setting\", pName, values[pName]);\n                    state[pName] = values[pName];\n                }\n            }\n        },\n\n        setArmatureEl: function (state, armatureEl) {\n            this.powerup = new Howl({src: ['../assets/411460__inspectorj__power-up-bright-a.mp3']});\n\n            console.log(\"hasNativeWebXRImplementation:\", window.hasNativeWebXRImplementation);\n            console.log(\"hasNativeWebVRImplementation:\", window.hasNativeWebVRImplementation);\n            console.log(\"isMobile:\", AFRAME.utils.device.isMobile());\n            console.log(\"isMobileVR:\", AFRAME.utils.device.isMobileVR());\n\n            state.armatureEl = armatureEl;\n            state.gliderEl = armatureEl.querySelector('#glider');\n            state.cameraEl = armatureEl.querySelector('[camera]');\n\n            let dustEl = AFRAME.scenes[0].querySelector('a-dust');\n            if (dustEl) {\n                requestIdleCallback(() => {   // delays setup until there's some slack time\n                    dustEl.components.dust.setCamera(state.armatureEl);\n                }, {timeout: 10_000});\n            }\n\n            let bodyEl = state.armatureEl.querySelector('#body');\n            let wingEl = state.gliderEl.querySelector('#wing');\n            let hudEl = armatureEl.querySelector('#hud');\n            this.adjustForMagicWindow(wingEl);\n            if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected()) {\n                this.adjustHudForVR(hudEl);\n                state.difficulty = DIFFICULTY_VR;\n            } else {\n                this.adjustHudForFlat(hudEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            }\n            AFRAME.scenes[0].addEventListener('enter-vr', (event) => {\n                if (AFRAME.utils.device.checkHeadsetConnected()) {\n                    bodyEl.object3D.position.y = -1.6;\n                    this.adjustHudForVR(hudEl);\n                    this.adjustForMagicWindow(wingEl);\n                    state.difficulty = DIFFICULTY_VR;\n                }\n                pokeEnvironmentalSound();\n            });\n            AFRAME.scenes[0].addEventListener('exit-vr', (event) => {\n                // bodyEl.object3D.position.y = 0;   // Why is this unnecessary?\n                this.adjustHudForFlat(hudEl);\n                this.adjustForMagicWindow(wingEl);\n                if (isMagicWindow()) {\n                    state.difficulty = DIFFICULTY_MAGIC_WINDOW;\n                } else {\n                    state.difficulty = DIFFICULTY_KEYBOARD;\n                }\n            });\n\n            if (isDesktop() && !AFRAME.utils.device.checkHeadsetConnected()) {\n                console.log(\"desktop w/o headset; disabling look-controls so keyboard controls can function\");\n                state.cameraEl.setAttribute('look-controls', 'enabled', 'false');\n            }\n\n            state.gliderEl.addEventListener('raycaster-intersection', (evt) => {\n                // Intersection w/ distance 0 is sometimes sent immediately\n                if (evt.detail.intersections.length > 0 && evt.detail.intersections[0].distance > 0) {\n                    console.log(\"CRASH!\", evt.detail.els[0].tagName,\n                        evt.detail.intersections[0].distance,\n                        state.gliderEl.getAttribute('raycaster').far, state.gliderSpeed/4);\n                    AFRAME.scenes[0].emit('hover', {});\n                    let crash = new Howl({src: ['../assets/198876__bone666138__crash.mp3']});\n                    crash.play();\n\n                    setTimeout(() => {\n                        if (state.gliderSpeed >= BAD_CRASH_SPEED) {\n                            sessionStorage.setItem('returnWorld', location.pathname);\n                            location.assign('../ginnungagap/');\n                        } else {\n                            // console.log(\"setting start position\", state.gliderPositionStart);\n                            state.gliderPosition.x = state.gliderPositionStart.x;\n                            state.gliderPosition.y = state.gliderPositionStart.y;\n                            state.gliderPosition.z = state.gliderPositionStart.z;\n                            state.gliderRotationX = 0;\n                            state.gliderRotationY = state.gliderRotationYStart;\n                            state.gliderSpeed = 5;\n                            this.controlStickToNeutral(state);\n                            state.hudAirspeedAngle = 0;\n                            state.hudAirspeedColor = 'forestgreen';\n                            state.cameraEl.object3D.rotation.x = 0;   // only takes effect when look-controls disabled\n                            state.cameraEl.object3D.rotation.y = 0;\n                            state.cameraEl.object3D.rotation.z = 0;\n                            setTimeout(this.showControlsReminder.bind(this, state), 3000);\n                        }\n                    }, 2000)\n                }\n            });\n\n            armatureEl.addEventListener('hitstart', (evt) => {\n                // console.log('hitstart armature:', evt.detail.intersectedEls);\n                evt.detail.intersectedEls.forEach( (el) => {\n                    if (el.classList.contains('powerup')) {\n                        console.log(\"powerup\");\n                        state.gliderSpeed += POWERUP_BOOST;\n                        this.powerup.play();\n                    } else if (el.classList.contains('star')) {\n                        ++state.stars;\n                        console.log(\"collected star\", state.stars, \"of\", state.numYellowStars);\n                        el.parentNode.removeChild(el);\n                        this.ding.play();\n                    } else if ('key' === el.id) {\n                        state.questComplete = true;\n                        let horncall = new Howl({src: ['../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3']});\n                        horncall.play();\n                        el.parentNode.removeChild(el);\n                    } else if (el.classList.contains('proximitySound')) {\n                        let url = el.getAttribute('data-sound-url');\n                        let volume = el.getAttribute('data-sound-volume') || 1.0;\n                        if (url) {\n                            new Howl({src: url, volume: volume, autoplay: true});\n                        }\n                        let text = el.getAttribute('data-text');\n                        let subtitle = AFRAME.scenes[0].querySelector('#subtitle');\n                        if (text && subtitle) {\n                            subtitle.setAttribute('value', text);\n                            setTimeout(() => {\n                                subtitle.setAttribute('value', \"\");\n                            }, 5000);\n                        }\n                   } else if (el.components.link) {\n                       console.log(\"hit link\");\n                       if (! /ginnungagap/.test(location.pathname)) {\n                           sessionStorage.setItem('previousWorld', location.pathname);\n                       }\n                   }\n                });\n            });\n\n            // state doesn't have an init, so we'll register this here.\n            // desktop controls\n            document.addEventListener('keydown', function(evt) {\n                // console.log('keydown:', evt.code);\n                var cameraRotation = state.cameraEl.getAttribute('rotation');\n                switch (evt.code) {\n                    case 'KeyA':\n                    case 'ArrowLeft':\n                        state.cameraEl.object3D.rotation.z += 0.07;\n                        break;\n                    case 'KeyD':\n                    case 'ArrowRight':\n                        state.cameraEl.object3D.rotation.z -= 0.07;\n                        break;\n                    case 'KeyW':\n                    case 'ArrowUp':\n                        state.cameraEl.object3D.rotation.x += 0.045;\n                        break;\n                    case 'KeyS':\n                    case 'ArrowDown':\n                        state.cameraEl.object3D.rotation.x -= 0.045;\n                        break;\n                    case 'Space':\n                        if (!state.isFlying) {\n                            AFRAME.scenes[0].emit('launch', evt);\n                        } else {\n                            if (state.debug) {\n                                AFRAME.scenes[0].emit('hover', evt);\n                            }\n                        }\n                        break;\n                    case 'Enter':\n                        state.hudVisible = ! state.hudVisible;\n                        break;\n                }\n            }, false);\n\n            // two-controller steering\n\n            state.leftHandEl = document.getElementById(\"leftHand\");\n            state.rightHandEl = document.getElementById(\"rightHand\");\n            if (isDesktop()) {\n                state.leftHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n                state.rightHandEl.setAttribute('hand-controls', 'handModelStyle', 'highPoly');\n            }\n\n            this.leftDownHandler = this.handHandler.bind(this, 'LEFT', 'DOWN', state);\n            this.leftUpHandler = this.handHandler.bind(this, 'LEFT', 'UP', state);\n            this.rightDownHandler = this.handHandler.bind(this, 'RIGHT', 'DOWN', state);\n            this.rightUpHandler = this.handHandler.bind(this, 'RIGHT', 'UP', state);\n\n            state.controlStickEl = document.getElementById('controlStick');\n        },\n\n        controllerconnected: function (state, evt) {   // evt is name and component; this is state obj\n            state.controllerConnections[evt.component.el.id] = true;\n            this.adjustControlMode(state);\n        },\n        controllerdisconnected: function (state, evt) {\n            state.controllerConnections[evt.component.el.id] = false;\n            this.adjustControlMode(state);\n        },\n        adjustControlMode: function (state) {\n            const oldControlMode =  state.controlMode;\n            if (state.controllerConnections.leftHand || state.controllerConnections.rightHand) {\n                state.controlMode = 'HANDS';\n            } else {\n                state.controlMode = 'HEAD';\n            }\n            if (state.controlMode !== oldControlMode) {\n                console.log(\"changed control mode from\", oldControlMode, \"to\", state.controlMode);\n                if (state.controlMode === 'HANDS') {\n                    state.leftHandEl?.addEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl?.addEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl?.addEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl?.addEventListener('buttonup', this.rightUpHandler);\n\n                    this.controlStickToNeutral(state);\n                    state.controlStickEl.object3D.visible = true;\n                } else if (state.controlMode === 'HEAD') {\n                    state.leftHandEl?.removeEventListener('buttondown', this.leftDownHandler);\n                    state.leftHandEl?.removeEventListener('buttonup', this.leftUpHandler);\n                    state.rightHandEl?.removeEventListener('buttondown', this.rightDownHandler);\n                    state.rightHandEl?.removeEventListener('buttonup', this.rightUpHandler);\n\n                    state.controlStickEl.object3D.visible = false;\n                }\n            }\n        },\n        handHandler: function handHandler(handedness, upDown, state, evt) {\n            const wasAnyPressedLeft = state.isAnyPressedLeft;\n            const trackedControlsLeft = state.leftHandEl?.components['tracked-controls'];\n            const buttonsLeft = trackedControlsLeft &&\n                    trackedControlsLeft.controller &&\n                    trackedControlsLeft.controller.gamepad &&\n                    trackedControlsLeft.controller.gamepad.buttons;\n            if (buttonsLeft) {\n                state.isAnyPressedLeft = false;\n                for (let i = 0; i < buttonsLeft.length; ++i) {   // not a JavaScript array\n                    if (buttonsLeft[i].pressed) {\n                        state.isAnyPressedLeft = true;\n                    }\n                }\n            } else if ('LEFT' === handedness) {\n                state.isAnyPressedLeft = 'DOWN' === upDown;   // hack\n            }\n\n            const wasAnyPressedRight = state.isAnyPressedRight;\n            const trackedControlsRight = state.rightHandEl?.components['tracked-controls'];\n            const buttonsRight = trackedControlsRight &&\n                    trackedControlsRight.controller &&\n                    trackedControlsRight.controller.gamepad &&\n                    trackedControlsRight.controller.gamepad.buttons;\n            if (buttonsRight) {\n                state.isAnyPressedRight = false;\n                for (let i = 0; i < buttonsRight.length; ++i) {   // not a JavaScript array\n                    if (buttonsRight[i].pressed) {\n                        state.isAnyPressedRight = true;\n                    }\n                }\n            } else if ('RIGHT' === handedness) {\n                state.isAnyPressedRight = 'DOWN' === upDown;   // hack\n            }\n\n            if (state.isAnyPressedLeft && ! wasAnyPressedLeft) {\n                switch (state.controlSubmode) {\n                    case 'LEFT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'RIGHT':\n                    case 'NONE':\n                        state.controlSubmode = 'LEFT';\n                        break;\n                }\n            } else if (state.isAnyPressedRight && ! wasAnyPressedRight) {\n                switch (state.controlSubmode) {\n                    case 'RIGHT':\n                        state.controlSubmode = 'NONE';\n                        break;\n                    case 'LEFT':\n                    case 'NONE':\n                        state.controlSubmode = 'RIGHT';\n                        break;\n                }\n            }\n            console.log(\"controlSubmode:\", state.controlSubmode);\n        },\n        controlStickToNeutral: function (state) {\n            if (state.controlStickEl) {\n                const cameraPos = state.cameraEl.getAttribute(\"position\");\n                state.controlNeutralHeight = cameraPos.y - HUMAN_EYE_ELBOW_DISTANCE;\n                state.controlStickEl.setAttribute('position', {x: 0, y: state.controlNeutralHeight, z: -0.4});\n                state.controlStickEl.setAttribute('rotation', {x: 0, y: 0, z: 0});\n                state.xSetting = 0;\n                state.zSetting = 0;\n            }\n        },\n\n\n        // aframe-button-controls: any controller button, or scene touch\n        buttondown: function (state, action) {\n            // console.log(\"buttondown\", action);\n            if (!state.isFlying) {\n                AFRAME.scenes[0].emit('launch', action);\n            } else {\n                if (state.debug) {\n                    AFRAME.scenes[0].emit('hover', action);\n                }\n            }\n        },\n\n        countYellowStars: function (state, action) {\n            state.numYellowStars = AFRAME.scenes[0].querySelectorAll('.star').length;\n            console.log(\"numYellowStars:\", state.numYellowStars);\n            if (state.numYellowStars) {\n                this.ding = new Howl({src: ['../assets/393633__daronoxus__ding.mp3']});\n            }\n        },\n\n        launch: function (state, action) {\n            console.log(\"launch\", action);\n\n            state.isFlying = true;\n\n            state.controlsReminderDisplayed = false;\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            if (prelaunchHelp) {\n                prelaunchHelp.setAttribute('value', \"\");\n            }\n            goFullscreenLandscape();\n\n            let postlaunchHelp = AFRAME.scenes[0].querySelector('#postlaunchHelp');\n            if (postlaunchHelp && postlaunchHelp.src) {\n                let postlaunchHelpAudio = new Howl({src: [postlaunchHelp.src]});\n                setTimeout(() => {\n                    postlaunchHelpAudio.play();\n                }, 60000);\n            }\n        },\n        hover: function (state, action) {\n            console.log(\"hover\", action);\n\n            state.isFlying = false;\n        },\n\n        loaded: function (state, action) {\n            // console.log(\"loaded\", state, action);\n            let intro = document.getElementById('intro');\n            if (!intro) {\n                this.startInteraction(state);\n            }\n        },\n\n        'enter-vr': function (state) {\n            // console.log(\"enter-vr\");\n            this.startInteraction(state);\n        },\n        'exit-vr': function (state, action) {\n            // console.log(\"exit-vr\", action);\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls for flat screen\n            }\n\n            let intro = document.getElementById('intro');\n            if (intro) {\n                AFRAME.scenes[0].emit('hover', action);\n            }\n        },\n        startInteraction: function (state) {\n            if (state.controlsReminderDisplayed) {\n                this.showControlsReminder(state);   // updates list of controls\n            } else {\n                setTimeout(this.showControlsReminder.bind(this, state), 10000);\n            }\n        },\n        showControlsReminder: function (state) {\n            let prelaunchHelp = AFRAME.scenes[0].querySelector('#prelaunchHelp');\n            let intro = document.getElementById('intro');\n            if (prelaunchHelp && (!intro || AFRAME.scenes[0].is(\"vr-mode\")) && !state.isFlying) {\n                state.controlsReminderDisplayed = true;\n                if (AFRAME.scenes[0].is(\"vr-mode\") && AFRAME.utils.device.checkHeadsetConnected() || AFRAME.utils.device.isMobileVR()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nTilt left: turn left\\nTilt right: turn right\\nTilt back: climb & slow down\\nTilt forward: dive & speed up\\nTrigger, button or touchpad: launch\");\n                } else if (AFRAME.utils.device.isMobile()) {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nRoll your device left: turn left\\nRoll your device right: turn right\\nTilt up: climb & slow down\\nTilt down: dive & speed up\\nTap screen: launch\");\n                } else {\n                    prelaunchHelp.setAttribute('value', \"The wing above you\\npoints where you're flying.\\n\\nA: turn left\\nD: turn right\\nW: climb (& slow down)\\nS: dive (& speed up)\\nSpace bar: launch\");\n                }\n            }\n        },\n\n        iterate: function (state, action) {\n            // A pause in the action is better than flying blind\n            action.timeDelta = Math.min(action.timeDelta, 100);\n            state.time += action.timeDelta * state.difficulty;\n\n            switch (state.controlMode) {\n                case \"HEAD\":\n                    let cameraRotation = state.cameraEl.getAttribute('rotation');\n                    if (!cameraRotation) {\n                        console.warn(\"camera rotation not available\");\n                        return;\n                    }\n\n                    let cameraRotX = isMagicWindow() ? cameraRotation.x + 20 : cameraRotation.x;\n                    state.xSetting = cameraRotX;\n                    state.zSetting = cameraRotation.z;\n                    break;\n                case \"HANDS\":\n                    const leftHandPos = state.leftHandEl?.getAttribute(\"position\");\n                    const rightHandPos = state.rightHandEl?.getAttribute(\"position\");\n                    switch (state.controlSubmode) {\n                        case \"LEFT\":\n                            const leftHandRot = state.leftHandEl?.getAttribute('rotation');\n\n                            state.controlStickEl.setAttribute('position', leftHandPos);\n                            state.controlStickEl.setAttribute('rotation', leftHandRot);\n\n                            state.xSetting = leftHandRot.x;\n                            state.zSetting = leftHandRot.z;\n                            break;\n                        case \"RIGHT\":\n                            const rightHandRot = state.rightHandEl?.getAttribute('rotation');\n\n                            state.controlStickEl.setAttribute('position', rightHandPos);\n                            state.controlStickEl.setAttribute('rotation', rightHandRot);\n\n                            state.xSetting = rightHandRot.x;\n                            state.zSetting = rightHandRot.z;\n                            break;\n                        case \"NONE\":\n                            // TODO: slow decay to neutral?\n                            break;\n                    }\n                    break;\n            }\n            let xDiff = state.xSetting - state.gliderRotationX;\n            let xChange = (xDiff + Math.sign(xDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(xChange) > Math.abs(xDiff)) {\n                xChange = xDiff;\n            }\n            let newXrot = state.gliderRotationX + xChange;\n            newXrot = Math.max(newXrot, -75);\n            newXrot = Math.min(newXrot, 75);\n            state.gliderRotationX = newXrot;\n\n            let zDiff = state.zSetting - state.gliderRotationZ;\n            let zChange = (zDiff + Math.sign(zDiff)*15) * (action.timeDelta / 1000);\n            if (Math.abs(zChange) > Math.abs(zDiff)) {\n                zChange = zDiff;\n            }\n            let newZrot = state.gliderRotationZ + zChange;\n            newZrot = Math.max(newZrot, -70);\n            newZrot = Math.min(newZrot, 70);\n            state.gliderRotationZ = newZrot;\n\n            let deltaHeading = state.gliderRotationZ * action.timeDelta / 1000;\n            state.gliderRotationY = (state.gliderRotationY + deltaHeading + 180) % 360 - 180;\n\n            if (state.isFlying) {\n                let distance = state.gliderSpeed * action.timeDelta / 1000;\n\n                let posChange = calcPosChange(state.gliderRotationX, state.gliderRotationY+90, distance);\n                let altitudeChange = posChange.y;\n                state.gliderPosition.x += posChange.x;\n                state.gliderPosition.y += altitudeChange;\n                state.gliderPosition.z += posChange.z;\n\n                let speedChange = (-Math.sign(altitudeChange) * Math.sqrt(2 * GRAVITY * Math.abs(altitudeChange)) -\n                                0.0005 * state.gliderSpeed * state.gliderSpeed)\n                        * action.timeDelta / 1000;\n                state.gliderSpeed = Math.max(state.gliderSpeed + speedChange, 0.1);\n                state.gliderSpeed = Math.min(state.gliderSpeed, 99.4);\n\n                state.hudAirspeedAngle = Math.min(state.gliderSpeed * 9, 359);\n                state.hudAirspeedColor = state.gliderSpeed < BAD_CRASH_SPEED ? 'forestgreen' : 'goldenrod';\n\n                state.gliderEl.setAttribute('raycaster', 'far', state.gliderSpeed/4);\n            }\n        },\n\n        placeInGliderPath: function (state, action) {\n            // console.log(\"placeInGliderPath:\", action);\n            let verticalAngleDeg = state.gliderRotationX + (Math.random()-0.5) * action.variation;\n            let horizontalAngleDeg = state.gliderRotationY + 90 + (Math.random()-0.5) * action.variation;\n            let posChange = calcPosChange(verticalAngleDeg, horizontalAngleDeg, action.distance);\n            let newPos = {x: state.gliderPosition.x + posChange.x,\n                y: state.gliderPosition.y + posChange.y,\n                z: state.gliderPosition.z + posChange.z};\n            action.el.setAttribute('position', newPos);\n            action.el.setAttribute('rotation', 'y', state.gliderRotationY);\n        },\n\n        adjustForMagicWindow: function (wingEl) {\n            if (! isMagicWindow()) {\n                wingEl.object3D.rotation.x = 0;\n                wingEl.object3D.scale.set(1, 1, 1);\n            } else {\n                wingEl.object3D.rotation.x = THREE.MathUtils.degToRad(-30.0);\n                wingEl.object3D.scale.set(1, 1, 3);\n            }\n        },\n\n        adjustHudForVR: function (hudEl) {\n            if (AFRAME.utils.device.isMobile()) {\n                hudEl.object3D.position.x = 0.30;\n                hudEl.object3D.position.y = 0.30;\n            } else {\n                hudEl.object3D.position.x = 0.40;\n                hudEl.object3D.position.y = 0.42;\n            }\n            hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(25.0);\n            hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-15.0);\n        },\n\n        adjustHudForFlat: function (hudEl) {\n            if (isDesktop()) {\n                hudEl.object3D.position.x = 0.85;\n                hudEl.object3D.position.y = 0.45;\n                hudEl.object3D.rotation.x = 0.0;\n                hudEl.object3D.rotation.y = 0.0;\n            } else {\n                hudEl.object3D.position.x = 0.70;\n                hudEl.object3D.position.y = 0.15;\n                hudEl.object3D.rotation.x = THREE.MathUtils.degToRad(15.0);\n                hudEl.object3D.rotation.y = THREE.MathUtils.degToRad(-20.0);\n            }\n        }\n    },\n\n    computeState: function (newState, payload) {\n        try {\n            if (!newState.questComplete) {\n                newState.questComplete = newState.numYellowStars <= 0 || newState.stars / newState.numYellowStars >= 0.95;\n                if (newState.questComplete) {\n                    let horncall = new Howl({src: ['../assets/361684__taranp__horncall-strauss1-eflatmajor_incipit.mp3']});\n                    horncall.play();\n                }\n            }\n        } catch (err) {\n            console.error(err);\n        }\n    }\n});\n\nAFRAME.registerComponent('armature-tick-state', {\n    init: function () {\n        AFRAME.scenes[0].emit('setArmatureEl', this.el);\n    },\n\n    tick: function (time, timeDelta) {\n        AFRAME.scenes[0].emit('iterate', {time: time, timeDelta: timeDelta});\n    }\n});\n","// canyon-terrain.js - the landscape geometry for a canyon\n// Data and code are in one file to avoid asynchronous loading.\n// Copyright © 2023 Doug Reeder; Licensed under the GNU GPL-3.0\nimport { toCreasedNormals } from '../src/BufferGeometryUtilsRump';\n\nconst X_POINTS = 41;\nconst Z_POINTS = 67;\nconst terrainHeights = `\n0 0 0  0  0  0  0  0  0  0   0  0  0  0  0  0  0  0  0  0   0  0  0  0  0  0  0  0  0  0   0 0 0 0 0 0 0 0 0 0  0\n0 0 0  0  0  0  0  0  0  0   0 -1 -2 -2 -1  5 10 15 20 22  25 27 29 23 20 17 15  5  0  0   0 0 0 0 0 0 0 0 0 0  0\n0 0 0  0  0  0  0 -1 -2 -3  -3 -2 10 15 25 30 35 37 41 42  45 47 50 54 59 55 54 49 42  5   0 0 0 0 0 0 0 0 0 0  0\n0 0 0  0 -1 -2 -3 -4 -4 -3   5 20 25 31 41 45 49 54 56 58  60 63 65 70 72 78 80 70 45 15   1 0 0 0 0 0 0 0 0 0  0\n0 0 0 -1 -2 -3 -4 -5 -4 10  20 25 30 35 43 49 52 60 65 70  72 75 80 88 95 99 99 90 75 35  10 0 0 0 0 0 0 0 0 0  0\n\n0 -1 -2 -3 -4 -5 -6 -5 10 20  25 30 38 40 47 55 61 65 70 75  80 85 90 95 99 99 99 99 85 70  30  1  0  0  0  0 0 0 0 0  0\n0 -2 -3 -5 -5 -6 -6  5 20 25  30 35 40 46 50 51 59 62 65 70  75 80 85 90 95 99 99 99 94 81  79 68 59  1  0  0 0 0 0 0  0\n0 -2 -4 -6 -6 -7 15 20 25 30  35 40 41 45 47 45 40 30 35 45  50 60 65 75 80 85 90 95 90 87  82 70 69 45  1  0 0 0 0 0  0\n0 -2 -4 -5 -6 -7 20 31 42 47  49 46 47 46 40 35 30 15 10 10   5 10 20 45 65 65 70 75 86 84  80 78 71 55 66  5 0 0 0 0  0\n0 -1 -3 -4 -5 -6 22 39 41 50  52 50 48 41 35 20 10  1  0  0   0  0  0  5 15 40 50 70 82 83  84 75 77 72 63 59 1 0 0 0  0\n\n\n0 -1 -2 -3  -4 -5 15 48 55 60  56 53 47 40 35  1 0 0 0 0  0 0  0  0  0  5 67 72 79 81  80 79 78 76 73 65 62  5  0  0  0\n0 -1 -2 -3  -4  5 45 55 60 65  60 55 50 45 15  0 0 0 0 0  0 0  0  0  5 65 71 75 78 79  78 77 74 72 70 64 58 45  0  0  0\n0 -1 -2 -3   5 25 55 60 65 70  65 60 55 50  5  0 0 0 0 0  0 0  0  5 55 63 68 72 71 68  65 68 73 70 65 60 55 50  5  0  0\n0 -1 -2  5  50 55 60 65 70 75  70 65 60 55 50  5 0 0 0 0  0 0  5 45 60 62 65 60 55 50  20 50 55 57 55 54 55 52 48  0  0\n0 -1  5 50  55 65 65 70 75 75  75 69 65 60 55 50 5 0 0 0  0 0 35 50 54 60 55 50 45  0   0  5 44 49 52 55 54 52 48  1  0\n\n0  5 50 60 65 70 75 75 75 75  75 71 65 60 55 50 45  5  0  0  0 0 40 49 55 50 45 40  5  0   0  0  5 52 54 56 57 56 54 51  0\n0  5 65 70 75 75 75 75 75 75  75 75 70 65 60 55 50 45  5  0  0 0 47 50 49 40 35  5  0  0   0  0  0 55 57 59 60 59 57 54  0\n0  5 65 70 75 75 75 75 75 75  75 75 75 70 65 60 55 50 45  0  0 0  0 47 46 40  5  0  0  0   0  0  5 60 64 65 64 60 59 55  0\n0 55 60 65 70 75 75 75 75 75  75 75 75 75 70 65 60 55 48  5  0 0  0  0  0  0  0  0  0  0   5 70 69 69 70 67 64 63 60  1  0\n0 50 55 63 75 77 75 75 75 75  75 75 75 75 72 68 63 58 51 45  5 0  0  0  0  0  0  5 10 70  74 73 72 71 71 70 67 64 60  0  0\n\n\n0 40 50 71 79 77 75 72 70 65  70 75 75 74 70 65 60 53 46 40  47 55 60 65 70 75 75 75 75 75  75 75 74 73 72 72 69 64 57 0  0\n0 45 55 65 78 79 77 70 65 65  65 70 72 68 63 58 55 47 42 46  59 63 68 72 77 80 80 79 79 79  78 78 77 76 75 72 67 59 51 0  0\n0 40 60 69 81 82 78 70 65 60  60 60 60 58 55 53 47 43 50 60  68 70 76 79 84 85 85 83 83 83  84 83 82 79 76 70 62 52  1 0  0\n0 35 50 70 84 85 84 75 65 60  55 53 50 49 48 45 42 47 55 68  74 77 83 85 90 90 90 87 87 86  87 84 83 78 72 65 54 41  0 0  0\n0  0 40 74 85 86 87 78 75 68  49  1  1  1 30 39 47 55 60 65  80 84 90 90 95 95 95 91 91 89  88 85 79 73 66 57 44 30  0 0  0\n\n0 0 40 80 90 92 90 85 80 70   1  0  0  0  1 45 55 60 70 75  85 90 95 95 99 99 99 95 95 92  89 86 73 67 58 47 33 17 0 0  0\n0 0 35 80 91 93 94 90 80 70   1  0  0  0  0  1 55 65 75 80  90 95 99 99 99 99 99 99 96 93  90 87 65 58 48 35 18  1 0 0  0\n0 0 30 75 85 95 95 95 85 75   1  0  0  0  0  1 50 75 90 94  96 97 95 95 95 99 95 90 82 80  75 70 63 46 34 18  1  0 0 0  0\n0 0  5 45 80 92 96 96 96 90  85  1  1  1  1 55 75 95 95 96  95 90 90 90 90 90 85 80 70 71  63 54 45 34  1  0  0  0 0 0  0\n0 0  0 35 70 85 95 96 96 95  95 90 85 80 70 75 95 95 96 95  90 87 86 84 83 80 75 70 57 59  55 46  1  0  0  0  0  0 0 0  0\n\n\n0 0 0 15 50 80 85 90 95 95  95 95 95 95 95 95 95 95 95 90  85 81 79 74 62 56 49 44 40 38  12 0 0 0 0 0 0 0 0 0  0\n0 0 0  0  5 61 79 85 90 95  99 99 99 99 99 99 99 90 85 80  75 62 50 39 29 26 23 20 36 35  10 0 0 0 0 0 0 0 0 0  0\n0 0 0  0  0  1 85 89 92 95  98 99 99 98 98 97 96 93 88 84   1  1  1  1  0  0  0  0 33 32   0 0 0 0 0 0 0 0 0 0  0\n0 0 0  0  0  0  1 90 93 94  97 98 97 96 97 96 95 94  1  1   0  0  0  0  0  0  0  0 31 30   0 0 0 0 0 0 0 0 0 0  0\n0 0 0  0  0  0  1 92 94 96  97 96 96 95 94  1  1  1  0  0   0  0  0  0  0  0  0  0 29 29   0 0 0 0 0 0 0 0 0 0  0\n\n0 0  0  0  0  0  1 92 94 95  96 95 94 94  1  0  0  0  0  0   0  0  1  1  1  1  1  1 26 27  23  3  2  1  1  1  0  0  0 0  0\n0 0  0  0  0  0  1 92 93 94  95 94 93  1  0  0  0  0  0  1   1  1  1  2  2  2  2  2 24 25  23 18  3  2  2  1  1  0  0 0  0\n0 0  0  0  0  0  1 92 93 94  94 93 92  1  0  0  0  1  1  1   2  2  2  2 14 14 17 20 22 23  24 22 20 19  3  2  1  0  0 0  0\n0 0  0  0  0  0  1 92 92 93  92 92 91  1  0  0  1  1  2  2   2 11 12 13 15 16 17 18 20 22  23 23 22 19 13  2  1  1  0 0  0\n0 0  0  0  0  1 90 91 92 91  91 90  1  0  0  0  1  2  2  9  11 12 13 14 15 15 16 17 18 19  21 22 23 21 17  3  2  1  0 0  0\n0 0  0  0  0  1 89 90 91 90  89  1  1  0  0  1  2  6  7  9  11 12 13 14 14 14  2  1  1  0   0 18 22 24 22 18  2  1  1 0  0\n0 0  0  0  1  1 88 89 90 89  88  1  0  0  1  1  2  7  8 10  11 12 13 13 14 14  2  1  0  0   0 19 23 25 23 19  3  2  1 0  0\n0 0  0  1  1 87 88 89 88 88  87  1  0  0  1  2  2  8  9 10  11 12 13 14 15 15  2  1  0  0   1 16 22 25 26 24 20  2  1 1  0\n0 0  1  1 86 87 88 88 87 84   1  1  0  0  1  2  8  9 10 10  11 12 13 14 15 16 17 18 19 21  22 23 24 26 27 25 21  3  2 1  0\n0 0  1 84 86 87 87 86 84 80   1  0  0  0  1  2  9 10 10 10  10 12 13 15 16 16 17 19 21 23  24 26 27 28 28 26 22 14  2 1  0\n0 1  1 84 86 86 85 83 79 75   1  0  0  0  1  2  8 10 10 10  10 12 13  4  6 15 16 18 20 21  23 24 26 27 29 27 23 15  2 1  0\n0 1 81 82 84 85 84 82 78 66   1  0  0  0  1  2  2  9 10 10  10 11  2  2  1  1  1  1  1  1   1 21 25 28 30 28 24 16  2 1  0\n0 1 81 82 84 84 82 81 77  1   0  0  0  0  1  1  2  9 11 11   4  2  2  1  1  0  0  0  0  0   0  1 25 29 31 29 25  2  1 1  0\n0 1 81 82 83 83 81 76  1  0   0  0  0  0  0  1  2 10 12 13   2  1  1  1  0  0  0  0  0  0   0  0 26 30 32 30 26  1  1 0  0\n0 1 80 81 82 81 80  1  0  0   0  0  0  0  0  1  2  2 14 15   6  1  0  0  0  0  1  1  1  0   0  0 27 31 33 31 27  1  0 0  0\n0 1 79 80 81 80 79  1  0  0   0  0  0  0  0  1  1  2 15 16  18 06  1  0  0  1 28 28 28  1   0  0 28 32 34 32 28  1  0 0  0\n0 0  1 79 80 79 77  1  0  0   0  0  0  0  0  0  1  2 17 18  20 22 24 26 28 29 30 30 30 28   0  0  1 29 33 35 33 29  1 0  0\n0 0  1 77 78 79 77  1  0  0   0  0  0  0  0  0  1  2 19 20  21 23 23 27 29 30 30 30 30 28   0  0  0 30 34 36 35 33  1 0  0\n0 0  1 76 77 78 76  1  0  0   0  0  0  0  0  0  0  0  0  0   0  0  0  1 29 30 31 30 30 29   1  0  0 31 35 37 36 33  1 1  0\n0 0  1 75 76 77 75  1  0  0   0  0  0  0  0  0  0  0  0  0   0  0  0  0  1 30 32 34 33 33  31  0  0 31 35 37 38 36 32 1  0\n0 0  1 74 75 76 75 74  1  1   1  1  1  1  1  1  0  0 48 47  47  0  0  0  0  0  1 36 35 35  33  0  0  1 33 37 39 37 33 1  0\n0 1 73 74 75 74 73 72 69 66  65 63 63 62 62 59 55 54 53 52  52 51  0  0  0  0  0  1 38 39   1  0  0  0 34 38 40 38 34 1  0\n0 1 72 73 74 73 72 70 68 67  66 64 64 64 62 60 58 57 56 55  55 54 50 48  1  0  0  0 40 39   0  0  0  1 39 40 41 39 35 1  0\n0 1 72 72 73 73 72 70 68 68  68 66 65 65 62 61 60 59 58 57  57 56 54 52 48  0  0  1 44 43   1  0  1 37 41 42 40 36  1 0  0\n0 1 70 71 71 72 71 70 69 68  68 67 66 65 63 62 61 57 56 56  58 57 56 54 52 47 46 45 45 44  45 41 37 41 42 43 41 37  1 0  0\n\n\n0 1 70 69 70 71 71 71 70 69  68 66 65 64 61 60 58 53 52 53  56 55 54 55 54 51 50 48 46 45  43 44 40 43 44 43 40 32 1 0  0\n0 1 69 68 69 69 70 69 69 68  67 65 63 61 57 56 54  1  1  1  52 51 50 52 52 53 52 51 48 47  46 46 44 45 44 42 39  1 0 0  0\n0 0  1 67 67 68 68 67 67 66  65 63 59 57  1  1  1  0  0  0   1  1 46 45 48 51 50 50 49 48  48 47 46 44 43 41 35  1 0 0  0\n0 0  0  1 66 65 65 64 64 63  62 60  1  1  0  0  0  0  0  0   0  0  0  1 41 47 46 46 47 47  46 45 44 40 41 35  1  0 0 0  0\n0 0  0  0  0  1 61 60 60  1   1  1  0  0  0  0  0  0  0  0   0  0  0  0  0  1  1  1  1 43  42 41 40  1  1  1  0  0 0 0  0\n\n0 0  0  0  0  0  1  1  1  0   0  0  0  0  0  0  0  0  0  0   0  0  0  0  0  0  0  0  0  1   1  1  1  0  0  0  0  0 0 0  0\n`;\n// y is zero by default, so last row (all zeros) doesn't need to be calculated.\n\n\nAFRAME.registerGeometry('canyon-terrain', {\n  schema: {\n    spacing: {default: 10},\n    sunPosition: {type: 'vec3', default: {x:-1.0, y:1.0, z:-1.0}}\n  },\n\n  init: function (data) {\n    // Creates geometry.\n    const geometry = new THREE.PlaneGeometry((X_POINTS - 1) * data.spacing, (Z_POINTS - 1) * data.spacing, X_POINTS - 1, Z_POINTS - 1);\n    geometry.rotateX(-Math.PI / 2);\n\n    // applies elevations\n    const vertices = geometry.attributes.position.array;\n    const floatPatt = /\\s*\\S+/y;\n    let match;\n    let v = 0;\n    while (match = floatPatt.exec(terrainHeights)) {\n      let height = parseFloat(match[0]);\n      height = height * -2;\n      if (height < 0) {\n        height -= 100;\n      }\n      vertices[v * 3 + 1] = height;\n      ++v;\n    }\n\n    // computes normals that are smooth for shallow angles\n    const creasedGeometry = toCreasedNormals(geometry, 0.45 * Math.PI);\n    this.geometry = creasedGeometry;\n    geometry.dispose();\n  }\n});\n","// import {\n// \tBufferAttribute,\n// \tVector3,\n// } from 'three';\n\n// Creates a new, non-indexed geometry with smooth normals everywhere except faces that meet at\n// an angle greater than the crease angle.\nfunction toCreasedNormals( geometry, creaseAngle = Math.PI / 3 /* 60 degrees */ ) {\n\n\tconst creaseDot = Math.cos( creaseAngle );\n\tconst hashMultiplier = ( 1 + 1e-10 ) * 1e2;\n\n\t// reusable vertors\n\tconst verts = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\n\tconst tempVec1 = new THREE.Vector3();\n\tconst tempVec2 = new THREE.Vector3();\n\tconst tempNorm = new THREE.Vector3();\n\tconst tempNorm2 = new THREE.Vector3();\n\n\t// hashes a vector\n\tfunction hashVertex( v ) {\n\n\t\tconst x = ~ ~ ( v.x * hashMultiplier );\n\t\tconst y = ~ ~ ( v.y * hashMultiplier );\n\t\tconst z = ~ ~ ( v.z * hashMultiplier );\n\t\treturn `${x},${y},${z}`;\n\n\t}\n\n\tconst resultGeometry = geometry.toNonIndexed();\n\tconst posAttr = resultGeometry.attributes.position;\n\tconst vertexMap = {};\n\n\t// find all the normals shared by commonly located vertices\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\t// add the normal to the map for all vertices\n\t\tconst normal = new THREE.Vector3().crossVectors( tempVec1, tempVec2 ).normalize();\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tif ( ! ( hash in vertexMap ) ) {\n\n\t\t\t\tvertexMap[ hash ] = [];\n\n\t\t\t}\n\n\t\t\tvertexMap[ hash ].push( normal );\n\n\t\t}\n\n\t}\n\n\t// average normals from all vertices that share a common location if they are within the\n\t// provided crease threshold\n\tconst normalArray = new Float32Array( posAttr.count * 3 );\n\tconst normAttr = new THREE.BufferAttribute( normalArray, 3, false );\n\tfor ( let i = 0, l = posAttr.count / 3; i < l; i ++ ) {\n\n\t\t// get the face normal for this vertex\n\t\tconst i3 = 3 * i;\n\t\tconst a = verts[ 0 ].fromBufferAttribute( posAttr, i3 + 0 );\n\t\tconst b = verts[ 1 ].fromBufferAttribute( posAttr, i3 + 1 );\n\t\tconst c = verts[ 2 ].fromBufferAttribute( posAttr, i3 + 2 );\n\n\t\ttempVec1.subVectors( c, b );\n\t\ttempVec2.subVectors( a, b );\n\n\t\ttempNorm.crossVectors( tempVec1, tempVec2 ).normalize();\n\n\t\t// average all normals that meet the threshold and set the normal value\n\t\tfor ( let n = 0; n < 3; n ++ ) {\n\n\t\t\tconst vert = verts[ n ];\n\t\t\tconst hash = hashVertex( vert );\n\t\t\tconst otherNormals = vertexMap[ hash ];\n\t\t\ttempNorm2.set( 0, 0, 0 );\n\n\t\t\tfor ( let k = 0, lk = otherNormals.length; k < lk; k ++ ) {\n\n\t\t\t\tconst otherNorm = otherNormals[ k ];\n\t\t\t\tif ( tempNorm.dot( otherNorm ) > creaseDot ) {\n\n\t\t\t\t\ttempNorm2.add( otherNorm );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttempNorm2.normalize();\n\t\t\tnormAttr.setXYZ( i3 + n, tempNorm2.x, tempNorm2.y, tempNorm2.z );\n\n\t\t}\n\n\t}\n\n\tresultGeometry.setAttribute( 'normal', normAttr );\n\treturn resultGeometry;\n\n}\n\nexport {\n\ttoCreasedNormals\n};\n","// canyon.js - maneuvering in cramped spaces, for Elfland Glider\n// Copyright © 2019-2020 P. Douglas Reeder; Licensed under the GNU GPL-3.0\n\n// import {setEnvironmentalSound} from \"../src/elfland-utils\";\nimport '../src/state.js'\nimport './canyon-terrain'\nimport '../assets/land-shader.js'\nimport {darkElf} from './dark-elf'\n// import '../src/intro.js'\n\n\nconst INITIAL_POSITION = {x:-1, y:-100, z:48};\nconst INITIAL_ROTATION_X = 0;\nconst INITIAL_ROTATION_Y = -175;\n\nAFRAME.registerComponent('canyon', {\n    init: function () {\n        let sceneEl = this.el;\n        sceneEl.emit('setState', {\n            gliderPositionStart: INITIAL_POSITION,\n            gliderPosition: {x: INITIAL_POSITION.x, y: INITIAL_POSITION.y, z: INITIAL_POSITION.z},\n            gliderRotationX: INITIAL_ROTATION_X,\n            gliderRotationY: INITIAL_ROTATION_Y,\n            gliderRotationYStart: INITIAL_ROTATION_Y\n        });\n\n        // sceneEl.emit('countYellowStars', {});\n\n        this.positionSph = new THREE.Spherical(1, Math.PI/2, 0);\n        this.position = new THREE.Vector3();\n        this.sss = document.querySelector('a-simple-sun-sky');\n        this.landscapeEls = document.getElementsByClassName('landscape');\n    },\n\n    tick: function (time) {\n        this.positionSph.phi = Math.PI * (0.25 + 0.2 * Math.sin(Math.PI * (time / 120000 - 0.5)));\n        this.positionSph.theta = Math.PI * time / 120000;\n        this.position.setFromSpherical(this.positionSph);\n        let positionStr = this.position.x + ' ' + this.position.y + ' ' + this.position.z;\n        this.sss.setAttribute('sun-position', positionStr);\n        for (const el of this.landscapeEls) {\n            el.setAttribute('material', 'sunPosition', positionStr);\n        }\n    }\n});\n"],"names":["AFRAME","registerShader","schema","color1Yin","type","default","color1Yang","color2Yin","color2Yang","sunPosition","x","y","z","vertexShader","fragmentShader","init","data","sunPos","THREE","Vector3","this","material","ShaderMaterial","uniforms","value","Color","sunNormal","normalize","update","set","modeList","animation","vector","far","Math","PI","registerComponent","isPursuing","goalLocation","idleSpeed","pursuitSpeed","increment","isAvoidingLandcape","goalNormal","el","newYRot","object3D","rotation","random","newXRot","setMode","setInterval","randomMode","bind","addEventListener","evt","detail","intersections","length","distance","oldData","tick","time","timeDelta","copy","sub","position","multiplyScalar","applyEuler","add","floor","mode","setAttribute","window","requestIdleCallback","cb","setTimeout","start","Date","now","didTimeout","timeRemaining","max","cancelIdleCallback","id","clearTimeout","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","lockLandscapeOrientation","screen","orientation","lock","then","response","console","log","catch","err","warn","isDesktop","utils","device","isMobile","isMobileVR","isMagicWindow","scenes","is","calcPosChange","verticalAngleDeg","horizontalAngleDeg","verticalAngleRad","altitudeChange","sin","horizontalDistance","cos","horizontalAngleRad","document","monetization","handleMonetizationStart","handleMonetizationStop","registerState","initialState","armatureEl","gliderEl","cameraEl","leftHandEl","rightHandEl","controllerConnections","isAnyPressedLeft","isAnyPressedRight","xSetting","zSetting","controlStickEl","controlNeutralHeight","controlMode","controlSubmode","difficulty","gliderPosition","gliderPositionStart","gliderRotationX","gliderRotationY","gliderRotationZ","gliderRotationYStart","isFlying","gliderSpeed","numYellowStars","POSITIVE_INFINITY","stars","questComplete","inventory","hudVisible","hudAirspeedAngle","hudAirspeedColor","controlsReminderDisplayed","debug","handlers","setState","state","values","pName","setArmatureEl","powerup","Howl","src","hasNativeWebXRImplementation","hasNativeWebVRImplementation","querySelector","dustEl","components","dust","setCamera","timeout","bodyEl","wingEl","hudEl","adjustForMagicWindow","checkHeadsetConnected","adjustHudForVR","adjustHudForFlat","event","els","tagName","getAttribute","emit","play","sessionStorage","setItem","location","pathname","assign","controlStickToNeutral","showControlsReminder","intersectedEls","forEach","classList","contains","parentNode","removeChild","ding","url","volume","autoplay","text","subtitle","link","test","code","getElementById","leftDownHandler","handHandler","leftUpHandler","rightDownHandler","rightUpHandler","controllerconnected","component","adjustControlMode","controllerdisconnected","oldControlMode","leftHand","rightHand","visible","removeEventListener","handedness","upDown","wasAnyPressedLeft","trackedControlsLeft","buttonsLeft","controller","gamepad","buttons","i","pressed","wasAnyPressedRight","trackedControlsRight","buttonsRight","cameraPos","buttondown","action","countYellowStars","querySelectorAll","launch","prelaunchHelp","promise","canvasEl","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","apply","Promise","resolve","goFullscreenLandscape","postlaunchHelp","postlaunchHelpAudio","hover","loaded","startInteraction","intro","iterate","min","cameraRotation","cameraRotX","leftHandPos","rightHandPos","leftHandRot","rightHandRot","xDiff","xChange","sign","abs","newXrot","zDiff","zChange","newZrot","deltaHeading","posChange","speedChange","sqrt","placeInGliderPath","variation","newPos","MathUtils","degToRad","scale","computeState","newState","payload","error","registerGeometry","spacing","geometry","PlaneGeometry","X_POINTS","Z_POINTS","rotateX","vertices","attributes","array","floatPatt","match","v","exec","height","parseFloat","creasedGeometry","creaseAngle","creaseDot","hashMultiplier","verts","tempVec1","tempVec2","tempNorm","tempNorm2","hashVertex","resultGeometry","toNonIndexed","posAttr","vertexMap","l","count","i3","a","fromBufferAttribute","b","c","subVectors","normal","crossVectors","n","hash","push","normalArray","Float32Array","normAttr","BufferAttribute","otherNormals","k","lk","otherNorm","dot","setXYZ","toCreasedNormals","dispose","INITIAL_POSITION","positionSph","Spherical","sss","landscapeEls","getElementsByClassName","phi","theta","setFromSpherical","positionStr"],"sourceRoot":""}