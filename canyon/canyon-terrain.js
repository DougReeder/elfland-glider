// canyon-terrain.js - the landscape geometry for a canyon
// Data and code are in one file to avoid asynchronous loading.
// Copyright Â© 2023 Doug Reeder; Licensed under the GNU GPL-3.0

const X_POINTS = 41;
const Z_POINTS = 67;
const terrainHeights = `
0 0 0 0 0 0 0 0 0 0         0 0 0 0 0 0 0 0 0 0            0 0 0 0 0 0 0 0 0 0            0 0 0 0 0 0 0 0 0 0   0
0 0 0 0 0 0 0 0 0 0         0 -1 -2 -2 -1 5 10 15 20 20    25 25 25 25 20 15 15 5 0 0     0 0 0 0 0 0 0 0 0 0   0 
0 0 0 0 0 0 0 -1 -2 -3      -3 -2 10 15 25 30 35 35 40 45  45 45 50 50 50 55 55 35 35 5   0 0 0 0 0 0 0 0 0 0   0 
0 0 0 0 -1 -2 -3 -4 -4 -3   5 20 25 35 45 45 50 55 55 60   60 65 65 70 70 75 80 70 45 15  0 0 0 0 0 0 0 0 0 0   0 
0 0 0 -1 -2 -3 -4 -5 -4 10  20 25 30 35 50 55 55 60 65 70  75 75 80 90 95 99 99 90 75 35  10 0 0 0 0 0 0 0 0 0  0

0 -1 -2 -3 -4 -5 -6 -5 10 20  25 30 35 40 50 55 60 65 70 75  80 85 90 95 99 99 99 99 85 70  30 0 0 0 0 0 0 0 0 0        0 
0 -2 -3 -5 -5 -6 -6 5 20 25   30 35 40 45 50 55 60 60 65 70  75 80 85 90 95 99 99 99 99 75  50 25 10 0 0 0 0 0 0 0      0 
0 -2 -4 -6 -6 -7 15 20 25 30  35 40 45 45 50 45 40 30 35 45  50 60 65 75 80 85 90 90 90 89  79 70 35 40 0 0 0 0 0 0     0 
0 -2 -4 -5 -6 -7 20 40 45 50  50 50 50 45 40 35 30 15 10 10  5 10 20 45 65 65 70 75 80 85   90 85 60 55 50 5 0 0 0 0    0 
0 -1 -3 -4 -5 -6 10 30 50 50  55 50 45 40 35 20 10 0 0 0     0 0 0 5 15 40 50 70 80 85      85 85 80 70 60 50 1 0 0 0  0 


0 -1 -2 -3 -4 -5 15 50 55 60  55 50 45 40 35 0 0 0 0 0      0 0 0 0 0 5 70 75 80 80     80 80 80 75 70 65 60 5 0 0   0 
0 -1 -2 -3 -4 5 45 55 60 65   60 55 50 45 15 0 0 0 0 0      0 0 0 0 5 65 70 75 80 80    80 80 80 75 70 65 60 5 0 0   0 
0 -1 -2 -3 5 25 55 60 65 70   65 60 55 50 5 0 0 0 0 0       0 0 0 5 55 60 70 75 70 65   65 70 70 70 65 60 55 50 5 0  0
0 -1 -2 5 50 55 60 65 70 75   70 65 60 55 50 5 0 0 0 0      0 0 5 45 65 65 65 60 55 50  5 50 55 60 59 56 55 52 47 0  0
0 -1 5 50 55 65 65 70 75 76   75 70 65 60 55 50 5 0 0 0     0 0 35 50 60 60 55 50 45 0  0 5 44 49 52 54 55 54 52 49  0

0 5 50 60 65 70 75 75 75 75   75 70 65 60 55 50 45 5 0 0     0 0 40 45 55 50 45 40 5 0  0 0 5 51 54 56 57 56 54 51    0
0 5 65 70 75 75 75 75 75 75   75 75 70 65 60 55 50 45 5 0    0 0 45 50 45 40 35 5 0 0   0 0 0 54 57 59 60 59 57 54    0
0 5 65 70 75 75 75 75 75 75   75 75 75 70 65 60 55 50 45 0   0 0 0 45 45 40 5 0 0 0     0 0 5 62 64 65 64 62 59 54    0
0 55 60 65 70 75 75 75 75 75  75 75 75 75 70 65 60 55 50 5   0 0 0 0 0 0 0 0 0 0        5 64 67 69 68 69 67 64 59 0   0
0 50 55 63 75 77 75 75 75 75  75 75 75 75 75 70 65 60 55 50  5 0 0 0 0 0 0 5 10 45      55 59 69 70 65 60 55 50 45 0  0


0 40 50 71 79 80 75 72 70 65  70 75 75 75 70 65 60 55 50 39  46 45 45 45 50 50 50 50 55 60  67 72 74 75 74 72 69 65 58 1  0
0 45 55 65 80 81 77 70 65 65  65 70 75 70 65 60 55 50 42 45  50 55 65 70 75 75 80 75 80 80  80 80 80 75 70 65 60 55 40 0  0 
0 40 60 70 81 82 78 70 65 60  60 60 65 60 55 55 50 44 45 45  55 60 70 80 85 85 85 80 85 85  85 85 80 75 70 65 60 55 0 0   0
0 35 50 70 84 85 84 75 65 60  55 50 50 50 50 47 42 46 45 60  65 70 80 85 90 90 90 85 90 90  90 80 75 70 65 60 55 50 0 0   0
0 0 40 70 85 86 87 78 75 70   1 1 1 1 1 39 47 55 60 65       75 85 85 90 95 95 95 90 95 95  85 80 75 70 65 55 50 40 0 0   0

0 0 40 80 90 95 90 85 80 70  1 0 0 0 1 45 55 60 70 75       85 90 95 95 99 99 99 95 99 95  90 80 75 70 60 50 40 25 0 0  0
0 0 35 80 90 99 95 90 80 70  1 0 0 0 0 1 55 65 75 80        90 99 99 99 99 99 99 99 90 90  85 80 75 65 55 40 30 0 0 0   0
0 0 30 75 85 95 99 95 85 75  1 1 0 0 0 1 50 75 90 94        99 97 95 95 95 95 95 90 80 80  75 70 65 55 45 30 10 0 0 0   0
0 0 5 45 80 90 95 99 95 90   85 1 1 1 1 1 75 95 95 99       95 90 90 90 90 90 85 80 70 75  55 55 50 40 0 0 0 0 0 0      0
0 0 0 35 70 85 95 95 99 95   95 90 85 80 70 75 95 99 99 95  90 85 85 85 85 80 75 70 55 55  33 12 5 0 0 0 0 0 0 0        0


0 0 0 15 50 80 85 90 95 99  95 95 95 95 95 95 99 95 95 90  85 80 80 60 55 50 50 55 40 35  7 0 0 0 0 0 0 0 0 0   0 
0 0 0 0 5 61 79 85 90 95    99 99 99 99 99 99 95 90 85 80  75 55 50 15 5 5 5 10 35 36     10 0 0 0 0 0 0 0 0 0  0
0 0 0 0 0 1 85 89 92 95     98 99 99 98 98 97 96 93 88 84  1 1 1 1 0 0 0 1 31 31          5 1 0 0 0 0 0 0 0 0   0
0 0 0 0 0 0 1 90 93 94      97 98 97 96 97 96 95 94 1 1    0 0 0 0 0 0 0 1 28 28          1 1 0 0 0 0 0 0 0 0   0
0 0 0 0 0 0 1 92 94 96      97 96 96 95 94 1 1 1 0 0       0 0 0 0 0 0 0 1 27 27          1 1 0 0 0 0 0 0 0 0   0

0 0 0 0 0 0 1 92 94 95      96 95 94 94 1 0 0 0 0 0        0 0 1 1 1 1 1 1 26 26          27 1 1 1 0 0 0 0 0 0    0
0 0 0 0 0 0 1 92 93 94      95 94 93 1 1 0 0 0 0 1         1 1 1 2 2 2 2 2 24 25          25 2 2 1 0 0 0 0 0 0    0
0 0 0 0 0 0 1 92 93 94      94 93 92 1 0 0 0 1 1 1         2 2 2 2 14 14 2 2 22 24        24 23 2 1 1 1 0 0 0 0   0
0 0 0 0 0 1 1 92 92 93      92 92 91 1 0 0 1 1 2 2         2 12 13 14 15 16 17 18 20 22   23 24 2 2 2 1 1 0 0 0   0
0 0 0 0 0 1 90 91 92 91     91 90 1 1 0 0 1 2 2 9          11 12 13 14 15 15 16 17 1 1    1 23 24 26 2 2 1 1 0 0  0


0 0 0 0 0 1 89 90 91 90     89 1 1 0 0 1 2 6 7 9    11 12 13 14 14 14 2 1 1 0      1 1 23 25 26 2 2 1 1 0      0
0 0 0 0 1 1 88 89 90 89     88 1 0 0 1 1 2 7 8 10   11 12 13 13 14 14 2 1 0 0      0 1 2 24 25 25 2 2 1 1      0
0 0 0 1 1 87 88 89 88 88    87 1 0 0 1 2 2 8 9 10   11 12 13 14 15 15 2 1 1 0      1 1 2 25 25 26 25 2 2 1     0
0 0 1 1 86 87 88 88 87 86   1 1 0 0 1 2 8 9 10 10   11 12 13 14 15 16 17 18 1 1    1 25 26 26 26 27 26 2 2 1   0
0 0 1 84 86 87 87 86 85 84  1 0 0 0 1 2 9 10 10 10  10 12 13 15 16 16 17 19 21 23  24 26 27 28 28 28 26 2 2 1  0

0 1 1 84 86 86 85 84 81 70   1 0 0 0 1 2 8 10 10 10   10 12 13 2 2 2 16 18 20 22  23 24 26 27 29 28 27 2 2 1  0
0 1 81 82 84 85 84 82 79 64  1 1 0 0 1 2 2 9 10 10    10 11 2 2 1 1 1 1 1 1       1 1 25 28 30 29 2 2 1 0     0
0 1 81 82 84 84 83 81 79 63  63 1 0 0 1 1 2 9 11 11   2 2 2 1 1 0 0 0 0 0         0 1 1 29 31 30 2 1 1 0      0
0 1 81 82 83 83 82 1 1 61    62 1 1 0 0 1 2 10 12 13  2 1 1 1 0 0 0 0 0 0         0 0 1 30 32 31 2 1 0 0      0
0 1 80 81 82 81 80 1 0 1     61 62 1 0 0 1 2 2 14 14  2 1 0 0 0 0 1 1 1 1         0 0 1 1 33 32 2 1 0 0       0


0 1 79 80 81 80 79 1 0 1  60 61 1 0 0 1 1 2 16 16  18 1 0 0 1 1 1 30 30 1         1 0 0 1 33 33 2 1 0 0         0
0 1 1 79 80 79 77 1 0 1   60 61 1 1 0 0 1 2 2 18   20 22 24 26 28 29 30 30 30 31  1 0 0 1 33 35 34 1 1 0        0
0 0 1 77 78 79 77 1 0 1   1 61 62 1 0 0 1 1 1 1    1 0 0 1 29 30 30 30 30 31      1 1 1 1 34 36 35 33 1 0       0
0 0 1 76 77 78 76 1 0 0   1 62 62 1 1 0 0 0 0 0    0 0 0 1 29 30 31 30 30 31      32 33 34 35 36 37 36 35 1 1   0
0 0 1 75 76 77 75 1 1 0   1 1 62 62 1 0 0 0 0 0    0 0 0 1 1 30 32 34 33 33       32 33 34 35 36 37 36 34 32 1  0

0 1 1 74 75 76 75 74 1 1     1 1 62 62 1 1 0 0 1 1          1 0 0 0 1 1 1 36 35 35     1 1 1 1 36 38 37 36 33 1  0
0 1 73 74 75 74 73 72 69 66  65 63 63 62 61 1 1 1 1 56      1 1 0 0 0 0 1 1 38 39      1 0 0 1 38 39 39 38 35 1  0
0 1 72 73 74 73 72 70 68 67  66 64 64 64 62 61 60 60 59 58  55 1 1 1 1 0 0 1 40 39     1 0 0 1 40 41 40 38 1 1   0
0 1 72 72 73 73 72 70 68 68  68 66 65 65 64 63 62 61 60 54  57 56 55 53 1 0 0 1 44 43  1 0 1 1 42 42 41 39 1 0   0
0 1 70 71 71 72 71 70 69 68  68 67 66 65 63 62 61 60 59 58  58 57 56 54 1 1 1 1 48 47  1 1 1 42 43 43 41 38 1 0  0


0 1 70 69 70 71 71 71 70 69  68 66 65 63 61 60 59 58 57 55  56 55 54 55 54 52 50 50 53 52  46 44 44 43 44 43 41 1 1 0  0
0 1 69 68 69 69 70 69 69 68  67 65 63 61 60 58 57 1 1 1     52 51 53 52 52 53 52 51 51 50  48 46 46 45 43 42 40 1 0 0  0
0 1 1 67 67 68 68 67 67 66   65 64 62 60 1 1 1 1 0 1        1 1 1 1 50 50 50 51 50 49      48 47 46 44 43 41 1 1 0 0   0
0 0 1 1 66 65 65 64 64 63    62 62 1 1 1 0 0 0 0 0          0 0 0 0 1 1 47 48 48 47        45 45 45 43 41 1 1 0 0 0    0
0 0 0 1 1 1 61 60 60 1       1 1 1 0 0 0 0 0 0 0            0 0 0 0 0 1 1 1 1 45           41 41 41 1 1 1 0 0 0 0      0

0 0 0 0 0 1 1 1 1 1          0 0 0 0 0 0 0 0 0 0            0 0 0 0 0 0 0 0 1 1            1 1 1 1 0 0 0 0 0 0         0
`;
// y is zero by default, so last row (all zeroes) doesn't need to be calculated.


AFRAME.registerGeometry('canyon-terrain', {
  schema: {
    spacing: {default: 10},
    sunPosition: {type: 'vec3', default: {x:-1.0, y:1.0, z:-1.0}}
  },

  init: function (data) {
    // Creates geometry.
    const geometry = new THREE.PlaneGeometry((X_POINTS - 1) * data.spacing, (Z_POINTS - 1) * data.spacing, X_POINTS - 1, Z_POINTS - 1);
    geometry.rotateX(-Math.PI / 2);
    const vertices = geometry.attributes.position.array;
    const floatPatt = /\s*\S+/y;
    let match;
    let v = 0;
    while (match = floatPatt.exec(terrainHeights)) {
      let height = parseFloat(match[0]);
      height = height * -2;
      if (height < 0) {
        height -= 100;
      }
      vertices[v * 3 + 1] = height;
      ++v;
    }
    geometry.computeVertexNormals();
    this.geometry = geometry;
  }
});
